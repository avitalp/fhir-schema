/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	var app, fhir, schema, validator;

	__webpack_require__(3);

	__webpack_require__(4);

	__webpack_require__(5);

	__webpack_require__(6);

	__webpack_require__(10);

	fhir = __webpack_require__(11);

	schema = __webpack_require__(68);

	validator = fhir.load(schema);

	app = angular.module('app', ['ngCookies', 'ngRoute', 'ngAnimate', 'ui.codemirror']);

	app.run(function($rootScope, $window) {
	  return console.log('run');
	});

	app.config(function($routeProvider) {
	  var rp;
	  rp = $routeProvider;
	  rp.when('/', {
	    name: 'index',
	    templateUrl: '_index.jade',
	    controller: 'IndexCtrl',
	    reloadOnSearch: false
	  });
	  return rp.otherwise({
	    templateUrl: '404.jade'
	  });
	});

	app.controller('IndexCtrl', function($scope) {
	  var codemirrorExtraKeys;
	  $scope.resource = '{"resourceType": "Patient", "name": {"given": ["John"]}}';
	  $scope.update = function() {
	    var e, error, resource;
	    $scope.parseError = null;
	    try {
	      resource = JSON.parse($scope.resource);
	      $scope.result = validator.validate(resource);
	      return console.log($scope.result);
	    } catch (error) {
	      e = error;
	      $scope.result = null;
	      return $scope.parseError = e.toString();
	    }
	  };
	  $scope.update();
	  codemirrorExtraKeys = window.CodeMirror.normalizeKeyMap({
	    "Ctrl-Space": function() {
	      return $scope.$apply('doMapping()');
	    },
	    Tab: function(cm) {
	      return cm.replaceSelection("  ");
	    }
	  });
	  return $scope.codemirrorConfig = {
	    lineWrapping: false,
	    lineNumbers: true,
	    mode: 'javascript',
	    extraKeys: codemirrorExtraKeys,
	    viewportMargin: Infinity
	  };
	});


/***/ },
/* 1 */,
/* 2 */,
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "/index.html";

/***/ },
/* 4 */
/***/ function(module, exports) {

	var v1="<h3>Page not found</h3>";
	window.angular.module(["ng"]).run(["$templateCache",function(c){c.put("404.jade", v1)}]);
	module.exports=v1;

/***/ },
/* 5 */
/***/ function(module, exports) {

	var v1="<div class=\"main-menu\"><div class=\"container\"><a href=\"https://github.com/niquola/fhir-schema\"><h3> <img style=\"height: 20px\" src=\"https://raw.githubusercontent.com/ewoutkramer/fhir-net-api/master/icon-fhir-32.png\">fhir-schema</h3></a></div></div><div class=\"container\"><br><div class=\"row\"><div class=\"col-xs-12\"><textarea ng-model=\"resource\" ui-codemirror=\"codemirrorConfig\" ng-change=\"update()\" class=\"fh form-control\"></textarea><br><div ng-if=\"parseError\" class=\"alert alert-danger\">{{parseError}}</div></div></div><div ng-if=\"result.valid\" class=\"alert alert-success\">Valid Resource</div><div ng-repeat=\"err in result.errors\" ng-click=\"err.show = !err.show\" class=\"alert alert-danger\"> <h4 class=\"item\"><b>{{err.dataPath.replace('/','.')}} </b>{{err.message}} &nbsp;<code>{{err.params | json}}</code></h4><div ng-if=\"err.show\"> <br><pre>{{ err | json }}</pre></div></div></div>";
	window.angular.module(["ng"]).run(["$templateCache",function(c){c.put("_index.jade", v1)}]);
	module.exports=v1;

/***/ },
/* 6 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin

/***/ },
/* 7 */,
/* 8 */,
/* 9 */,
/* 10 */
/***/ function(module, exports) {

	'use strict';

	/**
	 * Binds a CodeMirror widget to a <textarea> element.
	 */
	angular.module('ui.codemirror', [])
	  .constant('uiCodemirrorConfig', {})
	  .directive('uiCodemirror', uiCodemirrorDirective);

	/**
	 * @ngInject
	 */
	function uiCodemirrorDirective($timeout, uiCodemirrorConfig) {

	  return {
	    restrict: 'EA',
	    require: '?ngModel',
	    compile: function compile() {

	      // Require CodeMirror
	      if (angular.isUndefined(window.CodeMirror)) {
	        throw new Error('ui-codemirror needs CodeMirror to work... (o rly?)');
	      }

	      return postLink;
	    }
	  };

	  function postLink(scope, iElement, iAttrs, ngModel) {

	    var codemirrorOptions = angular.extend(
	      { value: iElement.text() },
	      uiCodemirrorConfig.codemirror || {},
	      scope.$eval(iAttrs.uiCodemirror),
	      scope.$eval(iAttrs.uiCodemirrorOpts)
	    );

	    var codemirror = newCodemirrorEditor(iElement, codemirrorOptions);

	    configOptionsWatcher(
	      codemirror,
	      iAttrs.uiCodemirror || iAttrs.uiCodemirrorOpts,
	      scope
	    );

	    configNgModelLink(codemirror, ngModel, scope);

	    configUiRefreshAttribute(codemirror, iAttrs.uiRefresh, scope);

	    // Allow access to the CodeMirror instance through a broadcasted event
	    // eg: $broadcast('CodeMirror', function(cm){...});
	    scope.$on('CodeMirror', function(event, callback) {
	      if (angular.isFunction(callback)) {
	        callback(codemirror);
	      } else {
	        throw new Error('the CodeMirror event requires a callback function');
	      }
	    });

	    // onLoad callback
	    if (angular.isFunction(codemirrorOptions.onLoad)) {
	      codemirrorOptions.onLoad(codemirror);
	    }
	  }

	  function newCodemirrorEditor(iElement, codemirrorOptions) {
	    var codemirrot;

	    if (iElement[0].tagName === 'TEXTAREA') {
	      // Might bug but still ...
	      codemirrot = window.CodeMirror.fromTextArea(iElement[0], codemirrorOptions);
	    } else {
	      iElement.html('');
	      codemirrot = new window.CodeMirror(function(cm_el) {
	        iElement.append(cm_el);
	      }, codemirrorOptions);
	    }

	    return codemirrot;
	  }

	  function configOptionsWatcher(codemirrot, uiCodemirrorAttr, scope) {
	    if (!uiCodemirrorAttr) { return; }

	    var codemirrorDefaultsKeys = Object.keys(window.CodeMirror.defaults);
	    scope.$watch(uiCodemirrorAttr, updateOptions, true);
	    function updateOptions(newValues, oldValue) {
	      if (!angular.isObject(newValues)) { return; }
	      codemirrorDefaultsKeys.forEach(function(key) {
	        if (newValues.hasOwnProperty(key)) {

	          if (oldValue && newValues[key] === oldValue[key]) {
	            return;
	          }

	          codemirrot.setOption(key, newValues[key]);
	        }
	      });
	    }
	  }

	  function configNgModelLink(codemirror, ngModel, scope) {
	    if (!ngModel) { return; }
	    // CodeMirror expects a string, so make sure it gets one.
	    // This does not change the model.
	    ngModel.$formatters.push(function(value) {
	      if (angular.isUndefined(value) || value === null) {
	        return '';
	      } else if (angular.isObject(value) || angular.isArray(value)) {
	        throw new Error('ui-codemirror cannot use an object or an array as a model');
	      }
	      return value;
	    });


	    // Override the ngModelController $render method, which is what gets called when the model is updated.
	    // This takes care of the synchronizing the codeMirror element with the underlying model, in the case that it is changed by something else.
	    ngModel.$render = function() {
	      //Code mirror expects a string so make sure it gets one
	      //Although the formatter have already done this, it can be possible that another formatter returns undefined (for example the required directive)
	      var safeViewValue = ngModel.$viewValue || '';
	      codemirror.setValue(safeViewValue);
	    };


	    // Keep the ngModel in sync with changes from CodeMirror
	    codemirror.on('change', function(instance) {
	      var newValue = instance.getValue();
	      if (newValue !== ngModel.$viewValue) {
	        scope.$evalAsync(function() {
	          ngModel.$setViewValue(newValue);
	        });
	      }
	    });
	  }

	  function configUiRefreshAttribute(codeMirror, uiRefreshAttr, scope) {
	    if (!uiRefreshAttr) { return; }

	    scope.$watch(uiRefreshAttr, function(newVal, oldVal) {
	      // Skip the initial watch firing
	      if (newVal !== oldVal) {
	        $timeout(function() {
	          codeMirror.refresh();
	        });
	      }
	    });
	  }

	}


/***/ },
/* 11 */
/***/ function(module, exports, __webpack_require__) {

	var gen = __webpack_require__(12);
	var ajv = __webpack_require__(16);
	var utils = __webpack_require__(15);

	function addCustomKeyword(validator){
	    var rootschema = {
	        inline: function (it, data){
	            var $data = 'data' + (it.dataLevel || '');
	            var out = "";
	            var pairs = [];
	            for(var k in data.schemas){
	                var $refVal = it.resolveRef(it.baseId, data.schemas[k], it.isRoot);
	                $refVal =  $refVal.code || $refVal;
	                if ($refVal === undefined) {
	                    throw new Error("Could not resolve" + data.schemas[k]);
	                }
	                pairs.push([k, $refVal]);
	            }
	            var attrs = pairs.map(function(p){
	                return p[0] + ':' + p[1];
	            }).join(',');
	            return "(function(){ var ref = {" + attrs + "}[" + $data + ".resourceType]; "
	                + " var res = ref("+ $data +", (dataPath || '')); "
	                + " vErrors = ref.errors;"
	                + " errors = ref.errors ? ref.errors.length : errors;"
	                + " return true; })()";
	        }
	    };
	    validator.addKeyword('schemaProperty', rootschema);
	}

	exports.load = function(schema){
	    var schemaProperty = {
	        keyword: 'resourceType',
	        schemas: {}
	    };

	    for(var k in schema.definitions){
	        schemaProperty.schemas[k] = gen.typeRef(k);
	    }
	    schema.schemaProperty = schemaProperty;
	    var validator = ajv({allErrors: true});

	    addCustomKeyword(validator);

	    var validate = validator.compile(schema);

	    schema.validate = function(res){
	        var rt = res.resourceType;
	        utils.assert(rt, "expected resourceType prop");
	        var sch = schema.definitions[rt];
	        utils.assert(sch, "No schema for " + rt);
	        var valid = validate(res);
	        if (!valid){
	            return {errors: utils.copy(validate.errors), valid: false};
	        }else{
	            return {valid: true};
	        }
	    };
	    return schema;
	}

	exports.makeSchema = function(cb){
	    var schema = gen.makeSchema(cb);
	    return exports.load(schema)
	};


/***/ },
/* 12 */
/***/ function(module, exports, __webpack_require__) {

	tv4 = __webpack_require__(13);

	settings = {validate: {references: false}};

	exports.settings = settings;
	exports.typeRef = typeRef;
	exports.element2schema = element2schema;
	exports.makeSchema = makeSchema;

	var OVERRIDEN = __webpack_require__(14);
	var utils = __webpack_require__(15);

	var isPrimitive = function(tp){
	    return ['string', 'integer', 'number', 'boolean'].indexOf(tp) > -1;
	};

	function typeRef(tp){
	    utils.assert(tp, "expected type");
	    return (settings.refPrefix || '') + '#/definitions/' + (tp == 'id' ? 'fhir_id' : tp);
	};


	var isRequired = function(el){ return (el.min && el.min === 1) || false; };

	var minItems = function(el){ return (el.min && el.min === 0) ? 0 : el.min; };

	var isPolymorphic = function(el){ return el.path.indexOf('[x]') > -1;};

	var buildReferenceSchema = function(el){
	    var resources = el.type.reduce(function(acc, tp){
	        if(tp.profile){ acc.push(utils.last(tp.profile[0].split('/'))); }
	        return acc;
	    }, []);

	    if(!settings.validate.references || resources.length === 0 || resources.indexOf('Resource') > -1){
	        return {$ref: typeRef('Reference')};
	    }
	    var pattern  = '/(#|' + resources.join('|') + ')/i';
	    return { allOf: [
	        {$ref: typeRef('Reference')},
	        {type: 'object', properties: {reference: {type: 'string', pattern: pattern}}}
	    ]};
	};

	var elementType = function(el){
	    if(!el.type) {return 'object';}
	    var code = utils.getIn(el, ['type', 0, 'code']);
	    if (code === 'Reference') {
	        return buildReferenceSchema(el);
	    }

	    utils.assert(el.type.length == 1, el.path + JSON.stringify(el.type));
	    utils.assert(code, JSON.stringify(el));

	    if(isPrimitive(code)) {
	        return code;
	    }
	    if (code === 'BackboneElement') {
	        return 'object';
	    }
	    return {$ref: typeRef(code)};
	};

	var expandPath = function(spath, tp){
	    var path = spath.split('.');
	    var last = path[path.length - 1];
	    var newpath = path.slice(0, path.length - 1);
	    newpath.push(last.replace('[x]', utils.capitalize(tp.code)));
	    return newpath.join('.');
	}

	var isFhirPrimitive = function(el){
	    var tp = utils.getIn(el, ['type', 0, 'code']);
	    return tp && tp[0].toLowerCase() == tp[0];
	};

	var EXTENSION = {
	    type: 'object',
	    properties: {
	        extension: {
	            type: 'array',
	            items: {
	                oneOf: [{$ref: typeRef('Extension')}, {type: 'null'}]
	            }
	        }
	    }
	};
	var EXTENSION_ARRAY= {
	    type: 'array',
	    items: {oneOf: [EXTENSION, {type: 'null'}]}
	};

	var primitiveExtensions = function(prop, el){
	    if(isFhirPrimitive(el)){
	        var path = utils.copy(prop.$$path);
	        path[path.length - 1] = "_" + utils.last(path);
	        var eprop = utils.merge((prop.type == 'array') ? EXTENSION_ARRAY : EXTENSION, {$$path: path});
	        return [prop, eprop];
	    } else {
	        return [prop];
	    }
	};

	var onlyTypedElement2schema = function(el){
	    utils.assert(el.path, JSON.stringify(el));
	    var path = el.path.split('.');

	    var res = {$$path: path, title: el.short};
	    if(settings.build){
	        delete res.title;
	    }
	    if(path.length == 1){
	        //root element
	        // res.id = path[0]
	        res.type = 'object';
	    } else if (el.max === '*'){
	        res.type = 'array' ;
	        res.minItems = minItems(el);
	        res.items = {};
	        var etp = elementType(el);
	        if(etp.$ref){
	            res.items.$ref = etp.$ref ;
	        }else if(etp.allOf){
	            res.items.allOf = etp.allOf;
	        }else{
	            res.items.type = etp;
	        }
	        //HACK: handle null in extension and primitve arrays
	        if(path[path.length - 1] == 'extension' || isFhirPrimitive(el)){
	            res.items = {oneOf: [res.items, {type: 'null'}]} ;
	        }
	    } else {
	        // res.$$required = isRequired(el);
	        var etp = elementType(el);
	        if(etp.$ref){
	            res.$ref = etp.$ref;
	        }else if(etp.allOf){
	            res.allOf = etp.allOf;
	        }else{
	           res.type = etp;
	        }
	    }
	    if(res.type == 'object'){
	        res.additionalProperties = false;
	        res.properties = res.properties || {};
	        res.properties.fhir_comments = {type: 'array', items: {type: 'string'}};
	    }
	    return primitiveExtensions(res, el);
	};

	function element2schema(el){
	    utils.assert(el.path, JSON.stringify(el));
	    if(isPolymorphic(el)){
	        var groupedTypes = el.type.reduce(function(acc, tp){
	            acc[tp.code] = acc[tp.code] || [];
	            acc[tp.code].push(tp);
	            return acc;
	        }, {});

	        var result = [];
	        for(var code in groupedTypes){
	            var types = groupedTypes[code];
	            var newpath = expandPath(el.path, {code: code});
	            result.push.apply(result, onlyTypedElement2schema(
	                utils.merge(el, {type: types, path: newpath})
	            ));
	        }
	        return result;
	    }
	    return onlyTypedElement2schema(el);
	};


	var addToSchema = function (sch, elem){
	    var path = elem.$$path;
	    delete elem.$$path;
	    var cur = sch;
	    sch.properties = sch.properties || {};
	    for(var i = 0; i < path.length - 1; i++){
	        var item = path[i];
	        cur.properties = cur.properties || {};
	        cur = cur.properties[item];
	        utils.assert(cur, item + JSON.stringify(path));
	        if(cur.type && cur.type == 'array'){
	            cur = cur.items;
	        }
	    }
	    item = path[path.length - 1];
	    if(cur.type == 'array'){
	        cur.item.properties = cur.item.properties || {};
	        cur.item.properties[item] = elem;
	    } else {
	        cur.properties = cur.properties || {};
	        cur.properties[item] = elem;
	    }
	    return sch;
	};
	var addStructureDefinition = function(schema, structureDefinition){
	    var rt = structureDefinition.name;
	    if(rt == 'id') {return schema;}
	    if(OVERRIDEN[rt]) {return schema;}
	    if(isPrimitive(rt)) {return schema;}
	    var sd =  structureDefinition
	        .snapshot
	        .element
	        .reduce(function(acc, el){
	            // FIX: path for inherited data types
	            var path = [rt].concat(el.path.split('.').slice(1)).join('.');
	            el.path = path;
	            var res = element2schema(el);
	            if(!res) throw new Error('UPS:' + el);
	            return res.reduce(function(acc, el){
	                return addToSchema(acc, el);
	            }, acc);
	        }, {});

	    schema.definitions = schema.definitions || {};
	    var resourceSchema = sd.properties[rt];
	    if(resourceSchema && resourceSchema.properties) {
	        resourceSchema.properties.resourceType = {type: 'string'};
	    }
	    schema.definitions[rt] = resourceSchema;
	    return schema;
	};

	var addValueSet = function(schema, valueSet){
	};

	var add = function(schema, resource){
	    var rt = resource.resourceType;
	    if(rt == 'StructureDefinition'){
	        return  addStructureDefinition(schema, resource);
	    } else if (rt == 'ValueSet'){
	        return addValueSet(schema, resource);
	    } else if (rt == 'Bundle'){
	        resource.entry.reduce(function(acc, entry){
	            return add(acc, entry.resource);
	        }, schema);
	    }else {
	        return schema;
	    }
	};

	var BASE_PROFILES = ['Resource', 'DomainResource', 'Element', 'BackboneElement'];

	var fixSchema = function(schema){
	    BASE_PROFILES.forEach(function(x){
	        if(schema.definitions[x]){
	            schema.definitions[x].additionalProperties = true;
	        }
	    });
	    for(var k in OVERRIDEN) {
	        var v = OVERRIDEN[k];
	        schema.definitions[k] = v;
	    }
	    return schema;
	};

	function makeSchema(cb, opts){
	    var schema = { type: 'object' };
	    var oldSettings = settings; 

	    if(opts){ settings = utils.merge(settings, opts); }

	    schema.add = function(res){ add(schema, res); };

	    schema = cb(schema);
	    fixSchema(schema);

	    settings = oldSettings;
	    return schema;
	};


/***/ },
/* 13 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*
	Author: Geraint Luff and others
	Year: 2013

	This code is released into the "public domain" by its author(s).  Anybody may use, alter and distribute the code without restriction.  The author makes no guarantees, and takes no liability of any kind for use of this code.

	If you find a bug or make an improvement, it would be courteous to let the author know, but it is not compulsory.
	*/
	(function (global, factory) {
	  if (true) {
	    // AMD. Register as an anonymous module.
	    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	  } else if (typeof module !== 'undefined' && module.exports){
	    // CommonJS. Define export.
	    module.exports = factory();
	  } else {
	    // Browser globals
	    global.tv4 = factory();
	  }
	}(this, function () {

	// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys?redirectlocale=en-US&redirectslug=JavaScript%2FReference%2FGlobal_Objects%2FObject%2Fkeys
	if (!Object.keys) {
		Object.keys = (function () {
			var hasOwnProperty = Object.prototype.hasOwnProperty,
				hasDontEnumBug = !({toString: null}).propertyIsEnumerable('toString'),
				dontEnums = [
					'toString',
					'toLocaleString',
					'valueOf',
					'hasOwnProperty',
					'isPrototypeOf',
					'propertyIsEnumerable',
					'constructor'
				],
				dontEnumsLength = dontEnums.length;

			return function (obj) {
				if (typeof obj !== 'object' && typeof obj !== 'function' || obj === null) {
					throw new TypeError('Object.keys called on non-object');
				}

				var result = [];

				for (var prop in obj) {
					if (hasOwnProperty.call(obj, prop)) {
						result.push(prop);
					}
				}

				if (hasDontEnumBug) {
					for (var i=0; i < dontEnumsLength; i++) {
						if (hasOwnProperty.call(obj, dontEnums[i])) {
							result.push(dontEnums[i]);
						}
					}
				}
				return result;
			};
		})();
	}
	// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/create
	if (!Object.create) {
		Object.create = (function(){
			function F(){}

			return function(o){
				if (arguments.length !== 1) {
					throw new Error('Object.create implementation only accepts one parameter.');
				}
				F.prototype = o;
				return new F();
			};
		})();
	}
	// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/isArray?redirectlocale=en-US&redirectslug=JavaScript%2FReference%2FGlobal_Objects%2FArray%2FisArray
	if(!Array.isArray) {
		Array.isArray = function (vArg) {
			return Object.prototype.toString.call(vArg) === "[object Array]";
		};
	}
	// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf?redirectlocale=en-US&redirectslug=JavaScript%2FReference%2FGlobal_Objects%2FArray%2FindexOf
	if (!Array.prototype.indexOf) {
		Array.prototype.indexOf = function (searchElement /*, fromIndex */ ) {
			if (this === null) {
				throw new TypeError();
			}
			var t = Object(this);
			var len = t.length >>> 0;

			if (len === 0) {
				return -1;
			}
			var n = 0;
			if (arguments.length > 1) {
				n = Number(arguments[1]);
				if (n !== n) { // shortcut for verifying if it's NaN
					n = 0;
				} else if (n !== 0 && n !== Infinity && n !== -Infinity) {
					n = (n > 0 || -1) * Math.floor(Math.abs(n));
				}
			}
			if (n >= len) {
				return -1;
			}
			var k = n >= 0 ? n : Math.max(len - Math.abs(n), 0);
			for (; k < len; k++) {
				if (k in t && t[k] === searchElement) {
					return k;
				}
			}
			return -1;
		};
	}

	// Grungey Object.isFrozen hack
	if (!Object.isFrozen) {
		Object.isFrozen = function (obj) {
			var key = "tv4_test_frozen_key";
			while (obj.hasOwnProperty(key)) {
				key += Math.random();
			}
			try {
				obj[key] = true;
				delete obj[key];
				return false;
			} catch (e) {
				return true;
			}
		};
	}
	// Based on: https://github.com/geraintluff/uri-templates, but with all the de-substitution stuff removed

	var uriTemplateGlobalModifiers = {
		"+": true,
		"#": true,
		".": true,
		"/": true,
		";": true,
		"?": true,
		"&": true
	};
	var uriTemplateSuffices = {
		"*": true
	};

	function notReallyPercentEncode(string) {
		return encodeURI(string).replace(/%25[0-9][0-9]/g, function (doubleEncoded) {
			return "%" + doubleEncoded.substring(3);
		});
	}

	function uriTemplateSubstitution(spec) {
		var modifier = "";
		if (uriTemplateGlobalModifiers[spec.charAt(0)]) {
			modifier = spec.charAt(0);
			spec = spec.substring(1);
		}
		var separator = "";
		var prefix = "";
		var shouldEscape = true;
		var showVariables = false;
		var trimEmptyString = false;
		if (modifier === '+') {
			shouldEscape = false;
		} else if (modifier === ".") {
			prefix = ".";
			separator = ".";
		} else if (modifier === "/") {
			prefix = "/";
			separator = "/";
		} else if (modifier === '#') {
			prefix = "#";
			shouldEscape = false;
		} else if (modifier === ';') {
			prefix = ";";
			separator = ";";
			showVariables = true;
			trimEmptyString = true;
		} else if (modifier === '?') {
			prefix = "?";
			separator = "&";
			showVariables = true;
		} else if (modifier === '&') {
			prefix = "&";
			separator = "&";
			showVariables = true;
		}

		var varNames = [];
		var varList = spec.split(",");
		var varSpecs = [];
		var varSpecMap = {};
		for (var i = 0; i < varList.length; i++) {
			var varName = varList[i];
			var truncate = null;
			if (varName.indexOf(":") !== -1) {
				var parts = varName.split(":");
				varName = parts[0];
				truncate = parseInt(parts[1], 10);
			}
			var suffices = {};
			while (uriTemplateSuffices[varName.charAt(varName.length - 1)]) {
				suffices[varName.charAt(varName.length - 1)] = true;
				varName = varName.substring(0, varName.length - 1);
			}
			var varSpec = {
				truncate: truncate,
				name: varName,
				suffices: suffices
			};
			varSpecs.push(varSpec);
			varSpecMap[varName] = varSpec;
			varNames.push(varName);
		}
		var subFunction = function (valueFunction) {
			var result = "";
			var startIndex = 0;
			for (var i = 0; i < varSpecs.length; i++) {
				var varSpec = varSpecs[i];
				var value = valueFunction(varSpec.name);
				if (value === null || value === undefined || (Array.isArray(value) && value.length === 0) || (typeof value === 'object' && Object.keys(value).length === 0)) {
					startIndex++;
					continue;
				}
				if (i === startIndex) {
					result += prefix;
				} else {
					result += (separator || ",");
				}
				if (Array.isArray(value)) {
					if (showVariables) {
						result += varSpec.name + "=";
					}
					for (var j = 0; j < value.length; j++) {
						if (j > 0) {
							result += varSpec.suffices['*'] ? (separator || ",") : ",";
							if (varSpec.suffices['*'] && showVariables) {
								result += varSpec.name + "=";
							}
						}
						result += shouldEscape ? encodeURIComponent(value[j]).replace(/!/g, "%21") : notReallyPercentEncode(value[j]);
					}
				} else if (typeof value === "object") {
					if (showVariables && !varSpec.suffices['*']) {
						result += varSpec.name + "=";
					}
					var first = true;
					for (var key in value) {
						if (!first) {
							result += varSpec.suffices['*'] ? (separator || ",") : ",";
						}
						first = false;
						result += shouldEscape ? encodeURIComponent(key).replace(/!/g, "%21") : notReallyPercentEncode(key);
						result += varSpec.suffices['*'] ? '=' : ",";
						result += shouldEscape ? encodeURIComponent(value[key]).replace(/!/g, "%21") : notReallyPercentEncode(value[key]);
					}
				} else {
					if (showVariables) {
						result += varSpec.name;
						if (!trimEmptyString || value !== "") {
							result += "=";
						}
					}
					if (varSpec.truncate != null) {
						value = value.substring(0, varSpec.truncate);
					}
					result += shouldEscape ? encodeURIComponent(value).replace(/!/g, "%21"): notReallyPercentEncode(value);
				}
			}
			return result;
		};
		subFunction.varNames = varNames;
		return {
			prefix: prefix,
			substitution: subFunction
		};
	}

	function UriTemplate(template) {
		if (!(this instanceof UriTemplate)) {
			return new UriTemplate(template);
		}
		var parts = template.split("{");
		var textParts = [parts.shift()];
		var prefixes = [];
		var substitutions = [];
		var varNames = [];
		while (parts.length > 0) {
			var part = parts.shift();
			var spec = part.split("}")[0];
			var remainder = part.substring(spec.length + 1);
			var funcs = uriTemplateSubstitution(spec);
			substitutions.push(funcs.substitution);
			prefixes.push(funcs.prefix);
			textParts.push(remainder);
			varNames = varNames.concat(funcs.substitution.varNames);
		}
		this.fill = function (valueFunction) {
			var result = textParts[0];
			for (var i = 0; i < substitutions.length; i++) {
				var substitution = substitutions[i];
				result += substitution(valueFunction);
				result += textParts[i + 1];
			}
			return result;
		};
		this.varNames = varNames;
		this.template = template;
	}
	UriTemplate.prototype = {
		toString: function () {
			return this.template;
		},
		fillFromObject: function (obj) {
			return this.fill(function (varName) {
				return obj[varName];
			});
		}
	};
	var ValidatorContext = function ValidatorContext(parent, collectMultiple, errorReporter, checkRecursive, trackUnknownProperties) {
		this.missing = [];
		this.missingMap = {};
		this.formatValidators = parent ? Object.create(parent.formatValidators) : {};
		this.schemas = parent ? Object.create(parent.schemas) : {};
		this.collectMultiple = collectMultiple;
		this.errors = [];
		this.handleError = collectMultiple ? this.collectError : this.returnError;
		if (checkRecursive) {
			this.checkRecursive = true;
			this.scanned = [];
			this.scannedFrozen = [];
			this.scannedFrozenSchemas = [];
			this.scannedFrozenValidationErrors = [];
			this.validatedSchemasKey = 'tv4_validation_id';
			this.validationErrorsKey = 'tv4_validation_errors_id';
		}
		if (trackUnknownProperties) {
			this.trackUnknownProperties = true;
			this.knownPropertyPaths = {};
			this.unknownPropertyPaths = {};
		}
		this.errorReporter = errorReporter || defaultErrorReporter('en');
		if (typeof this.errorReporter === 'string') {
			throw new Error('debug');
		}
		this.definedKeywords = {};
		if (parent) {
			for (var key in parent.definedKeywords) {
				this.definedKeywords[key] = parent.definedKeywords[key].slice(0);
			}
		}
	};
	ValidatorContext.prototype.defineKeyword = function (keyword, keywordFunction) {
		this.definedKeywords[keyword] = this.definedKeywords[keyword] || [];
		this.definedKeywords[keyword].push(keywordFunction);
	};
	ValidatorContext.prototype.createError = function (code, messageParams, dataPath, schemaPath, subErrors, data, schema) {
		var error = new ValidationError(code, messageParams, dataPath, schemaPath, subErrors);
		error.message = this.errorReporter(error, data, schema);
		return error;
	};
	ValidatorContext.prototype.returnError = function (error) {
		return error;
	};
	ValidatorContext.prototype.collectError = function (error) {
		if (error) {
			this.errors.push(error);
		}
		return null;
	};
	ValidatorContext.prototype.prefixErrors = function (startIndex, dataPath, schemaPath) {
		for (var i = startIndex; i < this.errors.length; i++) {
			this.errors[i] = this.errors[i].prefixWith(dataPath, schemaPath);
		}
		return this;
	};
	ValidatorContext.prototype.banUnknownProperties = function (data, schema) {
		for (var unknownPath in this.unknownPropertyPaths) {
			var error = this.createError(ErrorCodes.UNKNOWN_PROPERTY, {path: unknownPath}, unknownPath, "", null, data, schema);
			var result = this.handleError(error);
			if (result) {
				return result;
			}
		}
		return null;
	};

	ValidatorContext.prototype.addFormat = function (format, validator) {
		if (typeof format === 'object') {
			for (var key in format) {
				this.addFormat(key, format[key]);
			}
			return this;
		}
		this.formatValidators[format] = validator;
	};
	ValidatorContext.prototype.resolveRefs = function (schema, urlHistory) {
		if (schema['$ref'] !== undefined) {
			urlHistory = urlHistory || {};
			if (urlHistory[schema['$ref']]) {
				return this.createError(ErrorCodes.CIRCULAR_REFERENCE, {urls: Object.keys(urlHistory).join(', ')}, '', '', null, undefined, schema);
			}
			urlHistory[schema['$ref']] = true;
			schema = this.getSchema(schema['$ref'], urlHistory);
		}
		return schema;
	};
	ValidatorContext.prototype.getSchema = function (url, urlHistory) {
		var schema;
		if (this.schemas[url] !== undefined) {
			schema = this.schemas[url];
			return this.resolveRefs(schema, urlHistory);
		}
		var baseUrl = url;
		var fragment = "";
		if (url.indexOf('#') !== -1) {
			fragment = url.substring(url.indexOf("#") + 1);
			baseUrl = url.substring(0, url.indexOf("#"));
		}
		if (typeof this.schemas[baseUrl] === 'object') {
			schema = this.schemas[baseUrl];
			var pointerPath = decodeURIComponent(fragment);
			if (pointerPath === "") {
				return this.resolveRefs(schema, urlHistory);
			} else if (pointerPath.charAt(0) !== "/") {
				return undefined;
			}
			var parts = pointerPath.split("/").slice(1);
			for (var i = 0; i < parts.length; i++) {
				var component = parts[i].replace(/~1/g, "/").replace(/~0/g, "~");
				if (schema[component] === undefined) {
					schema = undefined;
					break;
				}
				schema = schema[component];
			}
			if (schema !== undefined) {
				return this.resolveRefs(schema, urlHistory);
			}
		}
		if (this.missing[baseUrl] === undefined) {
			this.missing.push(baseUrl);
			this.missing[baseUrl] = baseUrl;
			this.missingMap[baseUrl] = baseUrl;
		}
	};
	ValidatorContext.prototype.searchSchemas = function (schema, url) {
		if (Array.isArray(schema)) {
			for (var i = 0; i < schema.length; i++) {
				this.searchSchemas(schema[i], url);
			}
		} else if (schema && typeof schema === "object") {
			if (typeof schema.id === "string") {
				if (isTrustedUrl(url, schema.id)) {
					if (this.schemas[schema.id] === undefined) {
						this.schemas[schema.id] = schema;
					}
				}
			}
			for (var key in schema) {
				if (key !== "enum") {
					if (typeof schema[key] === "object") {
						this.searchSchemas(schema[key], url);
					} else if (key === "$ref") {
						var uri = getDocumentUri(schema[key]);
						if (uri && this.schemas[uri] === undefined && this.missingMap[uri] === undefined) {
							this.missingMap[uri] = uri;
						}
					}
				}
			}
		}
	};
	ValidatorContext.prototype.addSchema = function (url, schema) {
		//overload
		if (typeof url !== 'string' || typeof schema === 'undefined') {
			if (typeof url === 'object' && typeof url.id === 'string') {
				schema = url;
				url = schema.id;
			}
			else {
				return;
			}
		}
		if (url === getDocumentUri(url) + "#") {
			// Remove empty fragment
			url = getDocumentUri(url);
		}
		this.schemas[url] = schema;
		delete this.missingMap[url];
		normSchema(schema, url);
		this.searchSchemas(schema, url);
	};

	ValidatorContext.prototype.getSchemaMap = function () {
		var map = {};
		for (var key in this.schemas) {
			map[key] = this.schemas[key];
		}
		return map;
	};

	ValidatorContext.prototype.getSchemaUris = function (filterRegExp) {
		var list = [];
		for (var key in this.schemas) {
			if (!filterRegExp || filterRegExp.test(key)) {
				list.push(key);
			}
		}
		return list;
	};

	ValidatorContext.prototype.getMissingUris = function (filterRegExp) {
		var list = [];
		for (var key in this.missingMap) {
			if (!filterRegExp || filterRegExp.test(key)) {
				list.push(key);
			}
		}
		return list;
	};

	ValidatorContext.prototype.dropSchemas = function () {
		this.schemas = {};
		this.reset();
	};
	ValidatorContext.prototype.reset = function () {
		this.missing = [];
		this.missingMap = {};
		this.errors = [];
	};

	ValidatorContext.prototype.validateAll = function (data, schema, dataPathParts, schemaPathParts, dataPointerPath) {
		var topLevel;
		schema = this.resolveRefs(schema);
		if (!schema) {
			return null;
		} else if (schema instanceof ValidationError) {
			this.errors.push(schema);
			return schema;
		}

		var startErrorCount = this.errors.length;
		var frozenIndex, scannedFrozenSchemaIndex = null, scannedSchemasIndex = null;
		if (this.checkRecursive && data && typeof data === 'object') {
			topLevel = !this.scanned.length;
			if (data[this.validatedSchemasKey]) {
				var schemaIndex = data[this.validatedSchemasKey].indexOf(schema);
				if (schemaIndex !== -1) {
					this.errors = this.errors.concat(data[this.validationErrorsKey][schemaIndex]);
					return null;
				}
			}
			if (Object.isFrozen(data)) {
				frozenIndex = this.scannedFrozen.indexOf(data);
				if (frozenIndex !== -1) {
					var frozenSchemaIndex = this.scannedFrozenSchemas[frozenIndex].indexOf(schema);
					if (frozenSchemaIndex !== -1) {
						this.errors = this.errors.concat(this.scannedFrozenValidationErrors[frozenIndex][frozenSchemaIndex]);
						return null;
					}
				}
			}
			this.scanned.push(data);
			if (Object.isFrozen(data)) {
				if (frozenIndex === -1) {
					frozenIndex = this.scannedFrozen.length;
					this.scannedFrozen.push(data);
					this.scannedFrozenSchemas.push([]);
				}
				scannedFrozenSchemaIndex = this.scannedFrozenSchemas[frozenIndex].length;
				this.scannedFrozenSchemas[frozenIndex][scannedFrozenSchemaIndex] = schema;
				this.scannedFrozenValidationErrors[frozenIndex][scannedFrozenSchemaIndex] = [];
			} else {
				if (!data[this.validatedSchemasKey]) {
					try {
						Object.defineProperty(data, this.validatedSchemasKey, {
							value: [],
							configurable: true
						});
						Object.defineProperty(data, this.validationErrorsKey, {
							value: [],
							configurable: true
						});
					} catch (e) {
						//IE 7/8 workaround
						data[this.validatedSchemasKey] = [];
						data[this.validationErrorsKey] = [];
					}
				}
				scannedSchemasIndex = data[this.validatedSchemasKey].length;
				data[this.validatedSchemasKey][scannedSchemasIndex] = schema;
				data[this.validationErrorsKey][scannedSchemasIndex] = [];
			}
		}

		var errorCount = this.errors.length;
		var error = this.validateBasic(data, schema, dataPointerPath)
			|| this.validateNumeric(data, schema, dataPointerPath)
			|| this.validateString(data, schema, dataPointerPath)
			|| this.validateArray(data, schema, dataPointerPath)
			|| this.validateObject(data, schema, dataPointerPath)
			|| this.validateCombinations(data, schema, dataPointerPath)
			|| this.validateHypermedia(data, schema, dataPointerPath)
			|| this.validateFormat(data, schema, dataPointerPath)
			|| this.validateDefinedKeywords(data, schema, dataPointerPath)
			|| null;

		if (topLevel) {
			while (this.scanned.length) {
				var item = this.scanned.pop();
				delete item[this.validatedSchemasKey];
			}
			this.scannedFrozen = [];
			this.scannedFrozenSchemas = [];
		}

		if (error || errorCount !== this.errors.length) {
			while ((dataPathParts && dataPathParts.length) || (schemaPathParts && schemaPathParts.length)) {
				var dataPart = (dataPathParts && dataPathParts.length) ? "" + dataPathParts.pop() : null;
				var schemaPart = (schemaPathParts && schemaPathParts.length) ? "" + schemaPathParts.pop() : null;
				if (error) {
					error = error.prefixWith(dataPart, schemaPart);
				}
				this.prefixErrors(errorCount, dataPart, schemaPart);
			}
		}

		if (scannedFrozenSchemaIndex !== null) {
			this.scannedFrozenValidationErrors[frozenIndex][scannedFrozenSchemaIndex] = this.errors.slice(startErrorCount);
		} else if (scannedSchemasIndex !== null) {
			data[this.validationErrorsKey][scannedSchemasIndex] = this.errors.slice(startErrorCount);
		}

		return this.handleError(error);
	};
	ValidatorContext.prototype.validateFormat = function (data, schema) {
		if (typeof schema.format !== 'string' || !this.formatValidators[schema.format]) {
			return null;
		}
		var errorMessage = this.formatValidators[schema.format].call(null, data, schema);
		if (typeof errorMessage === 'string' || typeof errorMessage === 'number') {
			return this.createError(ErrorCodes.FORMAT_CUSTOM, {message: errorMessage}, '', '/format', null, data, schema);
		} else if (errorMessage && typeof errorMessage === 'object') {
			return this.createError(ErrorCodes.FORMAT_CUSTOM, {message: errorMessage.message || "?"}, errorMessage.dataPath || '', errorMessage.schemaPath || "/format", null, data, schema);
		}
		return null;
	};
	ValidatorContext.prototype.validateDefinedKeywords = function (data, schema, dataPointerPath) {
		for (var key in this.definedKeywords) {
			if (typeof schema[key] === 'undefined') {
				continue;
			}
			var validationFunctions = this.definedKeywords[key];
			for (var i = 0; i < validationFunctions.length; i++) {
				var func = validationFunctions[i];
				var result = func(data, schema[key], schema, dataPointerPath);
				if (typeof result === 'string' || typeof result === 'number') {
					return this.createError(ErrorCodes.KEYWORD_CUSTOM, {key: key, message: result}, '', '', null, data, schema).prefixWith(null, key);
				} else if (result && typeof result === 'object') {
					var code = result.code;
					if (typeof code === 'string') {
						if (!ErrorCodes[code]) {
							throw new Error('Undefined error code (use defineError): ' + code);
						}
						code = ErrorCodes[code];
					} else if (typeof code !== 'number') {
						code = ErrorCodes.KEYWORD_CUSTOM;
					}
					var messageParams = (typeof result.message === 'object') ? result.message : {key: key, message: result.message || "?"};
					var schemaPath = result.schemaPath || ("/" + key.replace(/~/g, '~0').replace(/\//g, '~1'));
					return this.createError(code, messageParams, result.dataPath || null, schemaPath, null, data, schema);
				}
			}
		}
		return null;
	};

	function recursiveCompare(A, B) {
		if (A === B) {
			return true;
		}
		if (A && B && typeof A === "object" && typeof B === "object") {
			if (Array.isArray(A) !== Array.isArray(B)) {
				return false;
			} else if (Array.isArray(A)) {
				if (A.length !== B.length) {
					return false;
				}
				for (var i = 0; i < A.length; i++) {
					if (!recursiveCompare(A[i], B[i])) {
						return false;
					}
				}
			} else {
				var key;
				for (key in A) {
					if (B[key] === undefined && A[key] !== undefined) {
						return false;
					}
				}
				for (key in B) {
					if (A[key] === undefined && B[key] !== undefined) {
						return false;
					}
				}
				for (key in A) {
					if (!recursiveCompare(A[key], B[key])) {
						return false;
					}
				}
			}
			return true;
		}
		return false;
	}

	ValidatorContext.prototype.validateBasic = function validateBasic(data, schema, dataPointerPath) {
		var error;
		if (error = this.validateType(data, schema, dataPointerPath)) {
			return error.prefixWith(null, "type");
		}
		if (error = this.validateEnum(data, schema, dataPointerPath)) {
			return error.prefixWith(null, "type");
		}
		return null;
	};

	ValidatorContext.prototype.validateType = function validateType(data, schema) {
		if (schema.type === undefined) {
			return null;
		}
		var dataType = typeof data;
		if (data === null) {
			dataType = "null";
		} else if (Array.isArray(data)) {
			dataType = "array";
		}
		var allowedTypes = schema.type;
		if (!Array.isArray(allowedTypes)) {
			allowedTypes = [allowedTypes];
		}

		for (var i = 0; i < allowedTypes.length; i++) {
			var type = allowedTypes[i];
			if (type === dataType || (type === "integer" && dataType === "number" && (data % 1 === 0))) {
				return null;
			}
		}
		return this.createError(ErrorCodes.INVALID_TYPE, {type: dataType, expected: allowedTypes.join("/")}, '', '', null, data, schema);
	};

	ValidatorContext.prototype.validateEnum = function validateEnum(data, schema) {
		if (schema["enum"] === undefined) {
			return null;
		}
		for (var i = 0; i < schema["enum"].length; i++) {
			var enumVal = schema["enum"][i];
			if (recursiveCompare(data, enumVal)) {
				return null;
			}
		}
		return this.createError(ErrorCodes.ENUM_MISMATCH, {value: (typeof JSON !== 'undefined') ? JSON.stringify(data) : data}, '', '', null, data, schema);
	};

	ValidatorContext.prototype.validateNumeric = function validateNumeric(data, schema, dataPointerPath) {
		return this.validateMultipleOf(data, schema, dataPointerPath)
			|| this.validateMinMax(data, schema, dataPointerPath)
			|| this.validateNaN(data, schema, dataPointerPath)
			|| null;
	};

	var CLOSE_ENOUGH_LOW = Math.pow(2, -51);
	var CLOSE_ENOUGH_HIGH = 1 - CLOSE_ENOUGH_LOW;
	ValidatorContext.prototype.validateMultipleOf = function validateMultipleOf(data, schema) {
		var multipleOf = schema.multipleOf || schema.divisibleBy;
		if (multipleOf === undefined) {
			return null;
		}
		if (typeof data === "number") {
			var remainder = (data/multipleOf)%1;
			if (remainder >= CLOSE_ENOUGH_LOW && remainder < CLOSE_ENOUGH_HIGH) {
				return this.createError(ErrorCodes.NUMBER_MULTIPLE_OF, {value: data, multipleOf: multipleOf}, '', '', null, data, schema);
			}
		}
		return null;
	};

	ValidatorContext.prototype.validateMinMax = function validateMinMax(data, schema) {
		if (typeof data !== "number") {
			return null;
		}
		if (schema.minimum !== undefined) {
			if (data < schema.minimum) {
				return this.createError(ErrorCodes.NUMBER_MINIMUM, {value: data, minimum: schema.minimum}, '', '/minimum', null, data, schema);
			}
			if (schema.exclusiveMinimum && data === schema.minimum) {
				return this.createError(ErrorCodes.NUMBER_MINIMUM_EXCLUSIVE, {value: data, minimum: schema.minimum}, '', '/exclusiveMinimum', null, data, schema);
			}
		}
		if (schema.maximum !== undefined) {
			if (data > schema.maximum) {
				return this.createError(ErrorCodes.NUMBER_MAXIMUM, {value: data, maximum: schema.maximum}, '', '/maximum', null, data, schema);
			}
			if (schema.exclusiveMaximum && data === schema.maximum) {
				return this.createError(ErrorCodes.NUMBER_MAXIMUM_EXCLUSIVE, {value: data, maximum: schema.maximum}, '', '/exclusiveMaximum', null, data, schema);
			}
		}
		return null;
	};

	ValidatorContext.prototype.validateNaN = function validateNaN(data, schema) {
		if (typeof data !== "number") {
			return null;
		}
		if (isNaN(data) === true || data === Infinity || data === -Infinity) {
			return this.createError(ErrorCodes.NUMBER_NOT_A_NUMBER, {value: data}, '', '/type', null, data, schema);
		}
		return null;
	};

	ValidatorContext.prototype.validateString = function validateString(data, schema, dataPointerPath) {
		return this.validateStringLength(data, schema, dataPointerPath)
			|| this.validateStringPattern(data, schema, dataPointerPath)
			|| null;
	};

	ValidatorContext.prototype.validateStringLength = function validateStringLength(data, schema) {
		if (typeof data !== "string") {
			return null;
		}
		if (schema.minLength !== undefined) {
			if (data.length < schema.minLength) {
				return this.createError(ErrorCodes.STRING_LENGTH_SHORT, {length: data.length, minimum: schema.minLength}, '', '/minLength', null, data, schema);
			}
		}
		if (schema.maxLength !== undefined) {
			if (data.length > schema.maxLength) {
				return this.createError(ErrorCodes.STRING_LENGTH_LONG, {length: data.length, maximum: schema.maxLength}, '', '/maxLength', null, data, schema);
			}
		}
		return null;
	};

	ValidatorContext.prototype.validateStringPattern = function validateStringPattern(data, schema) {
		if (typeof data !== "string" || (typeof schema.pattern !== "string" && !(schema.pattern instanceof RegExp))) {
			return null;
		}
		var regexp;
		if (schema.pattern instanceof RegExp) {
		  regexp = schema.pattern;
		}
		else {
		  var body, flags = '';
		  // Check for regular expression literals
		  // @see http://www.ecma-international.org/ecma-262/5.1/#sec-7.8.5
		  var literal = schema.pattern.match(/^\/(.+)\/([img]*)$/);
		  if (literal) {
		    body = literal[1];
		    flags = literal[2];
		  }
		  else {
		    body = schema.pattern;
		  }
		  regexp = new RegExp(body, flags);
		}
		if (!regexp.test(data)) {
			return this.createError(ErrorCodes.STRING_PATTERN, {pattern: schema.pattern}, '', '/pattern', null, data, schema);
		}
		return null;
	};

	ValidatorContext.prototype.validateArray = function validateArray(data, schema, dataPointerPath) {
		if (!Array.isArray(data)) {
			return null;
		}
		return this.validateArrayLength(data, schema, dataPointerPath)
			|| this.validateArrayUniqueItems(data, schema, dataPointerPath)
			|| this.validateArrayItems(data, schema, dataPointerPath)
			|| null;
	};

	ValidatorContext.prototype.validateArrayLength = function validateArrayLength(data, schema) {
		var error;
		if (schema.minItems !== undefined) {
			if (data.length < schema.minItems) {
				error = this.createError(ErrorCodes.ARRAY_LENGTH_SHORT, {length: data.length, minimum: schema.minItems}, '', '/minItems', null, data, schema);
				if (this.handleError(error)) {
					return error;
				}
			}
		}
		if (schema.maxItems !== undefined) {
			if (data.length > schema.maxItems) {
				error = this.createError(ErrorCodes.ARRAY_LENGTH_LONG, {length: data.length, maximum: schema.maxItems}, '', '/maxItems', null, data, schema);
				if (this.handleError(error)) {
					return error;
				}
			}
		}
		return null;
	};

	ValidatorContext.prototype.validateArrayUniqueItems = function validateArrayUniqueItems(data, schema) {
		if (schema.uniqueItems) {
			for (var i = 0; i < data.length; i++) {
				for (var j = i + 1; j < data.length; j++) {
					if (recursiveCompare(data[i], data[j])) {
						var error = this.createError(ErrorCodes.ARRAY_UNIQUE, {match1: i, match2: j}, '', '/uniqueItems', null, data, schema);
						if (this.handleError(error)) {
							return error;
						}
					}
				}
			}
		}
		return null;
	};

	ValidatorContext.prototype.validateArrayItems = function validateArrayItems(data, schema, dataPointerPath) {
		if (schema.items === undefined) {
			return null;
		}
		var error, i;
		if (Array.isArray(schema.items)) {
			for (i = 0; i < data.length; i++) {
				if (i < schema.items.length) {
					if (error = this.validateAll(data[i], schema.items[i], [i], ["items", i], dataPointerPath + "/" + i)) {
						return error;
					}
				} else if (schema.additionalItems !== undefined) {
					if (typeof schema.additionalItems === "boolean") {
						if (!schema.additionalItems) {
							error = (this.createError(ErrorCodes.ARRAY_ADDITIONAL_ITEMS, {}, '/' + i, '/additionalItems', null, data, schema));
							if (this.handleError(error)) {
								return error;
							}
						}
					} else if (error = this.validateAll(data[i], schema.additionalItems, [i], ["additionalItems"], dataPointerPath + "/" + i)) {
						return error;
					}
				}
			}
		} else {
			for (i = 0; i < data.length; i++) {
				if (error = this.validateAll(data[i], schema.items, [i], ["items"], dataPointerPath + "/" + i)) {
					return error;
				}
			}
		}
		return null;
	};

	ValidatorContext.prototype.validateObject = function validateObject(data, schema, dataPointerPath) {
		if (typeof data !== "object" || data === null || Array.isArray(data)) {
			return null;
		}
		return this.validateObjectMinMaxProperties(data, schema, dataPointerPath)
			|| this.validateObjectRequiredProperties(data, schema, dataPointerPath)
			|| this.validateObjectProperties(data, schema, dataPointerPath)
			|| this.validateObjectDependencies(data, schema, dataPointerPath)
			|| null;
	};

	ValidatorContext.prototype.validateObjectMinMaxProperties = function validateObjectMinMaxProperties(data, schema) {
		var keys = Object.keys(data);
		var error;
		if (schema.minProperties !== undefined) {
			if (keys.length < schema.minProperties) {
				error = this.createError(ErrorCodes.OBJECT_PROPERTIES_MINIMUM, {propertyCount: keys.length, minimum: schema.minProperties}, '', '/minProperties', null, data, schema);
				if (this.handleError(error)) {
					return error;
				}
			}
		}
		if (schema.maxProperties !== undefined) {
			if (keys.length > schema.maxProperties) {
				error = this.createError(ErrorCodes.OBJECT_PROPERTIES_MAXIMUM, {propertyCount: keys.length, maximum: schema.maxProperties}, '', '/maxProperties', null, data, schema);
				if (this.handleError(error)) {
					return error;
				}
			}
		}
		return null;
	};

	ValidatorContext.prototype.validateObjectRequiredProperties = function validateObjectRequiredProperties(data, schema) {
		if (schema.required !== undefined) {
			for (var i = 0; i < schema.required.length; i++) {
				var key = schema.required[i];
				if (data[key] === undefined) {
					var error = this.createError(ErrorCodes.OBJECT_REQUIRED, {key: key}, '', '/required/' + i, null, data, schema);
					if (this.handleError(error)) {
						return error;
					}
				}
			}
		}
		return null;
	};

	ValidatorContext.prototype.validateObjectProperties = function validateObjectProperties(data, schema, dataPointerPath) {
		var error;
		for (var key in data) {
			var keyPointerPath = dataPointerPath + "/" + key.replace(/~/g, '~0').replace(/\//g, '~1');
			var foundMatch = false;
			if (schema.properties !== undefined && schema.properties[key] !== undefined) {
				foundMatch = true;
				if (error = this.validateAll(data[key], schema.properties[key], [key], ["properties", key], keyPointerPath)) {
					return error;
				}
			}
			if (schema.patternProperties !== undefined) {
				for (var patternKey in schema.patternProperties) {
					var regexp = new RegExp(patternKey);
					if (regexp.test(key)) {
						foundMatch = true;
						if (error = this.validateAll(data[key], schema.patternProperties[patternKey], [key], ["patternProperties", patternKey], keyPointerPath)) {
							return error;
						}
					}
				}
			}
			if (!foundMatch) {
				if (schema.additionalProperties !== undefined) {
					if (this.trackUnknownProperties) {
						this.knownPropertyPaths[keyPointerPath] = true;
						delete this.unknownPropertyPaths[keyPointerPath];
					}
					if (typeof schema.additionalProperties === "boolean") {
						if (!schema.additionalProperties) {
							error = this.createError(ErrorCodes.OBJECT_ADDITIONAL_PROPERTIES, {key: key}, '', '/additionalProperties', null, data, schema).prefixWith(key, null);
							if (this.handleError(error)) {
								return error;
							}
						}
					} else {
						if (error = this.validateAll(data[key], schema.additionalProperties, [key], ["additionalProperties"], keyPointerPath)) {
							return error;
						}
					}
				} else if (this.trackUnknownProperties && !this.knownPropertyPaths[keyPointerPath]) {
					this.unknownPropertyPaths[keyPointerPath] = true;
				}
			} else if (this.trackUnknownProperties) {
				this.knownPropertyPaths[keyPointerPath] = true;
				delete this.unknownPropertyPaths[keyPointerPath];
			}
		}
		return null;
	};

	ValidatorContext.prototype.validateObjectDependencies = function validateObjectDependencies(data, schema, dataPointerPath) {
		var error;
		if (schema.dependencies !== undefined) {
			for (var depKey in schema.dependencies) {
				if (data[depKey] !== undefined) {
					var dep = schema.dependencies[depKey];
					if (typeof dep === "string") {
						if (data[dep] === undefined) {
							error = this.createError(ErrorCodes.OBJECT_DEPENDENCY_KEY, {key: depKey, missing: dep}, '', '', null, data, schema).prefixWith(null, depKey).prefixWith(null, "dependencies");
							if (this.handleError(error)) {
								return error;
							}
						}
					} else if (Array.isArray(dep)) {
						for (var i = 0; i < dep.length; i++) {
							var requiredKey = dep[i];
							if (data[requiredKey] === undefined) {
								error = this.createError(ErrorCodes.OBJECT_DEPENDENCY_KEY, {key: depKey, missing: requiredKey}, '', '/' + i, null, data, schema).prefixWith(null, depKey).prefixWith(null, "dependencies");
								if (this.handleError(error)) {
									return error;
								}
							}
						}
					} else {
						if (error = this.validateAll(data, dep, [], ["dependencies", depKey], dataPointerPath)) {
							return error;
						}
					}
				}
			}
		}
		return null;
	};

	ValidatorContext.prototype.validateCombinations = function validateCombinations(data, schema, dataPointerPath) {
		return this.validateAllOf(data, schema, dataPointerPath)
			|| this.validateAnyOf(data, schema, dataPointerPath)
			|| this.validateOneOf(data, schema, dataPointerPath)
			|| this.validateNot(data, schema, dataPointerPath)
			|| null;
	};

	ValidatorContext.prototype.validateAllOf = function validateAllOf(data, schema, dataPointerPath) {
		if (schema.allOf === undefined) {
			return null;
		}
		var error;
		for (var i = 0; i < schema.allOf.length; i++) {
			var subSchema = schema.allOf[i];
			if (error = this.validateAll(data, subSchema, [], ["allOf", i], dataPointerPath)) {
				return error;
			}
		}
		return null;
	};

	ValidatorContext.prototype.validateAnyOf = function validateAnyOf(data, schema, dataPointerPath) {
		if (schema.anyOf === undefined) {
			return null;
		}
		var errors = [];
		var startErrorCount = this.errors.length;
		var oldUnknownPropertyPaths, oldKnownPropertyPaths;
		if (this.trackUnknownProperties) {
			oldUnknownPropertyPaths = this.unknownPropertyPaths;
			oldKnownPropertyPaths = this.knownPropertyPaths;
		}
		var errorAtEnd = true;
		for (var i = 0; i < schema.anyOf.length; i++) {
			if (this.trackUnknownProperties) {
				this.unknownPropertyPaths = {};
				this.knownPropertyPaths = {};
			}
			var subSchema = schema.anyOf[i];

			var errorCount = this.errors.length;
			var error = this.validateAll(data, subSchema, [], ["anyOf", i], dataPointerPath);

			if (error === null && errorCount === this.errors.length) {
				this.errors = this.errors.slice(0, startErrorCount);

				if (this.trackUnknownProperties) {
					for (var knownKey in this.knownPropertyPaths) {
						oldKnownPropertyPaths[knownKey] = true;
						delete oldUnknownPropertyPaths[knownKey];
					}
					for (var unknownKey in this.unknownPropertyPaths) {
						if (!oldKnownPropertyPaths[unknownKey]) {
							oldUnknownPropertyPaths[unknownKey] = true;
						}
					}
					// We need to continue looping so we catch all the property definitions, but we don't want to return an error
					errorAtEnd = false;
					continue;
				}

				return null;
			}
			if (error) {
				errors.push(error.prefixWith(null, "" + i).prefixWith(null, "anyOf"));
			}
		}
		if (this.trackUnknownProperties) {
			this.unknownPropertyPaths = oldUnknownPropertyPaths;
			this.knownPropertyPaths = oldKnownPropertyPaths;
		}
		if (errorAtEnd) {
			errors = errors.concat(this.errors.slice(startErrorCount));
			this.errors = this.errors.slice(0, startErrorCount);
			return this.createError(ErrorCodes.ANY_OF_MISSING, {}, "", "/anyOf", errors, data, schema);
		}
	};

	ValidatorContext.prototype.validateOneOf = function validateOneOf(data, schema, dataPointerPath) {
		if (schema.oneOf === undefined) {
			return null;
		}
		var validIndex = null;
		var errors = [];
		var startErrorCount = this.errors.length;
		var oldUnknownPropertyPaths, oldKnownPropertyPaths;
		if (this.trackUnknownProperties) {
			oldUnknownPropertyPaths = this.unknownPropertyPaths;
			oldKnownPropertyPaths = this.knownPropertyPaths;
		}
		for (var i = 0; i < schema.oneOf.length; i++) {
			if (this.trackUnknownProperties) {
				this.unknownPropertyPaths = {};
				this.knownPropertyPaths = {};
			}
			var subSchema = schema.oneOf[i];

			var errorCount = this.errors.length;
			var error = this.validateAll(data, subSchema, [], ["oneOf", i], dataPointerPath);

			if (error === null && errorCount === this.errors.length) {
				if (validIndex === null) {
					validIndex = i;
				} else {
					this.errors = this.errors.slice(0, startErrorCount);
					return this.createError(ErrorCodes.ONE_OF_MULTIPLE, {index1: validIndex, index2: i}, "", "/oneOf", null, data, schema);
				}
				if (this.trackUnknownProperties) {
					for (var knownKey in this.knownPropertyPaths) {
						oldKnownPropertyPaths[knownKey] = true;
						delete oldUnknownPropertyPaths[knownKey];
					}
					for (var unknownKey in this.unknownPropertyPaths) {
						if (!oldKnownPropertyPaths[unknownKey]) {
							oldUnknownPropertyPaths[unknownKey] = true;
						}
					}
				}
			} else if (error) {
				errors.push(error);
			}
		}
		if (this.trackUnknownProperties) {
			this.unknownPropertyPaths = oldUnknownPropertyPaths;
			this.knownPropertyPaths = oldKnownPropertyPaths;
		}
		if (validIndex === null) {
			errors = errors.concat(this.errors.slice(startErrorCount));
			this.errors = this.errors.slice(0, startErrorCount);
			return this.createError(ErrorCodes.ONE_OF_MISSING, {}, "", "/oneOf", errors, data, schema);
		} else {
			this.errors = this.errors.slice(0, startErrorCount);
		}
		return null;
	};

	ValidatorContext.prototype.validateNot = function validateNot(data, schema, dataPointerPath) {
		if (schema.not === undefined) {
			return null;
		}
		var oldErrorCount = this.errors.length;
		var oldUnknownPropertyPaths, oldKnownPropertyPaths;
		if (this.trackUnknownProperties) {
			oldUnknownPropertyPaths = this.unknownPropertyPaths;
			oldKnownPropertyPaths = this.knownPropertyPaths;
			this.unknownPropertyPaths = {};
			this.knownPropertyPaths = {};
		}
		var error = this.validateAll(data, schema.not, null, null, dataPointerPath);
		var notErrors = this.errors.slice(oldErrorCount);
		this.errors = this.errors.slice(0, oldErrorCount);
		if (this.trackUnknownProperties) {
			this.unknownPropertyPaths = oldUnknownPropertyPaths;
			this.knownPropertyPaths = oldKnownPropertyPaths;
		}
		if (error === null && notErrors.length === 0) {
			return this.createError(ErrorCodes.NOT_PASSED, {}, "", "/not", null, data, schema);
		}
		return null;
	};

	ValidatorContext.prototype.validateHypermedia = function validateCombinations(data, schema, dataPointerPath) {
		if (!schema.links) {
			return null;
		}
		var error;
		for (var i = 0; i < schema.links.length; i++) {
			var ldo = schema.links[i];
			if (ldo.rel === "describedby") {
				var template = new UriTemplate(ldo.href);
				var allPresent = true;
				for (var j = 0; j < template.varNames.length; j++) {
					if (!(template.varNames[j] in data)) {
						allPresent = false;
						break;
					}
				}
				if (allPresent) {
					var schemaUrl = template.fillFromObject(data);
					var subSchema = {"$ref": schemaUrl};
					if (error = this.validateAll(data, subSchema, [], ["links", i], dataPointerPath)) {
						return error;
					}
				}
			}
		}
	};

	// parseURI() and resolveUrl() are from https://gist.github.com/1088850
	//   -  released as public domain by author ("Yaffle") - see comments on gist

	function parseURI(url) {
		var m = String(url).replace(/^\s+|\s+$/g, '').match(/^([^:\/?#]+:)?(\/\/(?:[^:@]*(?::[^:@]*)?@)?(([^:\/?#]*)(?::(\d*))?))?([^?#]*)(\?[^#]*)?(#[\s\S]*)?/);
		// authority = '//' + user + ':' + pass '@' + hostname + ':' port
		return (m ? {
			href     : m[0] || '',
			protocol : m[1] || '',
			authority: m[2] || '',
			host     : m[3] || '',
			hostname : m[4] || '',
			port     : m[5] || '',
			pathname : m[6] || '',
			search   : m[7] || '',
			hash     : m[8] || ''
		} : null);
	}

	function resolveUrl(base, href) {// RFC 3986

		function removeDotSegments(input) {
			var output = [];
			input.replace(/^(\.\.?(\/|$))+/, '')
				.replace(/\/(\.(\/|$))+/g, '/')
				.replace(/\/\.\.$/, '/../')
				.replace(/\/?[^\/]*/g, function (p) {
					if (p === '/..') {
						output.pop();
					} else {
						output.push(p);
					}
			});
			return output.join('').replace(/^\//, input.charAt(0) === '/' ? '/' : '');
		}

		href = parseURI(href || '');
		base = parseURI(base || '');

		return !href || !base ? null : (href.protocol || base.protocol) +
			(href.protocol || href.authority ? href.authority : base.authority) +
			removeDotSegments(href.protocol || href.authority || href.pathname.charAt(0) === '/' ? href.pathname : (href.pathname ? ((base.authority && !base.pathname ? '/' : '') + base.pathname.slice(0, base.pathname.lastIndexOf('/') + 1) + href.pathname) : base.pathname)) +
			(href.protocol || href.authority || href.pathname ? href.search : (href.search || base.search)) +
			href.hash;
	}

	function getDocumentUri(uri) {
		return uri.split('#')[0];
	}
	function normSchema(schema, baseUri) {
		if (schema && typeof schema === "object") {
			if (baseUri === undefined) {
				baseUri = schema.id;
			} else if (typeof schema.id === "string") {
				baseUri = resolveUrl(baseUri, schema.id);
				schema.id = baseUri;
			}
			if (Array.isArray(schema)) {
				for (var i = 0; i < schema.length; i++) {
					normSchema(schema[i], baseUri);
				}
			} else {
				if (typeof schema['$ref'] === "string") {
					schema['$ref'] = resolveUrl(baseUri, schema['$ref']);
				}
				for (var key in schema) {
					if (key !== "enum") {
						normSchema(schema[key], baseUri);
					}
				}
			}
		}
	}

	function defaultErrorReporter(language) {
		language = language || 'en';

		var errorMessages = languages[language];

		return function (error) {
			var messageTemplate = errorMessages[error.code] || ErrorMessagesDefault[error.code];
			if (typeof messageTemplate !== 'string') {
				return "Unknown error code " + error.code + ": " + JSON.stringify(error.messageParams);
			}
			var messageParams = error.params;
			// Adapted from Crockford's supplant()
			return messageTemplate.replace(/\{([^{}]*)\}/g, function (whole, varName) {
				var subValue = messageParams[varName];
				return typeof subValue === 'string' || typeof subValue === 'number' ? subValue : whole;
			});
		};
	}

	var ErrorCodes = {
		INVALID_TYPE: 0,
		ENUM_MISMATCH: 1,
		ANY_OF_MISSING: 10,
		ONE_OF_MISSING: 11,
		ONE_OF_MULTIPLE: 12,
		NOT_PASSED: 13,
		// Numeric errors
		NUMBER_MULTIPLE_OF: 100,
		NUMBER_MINIMUM: 101,
		NUMBER_MINIMUM_EXCLUSIVE: 102,
		NUMBER_MAXIMUM: 103,
		NUMBER_MAXIMUM_EXCLUSIVE: 104,
		NUMBER_NOT_A_NUMBER: 105,
		// String errors
		STRING_LENGTH_SHORT: 200,
		STRING_LENGTH_LONG: 201,
		STRING_PATTERN: 202,
		// Object errors
		OBJECT_PROPERTIES_MINIMUM: 300,
		OBJECT_PROPERTIES_MAXIMUM: 301,
		OBJECT_REQUIRED: 302,
		OBJECT_ADDITIONAL_PROPERTIES: 303,
		OBJECT_DEPENDENCY_KEY: 304,
		// Array errors
		ARRAY_LENGTH_SHORT: 400,
		ARRAY_LENGTH_LONG: 401,
		ARRAY_UNIQUE: 402,
		ARRAY_ADDITIONAL_ITEMS: 403,
		// Custom/user-defined errors
		FORMAT_CUSTOM: 500,
		KEYWORD_CUSTOM: 501,
		// Schema structure
		CIRCULAR_REFERENCE: 600,
		// Non-standard validation options
		UNKNOWN_PROPERTY: 1000
	};
	var ErrorCodeLookup = {};
	for (var key in ErrorCodes) {
		ErrorCodeLookup[ErrorCodes[key]] = key;
	}
	var ErrorMessagesDefault = {
		INVALID_TYPE: "Invalid type: {type} (expected {expected})",
		ENUM_MISMATCH: "No enum match for: {value}",
		ANY_OF_MISSING: "Data does not match any schemas from \"anyOf\"",
		ONE_OF_MISSING: "Data does not match any schemas from \"oneOf\"",
		ONE_OF_MULTIPLE: "Data is valid against more than one schema from \"oneOf\": indices {index1} and {index2}",
		NOT_PASSED: "Data matches schema from \"not\"",
		// Numeric errors
		NUMBER_MULTIPLE_OF: "Value {value} is not a multiple of {multipleOf}",
		NUMBER_MINIMUM: "Value {value} is less than minimum {minimum}",
		NUMBER_MINIMUM_EXCLUSIVE: "Value {value} is equal to exclusive minimum {minimum}",
		NUMBER_MAXIMUM: "Value {value} is greater than maximum {maximum}",
		NUMBER_MAXIMUM_EXCLUSIVE: "Value {value} is equal to exclusive maximum {maximum}",
		NUMBER_NOT_A_NUMBER: "Value {value} is not a valid number",
		// String errors
		STRING_LENGTH_SHORT: "String is too short ({length} chars), minimum {minimum}",
		STRING_LENGTH_LONG: "String is too long ({length} chars), maximum {maximum}",
		STRING_PATTERN: "String does not match pattern: {pattern}",
		// Object errors
		OBJECT_PROPERTIES_MINIMUM: "Too few properties defined ({propertyCount}), minimum {minimum}",
		OBJECT_PROPERTIES_MAXIMUM: "Too many properties defined ({propertyCount}), maximum {maximum}",
		OBJECT_REQUIRED: "Missing required property: {key}",
		OBJECT_ADDITIONAL_PROPERTIES: "Additional properties not allowed",
		OBJECT_DEPENDENCY_KEY: "Dependency failed - key must exist: {missing} (due to key: {key})",
		// Array errors
		ARRAY_LENGTH_SHORT: "Array is too short ({length}), minimum {minimum}",
		ARRAY_LENGTH_LONG: "Array is too long ({length}), maximum {maximum}",
		ARRAY_UNIQUE: "Array items are not unique (indices {match1} and {match2})",
		ARRAY_ADDITIONAL_ITEMS: "Additional items not allowed",
		// Format errors
		FORMAT_CUSTOM: "Format validation failed ({message})",
		KEYWORD_CUSTOM: "Keyword failed: {key} ({message})",
		// Schema structure
		CIRCULAR_REFERENCE: "Circular $refs: {urls}",
		// Non-standard validation options
		UNKNOWN_PROPERTY: "Unknown property (not in schema)"
	};

	function ValidationError(code, params, dataPath, schemaPath, subErrors) {
		Error.call(this);
		if (code === undefined) {
			throw new Error ("No error code supplied: " + schemaPath);
		}
		this.message = '';
		this.params = params;
		this.code = code;
		this.dataPath = dataPath || "";
		this.schemaPath = schemaPath || "";
		this.subErrors = subErrors || null;

		var err = new Error(this.message);
		this.stack = err.stack || err.stacktrace;
		if (!this.stack) {
			try {
				throw err;
			}
			catch(err) {
				this.stack = err.stack || err.stacktrace;
			}
		}
	}
	ValidationError.prototype = Object.create(Error.prototype);
	ValidationError.prototype.constructor = ValidationError;
	ValidationError.prototype.name = 'ValidationError';

	ValidationError.prototype.prefixWith = function (dataPrefix, schemaPrefix) {
		if (dataPrefix !== null) {
			dataPrefix = dataPrefix.replace(/~/g, "~0").replace(/\//g, "~1");
			this.dataPath = "/" + dataPrefix + this.dataPath;
		}
		if (schemaPrefix !== null) {
			schemaPrefix = schemaPrefix.replace(/~/g, "~0").replace(/\//g, "~1");
			this.schemaPath = "/" + schemaPrefix + this.schemaPath;
		}
		if (this.subErrors !== null) {
			for (var i = 0; i < this.subErrors.length; i++) {
				this.subErrors[i].prefixWith(dataPrefix, schemaPrefix);
			}
		}
		return this;
	};

	function isTrustedUrl(baseUrl, testUrl) {
		if(testUrl.substring(0, baseUrl.length) === baseUrl){
			var remainder = testUrl.substring(baseUrl.length);
			if ((testUrl.length > 0 && testUrl.charAt(baseUrl.length - 1) === "/")
				|| remainder.charAt(0) === "#"
				|| remainder.charAt(0) === "?") {
				return true;
			}
		}
		return false;
	}

	var languages = {};
	function createApi(language) {
		var globalContext = new ValidatorContext();
		var currentLanguage;
		var customErrorReporter;
		var api = {
			setErrorReporter: function (reporter) {
				if (typeof reporter === 'string') {
					return this.language(reporter);
				}
				customErrorReporter = reporter;
				return true;
			},
			addFormat: function () {
				globalContext.addFormat.apply(globalContext, arguments);
			},
			language: function (code) {
				if (!code) {
					return currentLanguage;
				}
				if (!languages[code]) {
					code = code.split('-')[0]; // fall back to base language
				}
				if (languages[code]) {
					currentLanguage = code;
					return code; // so you can tell if fall-back has happened
				}
				return false;
			},
			addLanguage: function (code, messageMap) {
				var key;
				for (key in ErrorCodes) {
					if (messageMap[key] && !messageMap[ErrorCodes[key]]) {
						messageMap[ErrorCodes[key]] = messageMap[key];
					}
				}
				var rootCode = code.split('-')[0];
				if (!languages[rootCode]) { // use for base language if not yet defined
					languages[code] = messageMap;
					languages[rootCode] = messageMap;
				} else {
					languages[code] = Object.create(languages[rootCode]);
					for (key in messageMap) {
						if (typeof languages[rootCode][key] === 'undefined') {
							languages[rootCode][key] = messageMap[key];
						}
						languages[code][key] = messageMap[key];
					}
				}
				return this;
			},
			freshApi: function (language) {
				var result = createApi();
				if (language) {
					result.language(language);
				}
				return result;
			},
			validate: function (data, schema, checkRecursive, banUnknownProperties) {
				var def = defaultErrorReporter(currentLanguage);
				var errorReporter = customErrorReporter ? function (error, data, schema) {
					return customErrorReporter(error, data, schema) || def(error, data, schema);
				} : def;
				var context = new ValidatorContext(globalContext, false, errorReporter, checkRecursive, banUnknownProperties);
				if (typeof schema === "string") {
					schema = {"$ref": schema};
				}
				context.addSchema("", schema);
				var error = context.validateAll(data, schema, null, null, "");
				if (!error && banUnknownProperties) {
					error = context.banUnknownProperties(data, schema);
				}
				this.error = error;
				this.missing = context.missing;
				this.valid = (error === null);
				return this.valid;
			},
			validateResult: function () {
				var result = {};
				this.validate.apply(result, arguments);
				return result;
			},
			validateMultiple: function (data, schema, checkRecursive, banUnknownProperties) {
				var def = defaultErrorReporter(currentLanguage);
				var errorReporter = customErrorReporter ? function (error, data, schema) {
					return customErrorReporter(error, data, schema) || def(error, data, schema);
				} : def;
				var context = new ValidatorContext(globalContext, true, errorReporter, checkRecursive, banUnknownProperties);
				if (typeof schema === "string") {
					schema = {"$ref": schema};
				}
				context.addSchema("", schema);
				context.validateAll(data, schema, null, null, "");
				if (banUnknownProperties) {
					context.banUnknownProperties(data, schema);
				}
				var result = {};
				result.errors = context.errors;
				result.missing = context.missing;
				result.valid = (result.errors.length === 0);
				return result;
			},
			addSchema: function () {
				return globalContext.addSchema.apply(globalContext, arguments);
			},
			getSchema: function () {
				return globalContext.getSchema.apply(globalContext, arguments);
			},
			getSchemaMap: function () {
				return globalContext.getSchemaMap.apply(globalContext, arguments);
			},
			getSchemaUris: function () {
				return globalContext.getSchemaUris.apply(globalContext, arguments);
			},
			getMissingUris: function () {
				return globalContext.getMissingUris.apply(globalContext, arguments);
			},
			dropSchemas: function () {
				globalContext.dropSchemas.apply(globalContext, arguments);
			},
			defineKeyword: function () {
				globalContext.defineKeyword.apply(globalContext, arguments);
			},
			defineError: function (codeName, codeNumber, defaultMessage) {
				if (typeof codeName !== 'string' || !/^[A-Z]+(_[A-Z]+)*$/.test(codeName)) {
					throw new Error('Code name must be a string in UPPER_CASE_WITH_UNDERSCORES');
				}
				if (typeof codeNumber !== 'number' || codeNumber%1 !== 0 || codeNumber < 10000) {
					throw new Error('Code number must be an integer > 10000');
				}
				if (typeof ErrorCodes[codeName] !== 'undefined') {
					throw new Error('Error already defined: ' + codeName + ' as ' + ErrorCodes[codeName]);
				}
				if (typeof ErrorCodeLookup[codeNumber] !== 'undefined') {
					throw new Error('Error code already used: ' + ErrorCodeLookup[codeNumber] + ' as ' + codeNumber);
				}
				ErrorCodes[codeName] = codeNumber;
				ErrorCodeLookup[codeNumber] = codeName;
				ErrorMessagesDefault[codeName] = ErrorMessagesDefault[codeNumber] = defaultMessage;
				for (var langCode in languages) {
					var language = languages[langCode];
					if (language[codeName]) {
						language[codeNumber] = language[codeNumber] || language[codeName];
					}
				}
			},
			reset: function () {
				globalContext.reset();
				this.error = null;
				this.missing = [];
				this.valid = true;
			},
			missing: [],
			error: null,
			valid: true,
			normSchema: normSchema,
			resolveUrl: resolveUrl,
			getDocumentUri: getDocumentUri,
			errorCodes: ErrorCodes
		};
		api.language(language || 'en');
		return api;
	}

	var tv4 = createApi();
	tv4.addLanguage('en-gb', ErrorMessagesDefault);

	//legacy property
	tv4.tv4 = tv4;

	return tv4; // used by _header.js to globalise.

	}));

/***/ },
/* 14 */
/***/ function(module, exports) {

	module.exports = {
	    date: {
	        type: 'string',
	        pattern: "-?[0-9]{4}(-(0[1-9]|1[0-2])(-(0[0-9]|[1-2][0-9]|3[0-1]))?)?"
	    },
	    decimal: {
	        type: 'number'
	    },
	    uri: {
	        type: 'string'
	    },
	    dateTime: {
	        type: 'string',
	        pattern: "-?[0-9]{4}(-(0[1-9]|1[0-2])(-(0[0-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\\.[0-9]+)?([Z+-]((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?)?)?)?"
	    },
	    instant: {
	        type: 'string',
	        pattern: "-?[0-9]{4}(-(0[1-9]|1[0-2])(-(0[0-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\\.[0-9]+)?([Z+-]((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?)?)?)?"
	    },
	    time: {
	        type: 'string',
	        pattern: "([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\\.[0-9]+)?"
	    },
	    code: {
	        type: 'string',
	        pattern: "[^\s]+([\s]+[^\s]+)*"
	    },
	    markdown: {
	        type: 'string'
	    },
	    fhir_id: {
	        type: 'string',
	        pattern: "[A-Za-z0-9\-\.]{1,64}"
	    },
	    oid: {
	        type: 'string',
	        pattern: "urn:oid:[0-2](\.[1-9]\d*)+"
	    },
	    xhtml: {
	        type: 'string'
	    },
	    unsignedInt: {
	        type: 'integer',
	        minimum: 0,
	        exclusiveMinimum: true
	    },
	    positiveInt: {
	        type: 'integer',
	        minimum: 0,
	        exclusiveMinimum: true
	    },
	    uuid: {
	        type: 'string'
	    },
	    base64Binary: {
	        type: 'string',
	        media: {
	            "binaryEncoding": "base64"
	        }
	    }
	}


/***/ },
/* 15 */
/***/ function(module, exports) {

	exports.assert = function(pred, msg){
	    if(!pred) { throw new Error(msg || "Assert failed")}
	}

	exports.getIn = function(obj, path){
	    return path.reduce(function(acc, next){
	        return acc ? acc[next] : acc;
	    }, obj);
	}
	exports.copy = function(x){
	    return JSON.parse(JSON.stringify(x))
	}

	exports.capitalize = function(s){
	    exports.assert(s, "Expecting string")
	    return s[0].toUpperCase() + s.slice(1);
	}

	exports.merge =function(src, attrs){
	    var target = exports.copy(src);
	    for(var k in attrs){
	        target[k] = attrs[k];
	    }
	    return target;
	}

	exports.last = function(arr){
	    return arr && arr[arr.length - 1]
	}


/***/ },
/* 16 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var compileSchema = __webpack_require__(17)
	  , resolve = __webpack_require__(18)
	  , Cache = __webpack_require__(38)
	  , SchemaObject = __webpack_require__(31)
	  , stableStringify = __webpack_require__(27)
	  , formats = __webpack_require__(39)
	  , rules = __webpack_require__(40)
	  , v5 = __webpack_require__(64);

	module.exports = Ajv;

	Ajv.prototype.compileAsync = __webpack_require__(65);
	Ajv.prototype.addKeyword = __webpack_require__(66);

	var META_SCHEMA_ID = 'http://json-schema.org/draft-04/schema';
	var SCHEMA_URI_FORMAT = /^(?:(?:[a-z][a-z0-9+-.]*:)?\/\/)?[^\s]*$/i;
	function SCHEMA_URI_FORMAT_FUNC(str) {
	  return SCHEMA_URI_FORMAT.test(str);
	}

	/**
	 * Creates validator instance.
	 * Usage: `Ajv(opts)`
	 * @param {Object} opts optional options
	 * @return {Object} ajv instance
	 */
	function Ajv(opts) {
	  if (!(this instanceof Ajv)) return new Ajv(opts);
	  var self = this;

	  this.opts = opts || {};
	  this._schemas = {};
	  this._refs = {};
	  this._formats = formats(this.opts.format);
	  this._cache = this.opts.cache || new Cache;
	  this._loadingSchemas = {};
	  this.RULES = rules();

	  // this is done on purpose, so that methods are bound to the instance
	  // (without using bind) so that they can be used without the instance
	  this.validate = validate;
	  this.compile = compile;
	  this.addSchema = addSchema;
	  this.addMetaSchema = addMetaSchema;
	  this.validateSchema = validateSchema;
	  this.getSchema = getSchema;
	  this.removeSchema = removeSchema;
	  this.addFormat = addFormat;
	  this.errorsText = errorsText;

	  this._addSchema = _addSchema;
	  this._compile = _compile;

	  addInitialSchemas();
	  if (this.opts.formats) addInitialFormats();

	  if (this.opts.errorDataPath == 'property')
	    this.opts._errorDataPathProperty = true;

	  if (this.opts.v5) v5.enable(this);


	  /**
	   * Validate data using schema
	   * Schema will be compiled and cached (using serialized JSON as key. [json-stable-stringify](https://github.com/substack/json-stable-stringify) is used to serialize.
	   * @param  {String|Object} schemaKeyRef key, ref or schema object
	   * @param  {Any} data to be validated
	   * @return {Boolean} validation result. Errors from the last validation will be available in `ajv.errors` (and also in compiled schema: `schema.errors`).
	   */
	  function validate(schemaKeyRef, data) {
	    var v;
	    if (typeof schemaKeyRef == 'string') {
	      v = getSchema(schemaKeyRef);
	      if (!v) throw new Error('no schema with key or ref "' + schemaKeyRef + '"');
	    } else {
	      var schemaObj = _addSchema(schemaKeyRef);
	      v = schemaObj.validate || _compile(schemaObj);
	    }

	    var valid = v(data);
	    self.errors = v.errors;
	    return valid;
	  }


	  /**
	   * Create validating function for passed schema.
	   * @param  {String|Object} schema
	   * @return {Function} validating function
	   */
	  function compile(schema) {
	    var schemaObj = _addSchema(schema);
	    return schemaObj.validate || _compile(schemaObj);
	  }


	  /**
	   * Adds schema to the instance.
	   * @param {Object|Array} schema schema or array of schemas. If array is passed, `key` will be ignored.
	   * @param {String} key Optional schema key. Can be passed to `validate` method instead of schema object or id/ref. One schema per instance can have empty `id` and `key`.
	   */
	  function addSchema(schema, key, _skipValidation, _meta) {
	    if (Array.isArray(schema)){
	      for (var i=0; i<schema.length; i++) addSchema(schema[i]);
	      return;
	    }
	    // can key/id have # inside?
	    key = resolve.normalizeId(key || schema.id);
	    checkUnique(key);
	    var schemaObj = self._schemas[key] = _addSchema(schema, _skipValidation);
	    schemaObj.meta = _meta;
	  }


	  /**
	   * Add schema that will be used to validate other schemas
	   * removeAdditional option is alway set to false
	   * @param {Object} schema
	   * @param {String} key optional schema key
	   */
	  function addMetaSchema(schema, key, _skipValidation) {
	    addSchema(schema, key, _skipValidation, true);
	  }


	  /**
	   * Validate schema
	   * @param {Object} schema schema to validate
	   * @param {Boolean} throwOrLogError pass true to throw on error
	   * @return {Boolean}
	   */
	  function validateSchema(schema, throwOrLogError) {
	    var $schema = schema.$schema || META_SCHEMA_ID;
	    var currentUriFormat = self._formats.uri;
	    self._formats.uri = typeof currentUriFormat == 'function'
	                        ? SCHEMA_URI_FORMAT_FUNC
	                        : SCHEMA_URI_FORMAT;
	    var valid = validate($schema, schema);
	    self._formats.uri = currentUriFormat;
	    if (!valid && throwOrLogError) {
	      var message = 'schema is invalid:' + errorsText();
	      if (self.opts.validateSchema == 'log') console.error(message);
	      else throw new Error(message);
	    }
	    return valid;
	  }


	  /**
	   * Get compiled schema from the instance by `key` or `ref`.
	   * @param  {String} keyRef `key` that was passed to `addSchema` or full schema reference (`schema.id` or resolved id).
	   * @return {Function} schema validating function (with property `schema`).
	   */
	  function getSchema(keyRef) {
	    var schemaObj = _getSchemaObj(keyRef);
	    switch (typeof schemaObj) {
	      case 'object': return schemaObj.validate || _compile(schemaObj);
	      case 'string': return getSchema(schemaObj);
	    }
	  }


	  function _getSchemaObj(keyRef) {
	    keyRef = resolve.normalizeId(keyRef);
	    return self._schemas[keyRef] || self._refs[keyRef];
	  }


	  /**
	   * Remove cached schema
	   * Even if schema is referenced by other schemas it still can be removed as other schemas have local references
	   * @param  {String|Object} schemaKeyRef key, ref or schema object
	   */
	  function removeSchema(schemaKeyRef) {
	    switch (typeof schemaKeyRef) {
	      case 'string':
	        var schemaObj = _getSchemaObj(schemaKeyRef);
	        self._cache.del(schemaObj.jsonStr);
	        delete self._schemas[schemaKeyRef];
	        delete self._refs[schemaKeyRef];
	        break;
	      case 'object':
	        var jsonStr = stableStringify(schemaKeyRef);
	        self._cache.del(jsonStr);
	        var id = schemaKeyRef.id;
	        if (id) {
	          id = resolve.normalizeId(id);
	          delete self._refs[id];
	        }
	    }
	  }


	  function _addSchema(schema, skipValidation) {
	    if (typeof schema != 'object') throw new Error('schema should be object');
	    var jsonStr = stableStringify(schema);
	    var cached = self._cache.get(jsonStr);
	    if (cached) return cached;

	    var id = resolve.normalizeId(schema.id);
	    if (id) checkUnique(id);

	    if (self.opts.validateSchema !== false && !skipValidation)
	      validateSchema(schema, true);

	    var localRefs = resolve.ids.call(self, schema);

	    var schemaObj = new SchemaObject({
	      id: id,
	      schema: schema,
	      localRefs: localRefs,
	      jsonStr: jsonStr,
	    });

	    if (id[0] != '#') self._refs[id] = schemaObj;
	    self._cache.put(jsonStr, schemaObj);

	    return schemaObj;
	  }


	  function _compile(schemaObj, root) {
	    if (schemaObj.compiling) {
	      schemaObj.validate = callValidate;
	      callValidate.schema = schemaObj.schema;
	      callValidate.errors = null;
	      callValidate.root = root ? root : callValidate;
	      return callValidate;
	    }
	    schemaObj.compiling = true;

	    var currentRA = self.opts.removeAdditional;
	    if (currentRA && schemaObj.meta) self.opts.removeAdditional = false;
	    var v;
	    try { v = compileSchema.call(self, schemaObj.schema, root, schemaObj.localRefs); }
	    finally {
	      schemaObj.compiling = false;
	      if (currentRA) self.opts.removeAdditional = currentRA;
	    }

	    schemaObj.validate = v;
	    schemaObj.refs = v.refs;
	    schemaObj.refVal = v.refVal;
	    schemaObj.root = v.root;
	    return v;


	    function callValidate() {
	      var v = schemaObj.validate;
	      var result = v.apply(null, arguments);
	      callValidate.errors = v.errors;
	      return result;
	    }
	  }


	  /**
	   * Convert array of error message objects to string
	   * @param  {Array<Object>} errors optional array of validation errors, if not passed errors from the instance are used.
	   * @param  {Object} opts optional options with properties `separator` and `dataVar`.
	   * @return {String}
	   */
	  function errorsText(errors, opts) {
	    errors = errors || self.errors;
	    if (!errors) return 'No errors';
	    opts = opts || {};
	    var separator = opts.separator || ', ';
	    var dataVar = opts.dataVar || 'data';

	    var text = '';
	    for (var i=0; i<errors.length; i++) {
	      var e = errors[i];
	      if (e) text += dataVar + e.dataPath + ' ' + e.message + separator;
	    }
	    return text.slice(0, -separator.length);
	  }


	  /**
	   * Add custom format
	   * @param {String} name format name
	   * @param {String|RegExp|Function} format string is converted to RegExp; function should return boolean (true when valid)
	   */
	  function addFormat(name, format) {
	    if (typeof format == 'string') format = new RegExp(format);
	    self._formats[name] = format;
	  }


	  function addInitialSchemas() {
	    if (self.opts.meta !== false) {
	      var metaSchema = __webpack_require__(67);
	      addMetaSchema(metaSchema, META_SCHEMA_ID, true);
	      self._refs['http://json-schema.org/schema'] = META_SCHEMA_ID;
	    }

	    var optsSchemas = self.opts.schemas;
	    if (!optsSchemas) return;
	    if (Array.isArray(optsSchemas)) addSchema(optsSchemas);
	    else for (var key in optsSchemas) addSchema(optsSchemas[key], key);
	  }


	  function addInitialFormats() {
	    for (var name in self.opts.formats) {
	      var format = self.opts.formats[name];
	      addFormat(name, format);
	    }
	  }


	  function checkUnique(id) {
	    if (self._schemas[id] || self._refs[id])
	      throw new Error('schema with key or id "' + id + '" already exists');
	  }
	}


/***/ },
/* 17 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var resolve = __webpack_require__(18)
	  , util = __webpack_require__(26)
	  , equal = __webpack_require__(25)
	  , macro = __webpack_require__(32)
	  , stableStringify = __webpack_require__(27);

	try { var beautify = __webpack_require__(33).js_beautify; } catch(e) {}

	var validateGenerator = __webpack_require__(37);

	module.exports = compile;


	function compile(schema, root, localRefs, baseId) {
	  /* jshint validthis: true, evil: true */
	  var self = this
	    , refVal = [ undefined ] 
	    , refs = {}
	    , patterns = []
	    , patternsHash = {}
	    , customRules = []
	    , customRulesHash = {};

	  root = root || { schema: schema, refVal: refVal, refs: refs };

	  var formats = this._formats;
	  var RULES = this.RULES;

	  return localCompile(schema, root, localRefs, baseId);


	  function localCompile(_schema, _root, localRefs, baseId) {
	    var isRoot = !_root || (_root && _root.schema == _schema);
	    if (_root.schema != root.schema)
	      return compile.call(self, _schema, _root, localRefs, baseId);

	    if (self.RULES.macros && macro.hasMacro(_schema, RULES))
	      _schema = util.deepClone(_schema);

	    var validateCode = validateGenerator({
	      isTop: true,
	      schema: _schema,
	      isRoot: isRoot,
	      baseId: baseId,
	      root: _root,
	      schemaPath: '',
	      errorPath: '""',
	      RULES: RULES,
	      validate: validateGenerator,
	      util: util,
	      resolve: resolve,
	      resolveRef: resolveRef,
	      usePattern: usePattern,
	      useCustomRule: useCustomRule,
	      expandMacros: macro.expand,
	      opts: self.opts,
	      formats: formats,
	      self: self
	    });

	    validateCode = refsCode(refVal) + patternsCode(patterns)
	                   + customRulesCode(customRules) + validateCode;

	    if (self.opts.beautify) {
	      var opts = self.opts.beautify === true ? { indent_size: 2 } : self.opts.beautify;
	      /* istanbul ignore else */
	      if (beautify) validateCode = beautify(validateCode, opts);
	      else console.error('"npm install js-beautify" to use beautify option');
	    }
	    // console.log('\n\n\n *** \n', validateCode);
	    var validate;
	    try {
	      eval(validateCode);
	      refVal[0] = validate;
	    } catch(e) {
	      console.log('Error compiling schema, function code:', validateCode);
	      throw e;
	    }

	    validate.schema = _schema;
	    validate.errors = null;
	    validate.refs = refs;
	    validate.refVal = refVal;
	    validate.root = isRoot ? validate : _root;

	    return validate;
	  }

	  function resolveRef(baseId, ref, isRoot) {
	    ref = resolve.url(baseId, ref);
	    var refIndex = refs[ref];
	    var _refVal, refCode;
	    if (refIndex !== undefined) {
	      _refVal = refVal[refIndex];
	      refCode = 'refVal[' + refIndex + ']';
	      return resolvedRef(_refVal, refCode);
	    }
	    if (!isRoot) {
	      var rootRefId = root.refs[ref];
	      if (rootRefId !== undefined) {
	        _refVal = root.refVal[rootRefId];
	        refCode = addLocalRef(ref, _refVal);
	        return resolvedRef(_refVal, refCode);
	      }
	    }

	    refCode = addLocalRef(ref);
	    var v = resolve.call(self, localCompile, root, ref);
	    if (!v) {
	      var localSchema = localRefs && localRefs[ref];
	      if (localSchema) {
	        v = resolve.inlineRef(localSchema, self.opts.inlineRefs)
	            ? localSchema
	            : compile.call(self, localSchema, root, localRefs, baseId);
	      }
	    }

	    if (v) {
	      replaceLocalRef(ref, v);
	      return resolvedRef(v, refCode);
	    }
	  }

	  function addLocalRef(ref, v) {
	    var refId = refVal.length;
	    refVal[refId] = v;
	    refs[ref] = refId;
	    return 'refVal' + refId;
	  }

	  function replaceLocalRef(ref, v) {
	    var refId = refs[ref];
	    refVal[refId] = v;
	  }

	  function resolvedRef(schema, code) {
	    return typeof schema == 'object'
	            ? { schema: schema, code: code }
	            : code;
	  }

	  function usePattern(regexStr) {
	    var index = patternsHash[regexStr];
	    if (index === undefined) {
	      index = patternsHash[regexStr] = patterns.length;
	      patterns[index] = regexStr;
	    }
	    return 'pattern' + index;
	  }

	  function useCustomRule(rule, schema, parentSchema, it) {
	    var compile = rule.definition.compile
	      , inline = rule.definition.inline;

	    var validate;
	    if (compile)
	      validate = compile.call(self, schema, parentSchema);
	    else if (inline)
	      validate = inline.call(self, it, schema, parentSchema);
	    else
	      validate = rule.definition.validate;

	    var index = customRules.length;
	    customRules[index] = validate;

	    return {
	      code: 'customRule' + index,
	      validate: validate
	    };
	  }
	}


	function patternsCode(patterns) {
	  return _arrCode(patterns, patternCode);
	}


	function patternCode(i, patterns) {
	  return 'var pattern' + i + ' = new RegExp(' + util.toQuotedString(patterns[i]) + ');';
	}


	function refsCode(refVal) {
	  return _arrCode(refVal, refCode);
	}


	function refCode(i, refVal) {
	  return refVal[i] ? 'var refVal' + i + ' = refVal[' + i + '];' : '';
	}


	function customRulesCode(customRules) {
	  return _arrCode(customRules, customRuleCode);
	}


	function customRuleCode(i, rule) {
	  return 'var customRule' + i + ' = customRules[' + i + '];';
	}


	function _arrCode(arr, statement) {
	  if (!arr.length) return '';
	  var code = '';
	  for (var i=0; i<arr.length; i++)
	    code += statement(i, arr);
	  return code;
	}


	/**
	 * Functions below are used inside compiled validations function
	 */

	var ucs2length = util.ucs2length;


/***/ },
/* 18 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var url = __webpack_require__(19)
	  , equal = __webpack_require__(25)
	  , util = __webpack_require__(26)
	  , SchemaObject = __webpack_require__(31);

	module.exports = resolve;

	resolve.normalizeId = normalizeId;
	resolve.fullPath = getFullPath;
	resolve.url = resolveUrl;
	resolve.ids = resolveIds;
	resolve.inlineRef = inlineRef;

	function resolve(compile, root, ref) {
	  /* jshint validthis: true */
	  var refVal = this._refs[ref];
	  if (typeof refVal == 'string') {
	    if (this._refs[refVal]) refVal = this._refs[refVal];
	    else return resolve.call(this, compile, root, refVal);
	  }
	  
	  refVal = refVal || this._schemas[ref];
	  if (refVal instanceof SchemaObject)
	    return inlineRef(refVal.schema, this.opts.inlineRefs)
	            ? refVal.schema
	            : refVal.validate || this._compile(refVal);

	  var res = _resolve.call(this, root, ref);
	  var schema, v, baseId;
	  if (res) {
	    schema = res.schema;
	    root = res.root;
	    baseId = res.baseId;
	  }

	  if (schema instanceof SchemaObject)
	    v = schema.validate || compile.call(this, schema.schema, root, undefined, baseId);
	  else if (schema)
	    v = inlineRef(schema, this.opts.inlineRefs)
	        ? schema
	        : compile.call(this, schema, root, undefined, baseId);

	  return v;
	}


	function _resolve(root, ref) {
	  /* jshint validthis: true */
	  var p = url.parse(ref, false, true)
	    , refPath = _getFullPath(p)
	    , baseId = getFullPath(root.schema.id);
	  if (refPath !== baseId) {
	    var id = normalizeId(refPath);
	    var refVal = this._refs[id];
	    if (typeof refVal == 'string') {
	      return resolveRecursive.call(this, root, refVal, p);
	    } else if (refVal instanceof SchemaObject) {
	      if (!refVal.validate) this._compile(refVal);
	      root = refVal;
	    } else {
	      refVal = this._schemas[id];
	      if (refVal instanceof SchemaObject) {
	        if (!refVal.validate) this._compile(refVal);
	        if (id == normalizeId(ref))
	          return { schema: refVal, root: root, baseId: baseId };
	        root = refVal;
	      }
	    }
	    if (!root.schema) return;
	    baseId = getFullPath(root.schema.id);
	  }
	  return getJsonPointer.call(this, p, baseId, root.schema, root);
	}


	function resolveRecursive(root, ref, parsedRef) {
	  /* jshint validthis: true */
	  var res = _resolve.call(this, root, ref);
	  if (res) {
	    var schema = res.schema;
	    var baseId = res.baseId;
	    root = res.root;
	    if (schema.id) baseId = resolveUrl(baseId, schema.id);
	    return getJsonPointer.call(this, parsedRef, baseId, schema, root);
	  }
	}


	var PREVENT_SCOPE_CHANGE = util.toHash(['properties', 'patternProperties', 'enum', 'dependencies']);
	function getJsonPointer(parsedRef, baseId, schema, root) {
	  /* jshint validthis: true */
	  parsedRef.hash = parsedRef.hash || '';
	  if (parsedRef.hash.slice(0,2) != '#/') return;
	  var parts = parsedRef.hash.split('/');

	  for (var i = 1; i < parts.length; i++) {
	    var part = parts[i];
	    if (part) {
	      part = unescapeFragment(part);
	      schema = schema[part];
	      if (!schema) break;
	      if (schema.id && !PREVENT_SCOPE_CHANGE[part]) baseId = resolveUrl(baseId, schema.id);
	      if (schema.$ref) {
	        var $ref = resolveUrl(baseId, schema.$ref);
	        var res = _resolve.call(this, root, $ref);
	        if (res) {
	          schema = res.schema;
	          root = res.root;
	          baseId = res.baseId;
	        }
	      }
	    }
	  }
	  if (schema && schema != root.schema)
	    return { schema: schema, root: root, baseId: baseId };
	}


	var SIMPLE_INLINED = util.toHash([
	  'type', 'format', 'pattern',
	  'maxLength', 'minLength',
	  'maxProperties', 'minProperties',
	  'maxItems', 'minItems',
	  'maximum', 'minimum',
	  'uniqueItems', 'multipleOf',
	  'required', 'enum' 
	]);
	function inlineRef(schema, limit) {
	  if (limit === undefined) return checkNoRef(schema);
	  else if (limit) return countKeys(schema) <= limit;
	}


	function checkNoRef(schema) {
	  var item;
	  if (Array.isArray(schema)) {
	    for (var i=0; i<schema.length; i++) {
	      item = schema[i];
	      if (typeof item == 'object' && !checkNoRef(item)) return false;
	    }
	  } else {
	    for (var key in schema) {
	      if (key == '$ref') return false;
	      else {
	        item = schema[key];
	        if (typeof item == 'object' && !checkNoRef(item)) return false;
	      }
	    }
	  }
	  return true;
	}


	function countKeys(schema) {
	  var count = 0, item;
	  if (Array.isArray(schema)) {
	    for (var i=0; i<schema.length; i++) {
	      item = schema[i];
	      if (typeof item == 'object') count += countKeys(item);
	      if (count == Infinity) return Infinity;
	    }
	  } else {
	    for (var key in schema) {
	      if (key == '$ref') return Infinity;
	      if (SIMPLE_INLINED[key]) count++;
	      else {
	        item = schema[key];
	        if (typeof item == 'object') count += countKeys(item) + 1;
	        if (count == Infinity) return Infinity;
	      }
	    }
	  }
	  return count;
	}


	function unescapeFragment(str) {
	  return decodeURIComponent(str)
	          .replace(/~1/g, '/')
	          .replace(/~0/g, '~');
	}


	function escapeFragment(str) {
	  str = str.replace(/~/g, '~0').replace(/\//g, '~1');
	  return encodeURIComponent(str);
	}


	function getFullPath(id, normalize) {
	  if (normalize !== false) id = normalizeId(id);
	  var p = url.parse(id, false, true);
	  return _getFullPath(p);
	}


	function _getFullPath(p) {
	  return (p.protocol||'') + (p.protocol?'//':'') + (p.host||'') + (p.path||'')  + '#';
	}


	var TRAILING_SLASH_HASH = /#\/?$/;
	function normalizeId(id) {
	    return id ? id.replace(TRAILING_SLASH_HASH, '') : '';
	}


	function resolveUrl(baseId, id) {
	  id = normalizeId(id);
	  return url.resolve(baseId, id);
	}


	function resolveIds(schema) {
	  /* jshint validthis: true */
	  var id = normalizeId(schema.id);
	  var localRefs = {};
	  _resolveIds.call(this, schema, getFullPath(id, false), id);
	  return localRefs;

	  function _resolveIds(schema, fullPath, baseId) {
	    /* jshint validthis: true */
	    if (Array.isArray(schema))
	      for (var i=0; i<schema.length; i++)
	        _resolveIds.call(this, schema[i], fullPath+'/'+i, baseId);
	    else if (schema && typeof schema == 'object') {
	      if (typeof schema.id == 'string') {
	        var id = baseId = baseId
	                          ? url.resolve(baseId, schema.id)
	                          : normalizeId(schema.id);

	        var refVal = this._refs[id];
	        if (typeof refVal == 'string') refVal = this._refs[refVal];
	        if (refVal && refVal.schema) {
	          if (!equal(schema, refVal.schema))
	            throw new Error('id "' + id + '" resolves to more than one schema');
	        } else if (id != normalizeId(fullPath)) {
	          if (id[0] == '#') {
	            if (localRefs[id] && !equal(schema, localRefs[id]))
	              throw new Error('id "' + id + '" resolves to more than one schema');
	            localRefs[id] = schema;
	          } else
	            this._refs[id] = fullPath;
	        }
	      }
	      for (var key in schema)
	        _resolveIds.call(this, schema[key], fullPath+'/'+escapeFragment(key), baseId);
	    }
	  }
	}


/***/ },
/* 19 */
/***/ function(module, exports, __webpack_require__) {

	// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.

	var punycode = __webpack_require__(20);

	exports.parse = urlParse;
	exports.resolve = urlResolve;
	exports.resolveObject = urlResolveObject;
	exports.format = urlFormat;

	exports.Url = Url;

	function Url() {
	  this.protocol = null;
	  this.slashes = null;
	  this.auth = null;
	  this.host = null;
	  this.port = null;
	  this.hostname = null;
	  this.hash = null;
	  this.search = null;
	  this.query = null;
	  this.pathname = null;
	  this.path = null;
	  this.href = null;
	}

	// Reference: RFC 3986, RFC 1808, RFC 2396

	// define these here so at least they only have to be
	// compiled once on the first module load.
	var protocolPattern = /^([a-z0-9.+-]+:)/i,
	    portPattern = /:[0-9]*$/,

	    // RFC 2396: characters reserved for delimiting URLs.
	    // We actually just auto-escape these.
	    delims = ['<', '>', '"', '`', ' ', '\r', '\n', '\t'],

	    // RFC 2396: characters not allowed for various reasons.
	    unwise = ['{', '}', '|', '\\', '^', '`'].concat(delims),

	    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.
	    autoEscape = ['\''].concat(unwise),
	    // Characters that are never ever allowed in a hostname.
	    // Note that any invalid chars are also handled, but these
	    // are the ones that are *expected* to be seen, so we fast-path
	    // them.
	    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),
	    hostEndingChars = ['/', '?', '#'],
	    hostnameMaxLen = 255,
	    hostnamePartPattern = /^[a-z0-9A-Z_-]{0,63}$/,
	    hostnamePartStart = /^([a-z0-9A-Z_-]{0,63})(.*)$/,
	    // protocols that can allow "unsafe" and "unwise" chars.
	    unsafeProtocol = {
	      'javascript': true,
	      'javascript:': true
	    },
	    // protocols that never have a hostname.
	    hostlessProtocol = {
	      'javascript': true,
	      'javascript:': true
	    },
	    // protocols that always contain a // bit.
	    slashedProtocol = {
	      'http': true,
	      'https': true,
	      'ftp': true,
	      'gopher': true,
	      'file': true,
	      'http:': true,
	      'https:': true,
	      'ftp:': true,
	      'gopher:': true,
	      'file:': true
	    },
	    querystring = __webpack_require__(22);

	function urlParse(url, parseQueryString, slashesDenoteHost) {
	  if (url && isObject(url) && url instanceof Url) return url;

	  var u = new Url;
	  u.parse(url, parseQueryString, slashesDenoteHost);
	  return u;
	}

	Url.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {
	  if (!isString(url)) {
	    throw new TypeError("Parameter 'url' must be a string, not " + typeof url);
	  }

	  var rest = url;

	  // trim before proceeding.
	  // This is to support parse stuff like "  http://foo.com  \n"
	  rest = rest.trim();

	  var proto = protocolPattern.exec(rest);
	  if (proto) {
	    proto = proto[0];
	    var lowerProto = proto.toLowerCase();
	    this.protocol = lowerProto;
	    rest = rest.substr(proto.length);
	  }

	  // figure out if it's got a host
	  // user@server is *always* interpreted as a hostname, and url
	  // resolution will treat //foo/bar as host=foo,path=bar because that's
	  // how the browser resolves relative URLs.
	  if (slashesDenoteHost || proto || rest.match(/^\/\/[^@\/]+@[^@\/]+/)) {
	    var slashes = rest.substr(0, 2) === '//';
	    if (slashes && !(proto && hostlessProtocol[proto])) {
	      rest = rest.substr(2);
	      this.slashes = true;
	    }
	  }

	  if (!hostlessProtocol[proto] &&
	      (slashes || (proto && !slashedProtocol[proto]))) {

	    // there's a hostname.
	    // the first instance of /, ?, ;, or # ends the host.
	    //
	    // If there is an @ in the hostname, then non-host chars *are* allowed
	    // to the left of the last @ sign, unless some host-ending character
	    // comes *before* the @-sign.
	    // URLs are obnoxious.
	    //
	    // ex:
	    // http://a@b@c/ => user:a@b host:c
	    // http://a@b?@c => user:a host:c path:/?@c

	    // v0.12 TODO(isaacs): This is not quite how Chrome does things.
	    // Review our test case against browsers more comprehensively.

	    // find the first instance of any hostEndingChars
	    var hostEnd = -1;
	    for (var i = 0; i < hostEndingChars.length; i++) {
	      var hec = rest.indexOf(hostEndingChars[i]);
	      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))
	        hostEnd = hec;
	    }

	    // at this point, either we have an explicit point where the
	    // auth portion cannot go past, or the last @ char is the decider.
	    var auth, atSign;
	    if (hostEnd === -1) {
	      // atSign can be anywhere.
	      atSign = rest.lastIndexOf('@');
	    } else {
	      // atSign must be in auth portion.
	      // http://a@b/c@d => host:b auth:a path:/c@d
	      atSign = rest.lastIndexOf('@', hostEnd);
	    }

	    // Now we have a portion which is definitely the auth.
	    // Pull that off.
	    if (atSign !== -1) {
	      auth = rest.slice(0, atSign);
	      rest = rest.slice(atSign + 1);
	      this.auth = decodeURIComponent(auth);
	    }

	    // the host is the remaining to the left of the first non-host char
	    hostEnd = -1;
	    for (var i = 0; i < nonHostChars.length; i++) {
	      var hec = rest.indexOf(nonHostChars[i]);
	      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))
	        hostEnd = hec;
	    }
	    // if we still have not hit it, then the entire thing is a host.
	    if (hostEnd === -1)
	      hostEnd = rest.length;

	    this.host = rest.slice(0, hostEnd);
	    rest = rest.slice(hostEnd);

	    // pull out port.
	    this.parseHost();

	    // we've indicated that there is a hostname,
	    // so even if it's empty, it has to be present.
	    this.hostname = this.hostname || '';

	    // if hostname begins with [ and ends with ]
	    // assume that it's an IPv6 address.
	    var ipv6Hostname = this.hostname[0] === '[' &&
	        this.hostname[this.hostname.length - 1] === ']';

	    // validate a little.
	    if (!ipv6Hostname) {
	      var hostparts = this.hostname.split(/\./);
	      for (var i = 0, l = hostparts.length; i < l; i++) {
	        var part = hostparts[i];
	        if (!part) continue;
	        if (!part.match(hostnamePartPattern)) {
	          var newpart = '';
	          for (var j = 0, k = part.length; j < k; j++) {
	            if (part.charCodeAt(j) > 127) {
	              // we replace non-ASCII char with a temporary placeholder
	              // we need this to make sure size of hostname is not
	              // broken by replacing non-ASCII by nothing
	              newpart += 'x';
	            } else {
	              newpart += part[j];
	            }
	          }
	          // we test again with ASCII char only
	          if (!newpart.match(hostnamePartPattern)) {
	            var validParts = hostparts.slice(0, i);
	            var notHost = hostparts.slice(i + 1);
	            var bit = part.match(hostnamePartStart);
	            if (bit) {
	              validParts.push(bit[1]);
	              notHost.unshift(bit[2]);
	            }
	            if (notHost.length) {
	              rest = '/' + notHost.join('.') + rest;
	            }
	            this.hostname = validParts.join('.');
	            break;
	          }
	        }
	      }
	    }

	    if (this.hostname.length > hostnameMaxLen) {
	      this.hostname = '';
	    } else {
	      // hostnames are always lower case.
	      this.hostname = this.hostname.toLowerCase();
	    }

	    if (!ipv6Hostname) {
	      // IDNA Support: Returns a puny coded representation of "domain".
	      // It only converts the part of the domain name that
	      // has non ASCII characters. I.e. it dosent matter if
	      // you call it with a domain that already is in ASCII.
	      var domainArray = this.hostname.split('.');
	      var newOut = [];
	      for (var i = 0; i < domainArray.length; ++i) {
	        var s = domainArray[i];
	        newOut.push(s.match(/[^A-Za-z0-9_-]/) ?
	            'xn--' + punycode.encode(s) : s);
	      }
	      this.hostname = newOut.join('.');
	    }

	    var p = this.port ? ':' + this.port : '';
	    var h = this.hostname || '';
	    this.host = h + p;
	    this.href += this.host;

	    // strip [ and ] from the hostname
	    // the host field still retains them, though
	    if (ipv6Hostname) {
	      this.hostname = this.hostname.substr(1, this.hostname.length - 2);
	      if (rest[0] !== '/') {
	        rest = '/' + rest;
	      }
	    }
	  }

	  // now rest is set to the post-host stuff.
	  // chop off any delim chars.
	  if (!unsafeProtocol[lowerProto]) {

	    // First, make 100% sure that any "autoEscape" chars get
	    // escaped, even if encodeURIComponent doesn't think they
	    // need to be.
	    for (var i = 0, l = autoEscape.length; i < l; i++) {
	      var ae = autoEscape[i];
	      var esc = encodeURIComponent(ae);
	      if (esc === ae) {
	        esc = escape(ae);
	      }
	      rest = rest.split(ae).join(esc);
	    }
	  }


	  // chop off from the tail first.
	  var hash = rest.indexOf('#');
	  if (hash !== -1) {
	    // got a fragment string.
	    this.hash = rest.substr(hash);
	    rest = rest.slice(0, hash);
	  }
	  var qm = rest.indexOf('?');
	  if (qm !== -1) {
	    this.search = rest.substr(qm);
	    this.query = rest.substr(qm + 1);
	    if (parseQueryString) {
	      this.query = querystring.parse(this.query);
	    }
	    rest = rest.slice(0, qm);
	  } else if (parseQueryString) {
	    // no query string, but parseQueryString still requested
	    this.search = '';
	    this.query = {};
	  }
	  if (rest) this.pathname = rest;
	  if (slashedProtocol[lowerProto] &&
	      this.hostname && !this.pathname) {
	    this.pathname = '/';
	  }

	  //to support http.request
	  if (this.pathname || this.search) {
	    var p = this.pathname || '';
	    var s = this.search || '';
	    this.path = p + s;
	  }

	  // finally, reconstruct the href based on what has been validated.
	  this.href = this.format();
	  return this;
	};

	// format a parsed object into a url string
	function urlFormat(obj) {
	  // ensure it's an object, and not a string url.
	  // If it's an obj, this is a no-op.
	  // this way, you can call url_format() on strings
	  // to clean up potentially wonky urls.
	  if (isString(obj)) obj = urlParse(obj);
	  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);
	  return obj.format();
	}

	Url.prototype.format = function() {
	  var auth = this.auth || '';
	  if (auth) {
	    auth = encodeURIComponent(auth);
	    auth = auth.replace(/%3A/i, ':');
	    auth += '@';
	  }

	  var protocol = this.protocol || '',
	      pathname = this.pathname || '',
	      hash = this.hash || '',
	      host = false,
	      query = '';

	  if (this.host) {
	    host = auth + this.host;
	  } else if (this.hostname) {
	    host = auth + (this.hostname.indexOf(':') === -1 ?
	        this.hostname :
	        '[' + this.hostname + ']');
	    if (this.port) {
	      host += ':' + this.port;
	    }
	  }

	  if (this.query &&
	      isObject(this.query) &&
	      Object.keys(this.query).length) {
	    query = querystring.stringify(this.query);
	  }

	  var search = this.search || (query && ('?' + query)) || '';

	  if (protocol && protocol.substr(-1) !== ':') protocol += ':';

	  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.
	  // unless they had them to begin with.
	  if (this.slashes ||
	      (!protocol || slashedProtocol[protocol]) && host !== false) {
	    host = '//' + (host || '');
	    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;
	  } else if (!host) {
	    host = '';
	  }

	  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;
	  if (search && search.charAt(0) !== '?') search = '?' + search;

	  pathname = pathname.replace(/[?#]/g, function(match) {
	    return encodeURIComponent(match);
	  });
	  search = search.replace('#', '%23');

	  return protocol + host + pathname + search + hash;
	};

	function urlResolve(source, relative) {
	  return urlParse(source, false, true).resolve(relative);
	}

	Url.prototype.resolve = function(relative) {
	  return this.resolveObject(urlParse(relative, false, true)).format();
	};

	function urlResolveObject(source, relative) {
	  if (!source) return relative;
	  return urlParse(source, false, true).resolveObject(relative);
	}

	Url.prototype.resolveObject = function(relative) {
	  if (isString(relative)) {
	    var rel = new Url();
	    rel.parse(relative, false, true);
	    relative = rel;
	  }

	  var result = new Url();
	  Object.keys(this).forEach(function(k) {
	    result[k] = this[k];
	  }, this);

	  // hash is always overridden, no matter what.
	  // even href="" will remove it.
	  result.hash = relative.hash;

	  // if the relative url is empty, then there's nothing left to do here.
	  if (relative.href === '') {
	    result.href = result.format();
	    return result;
	  }

	  // hrefs like //foo/bar always cut to the protocol.
	  if (relative.slashes && !relative.protocol) {
	    // take everything except the protocol from relative
	    Object.keys(relative).forEach(function(k) {
	      if (k !== 'protocol')
	        result[k] = relative[k];
	    });

	    //urlParse appends trailing / to urls like http://www.example.com
	    if (slashedProtocol[result.protocol] &&
	        result.hostname && !result.pathname) {
	      result.path = result.pathname = '/';
	    }

	    result.href = result.format();
	    return result;
	  }

	  if (relative.protocol && relative.protocol !== result.protocol) {
	    // if it's a known url protocol, then changing
	    // the protocol does weird things
	    // first, if it's not file:, then we MUST have a host,
	    // and if there was a path
	    // to begin with, then we MUST have a path.
	    // if it is file:, then the host is dropped,
	    // because that's known to be hostless.
	    // anything else is assumed to be absolute.
	    if (!slashedProtocol[relative.protocol]) {
	      Object.keys(relative).forEach(function(k) {
	        result[k] = relative[k];
	      });
	      result.href = result.format();
	      return result;
	    }

	    result.protocol = relative.protocol;
	    if (!relative.host && !hostlessProtocol[relative.protocol]) {
	      var relPath = (relative.pathname || '').split('/');
	      while (relPath.length && !(relative.host = relPath.shift()));
	      if (!relative.host) relative.host = '';
	      if (!relative.hostname) relative.hostname = '';
	      if (relPath[0] !== '') relPath.unshift('');
	      if (relPath.length < 2) relPath.unshift('');
	      result.pathname = relPath.join('/');
	    } else {
	      result.pathname = relative.pathname;
	    }
	    result.search = relative.search;
	    result.query = relative.query;
	    result.host = relative.host || '';
	    result.auth = relative.auth;
	    result.hostname = relative.hostname || relative.host;
	    result.port = relative.port;
	    // to support http.request
	    if (result.pathname || result.search) {
	      var p = result.pathname || '';
	      var s = result.search || '';
	      result.path = p + s;
	    }
	    result.slashes = result.slashes || relative.slashes;
	    result.href = result.format();
	    return result;
	  }

	  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),
	      isRelAbs = (
	          relative.host ||
	          relative.pathname && relative.pathname.charAt(0) === '/'
	      ),
	      mustEndAbs = (isRelAbs || isSourceAbs ||
	                    (result.host && relative.pathname)),
	      removeAllDots = mustEndAbs,
	      srcPath = result.pathname && result.pathname.split('/') || [],
	      relPath = relative.pathname && relative.pathname.split('/') || [],
	      psychotic = result.protocol && !slashedProtocol[result.protocol];

	  // if the url is a non-slashed url, then relative
	  // links like ../.. should be able
	  // to crawl up to the hostname, as well.  This is strange.
	  // result.protocol has already been set by now.
	  // Later on, put the first path part into the host field.
	  if (psychotic) {
	    result.hostname = '';
	    result.port = null;
	    if (result.host) {
	      if (srcPath[0] === '') srcPath[0] = result.host;
	      else srcPath.unshift(result.host);
	    }
	    result.host = '';
	    if (relative.protocol) {
	      relative.hostname = null;
	      relative.port = null;
	      if (relative.host) {
	        if (relPath[0] === '') relPath[0] = relative.host;
	        else relPath.unshift(relative.host);
	      }
	      relative.host = null;
	    }
	    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');
	  }

	  if (isRelAbs) {
	    // it's absolute.
	    result.host = (relative.host || relative.host === '') ?
	                  relative.host : result.host;
	    result.hostname = (relative.hostname || relative.hostname === '') ?
	                      relative.hostname : result.hostname;
	    result.search = relative.search;
	    result.query = relative.query;
	    srcPath = relPath;
	    // fall through to the dot-handling below.
	  } else if (relPath.length) {
	    // it's relative
	    // throw away the existing file, and take the new path instead.
	    if (!srcPath) srcPath = [];
	    srcPath.pop();
	    srcPath = srcPath.concat(relPath);
	    result.search = relative.search;
	    result.query = relative.query;
	  } else if (!isNullOrUndefined(relative.search)) {
	    // just pull out the search.
	    // like href='?foo'.
	    // Put this after the other two cases because it simplifies the booleans
	    if (psychotic) {
	      result.hostname = result.host = srcPath.shift();
	      //occationaly the auth can get stuck only in host
	      //this especialy happens in cases like
	      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')
	      var authInHost = result.host && result.host.indexOf('@') > 0 ?
	                       result.host.split('@') : false;
	      if (authInHost) {
	        result.auth = authInHost.shift();
	        result.host = result.hostname = authInHost.shift();
	      }
	    }
	    result.search = relative.search;
	    result.query = relative.query;
	    //to support http.request
	    if (!isNull(result.pathname) || !isNull(result.search)) {
	      result.path = (result.pathname ? result.pathname : '') +
	                    (result.search ? result.search : '');
	    }
	    result.href = result.format();
	    return result;
	  }

	  if (!srcPath.length) {
	    // no path at all.  easy.
	    // we've already handled the other stuff above.
	    result.pathname = null;
	    //to support http.request
	    if (result.search) {
	      result.path = '/' + result.search;
	    } else {
	      result.path = null;
	    }
	    result.href = result.format();
	    return result;
	  }

	  // if a url ENDs in . or .., then it must get a trailing slash.
	  // however, if it ends in anything else non-slashy,
	  // then it must NOT get a trailing slash.
	  var last = srcPath.slice(-1)[0];
	  var hasTrailingSlash = (
	      (result.host || relative.host) && (last === '.' || last === '..') ||
	      last === '');

	  // strip single dots, resolve double dots to parent dir
	  // if the path tries to go above the root, `up` ends up > 0
	  var up = 0;
	  for (var i = srcPath.length; i >= 0; i--) {
	    last = srcPath[i];
	    if (last == '.') {
	      srcPath.splice(i, 1);
	    } else if (last === '..') {
	      srcPath.splice(i, 1);
	      up++;
	    } else if (up) {
	      srcPath.splice(i, 1);
	      up--;
	    }
	  }

	  // if the path is allowed to go above the root, restore leading ..s
	  if (!mustEndAbs && !removeAllDots) {
	    for (; up--; up) {
	      srcPath.unshift('..');
	    }
	  }

	  if (mustEndAbs && srcPath[0] !== '' &&
	      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {
	    srcPath.unshift('');
	  }

	  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {
	    srcPath.push('');
	  }

	  var isAbsolute = srcPath[0] === '' ||
	      (srcPath[0] && srcPath[0].charAt(0) === '/');

	  // put the host back
	  if (psychotic) {
	    result.hostname = result.host = isAbsolute ? '' :
	                                    srcPath.length ? srcPath.shift() : '';
	    //occationaly the auth can get stuck only in host
	    //this especialy happens in cases like
	    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')
	    var authInHost = result.host && result.host.indexOf('@') > 0 ?
	                     result.host.split('@') : false;
	    if (authInHost) {
	      result.auth = authInHost.shift();
	      result.host = result.hostname = authInHost.shift();
	    }
	  }

	  mustEndAbs = mustEndAbs || (result.host && srcPath.length);

	  if (mustEndAbs && !isAbsolute) {
	    srcPath.unshift('');
	  }

	  if (!srcPath.length) {
	    result.pathname = null;
	    result.path = null;
	  } else {
	    result.pathname = srcPath.join('/');
	  }

	  //to support request.http
	  if (!isNull(result.pathname) || !isNull(result.search)) {
	    result.path = (result.pathname ? result.pathname : '') +
	                  (result.search ? result.search : '');
	  }
	  result.auth = relative.auth || result.auth;
	  result.slashes = result.slashes || relative.slashes;
	  result.href = result.format();
	  return result;
	};

	Url.prototype.parseHost = function() {
	  var host = this.host;
	  var port = portPattern.exec(host);
	  if (port) {
	    port = port[0];
	    if (port !== ':') {
	      this.port = port.substr(1);
	    }
	    host = host.substr(0, host.length - port.length);
	  }
	  if (host) this.hostname = host;
	};

	function isString(arg) {
	  return typeof arg === "string";
	}

	function isObject(arg) {
	  return typeof arg === 'object' && arg !== null;
	}

	function isNull(arg) {
	  return arg === null;
	}
	function isNullOrUndefined(arg) {
	  return  arg == null;
	}


/***/ },
/* 20 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module, global) {/*! https://mths.be/punycode v1.3.2 by @mathias */
	;(function(root) {

		/** Detect free variables */
		var freeExports = typeof exports == 'object' && exports &&
			!exports.nodeType && exports;
		var freeModule = typeof module == 'object' && module &&
			!module.nodeType && module;
		var freeGlobal = typeof global == 'object' && global;
		if (
			freeGlobal.global === freeGlobal ||
			freeGlobal.window === freeGlobal ||
			freeGlobal.self === freeGlobal
		) {
			root = freeGlobal;
		}

		/**
		 * The `punycode` object.
		 * @name punycode
		 * @type Object
		 */
		var punycode,

		/** Highest positive signed 32-bit float value */
		maxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1

		/** Bootstring parameters */
		base = 36,
		tMin = 1,
		tMax = 26,
		skew = 38,
		damp = 700,
		initialBias = 72,
		initialN = 128, // 0x80
		delimiter = '-', // '\x2D'

		/** Regular expressions */
		regexPunycode = /^xn--/,
		regexNonASCII = /[^\x20-\x7E]/, // unprintable ASCII chars + non-ASCII chars
		regexSeparators = /[\x2E\u3002\uFF0E\uFF61]/g, // RFC 3490 separators

		/** Error messages */
		errors = {
			'overflow': 'Overflow: input needs wider integers to process',
			'not-basic': 'Illegal input >= 0x80 (not a basic code point)',
			'invalid-input': 'Invalid input'
		},

		/** Convenience shortcuts */
		baseMinusTMin = base - tMin,
		floor = Math.floor,
		stringFromCharCode = String.fromCharCode,

		/** Temporary variable */
		key;

		/*--------------------------------------------------------------------------*/

		/**
		 * A generic error utility function.
		 * @private
		 * @param {String} type The error type.
		 * @returns {Error} Throws a `RangeError` with the applicable error message.
		 */
		function error(type) {
			throw RangeError(errors[type]);
		}

		/**
		 * A generic `Array#map` utility function.
		 * @private
		 * @param {Array} array The array to iterate over.
		 * @param {Function} callback The function that gets called for every array
		 * item.
		 * @returns {Array} A new array of values returned by the callback function.
		 */
		function map(array, fn) {
			var length = array.length;
			var result = [];
			while (length--) {
				result[length] = fn(array[length]);
			}
			return result;
		}

		/**
		 * A simple `Array#map`-like wrapper to work with domain name strings or email
		 * addresses.
		 * @private
		 * @param {String} domain The domain name or email address.
		 * @param {Function} callback The function that gets called for every
		 * character.
		 * @returns {Array} A new string of characters returned by the callback
		 * function.
		 */
		function mapDomain(string, fn) {
			var parts = string.split('@');
			var result = '';
			if (parts.length > 1) {
				// In email addresses, only the domain name should be punycoded. Leave
				// the local part (i.e. everything up to `@`) intact.
				result = parts[0] + '@';
				string = parts[1];
			}
			// Avoid `split(regex)` for IE8 compatibility. See #17.
			string = string.replace(regexSeparators, '\x2E');
			var labels = string.split('.');
			var encoded = map(labels, fn).join('.');
			return result + encoded;
		}

		/**
		 * Creates an array containing the numeric code points of each Unicode
		 * character in the string. While JavaScript uses UCS-2 internally,
		 * this function will convert a pair of surrogate halves (each of which
		 * UCS-2 exposes as separate characters) into a single code point,
		 * matching UTF-16.
		 * @see `punycode.ucs2.encode`
		 * @see <https://mathiasbynens.be/notes/javascript-encoding>
		 * @memberOf punycode.ucs2
		 * @name decode
		 * @param {String} string The Unicode input string (UCS-2).
		 * @returns {Array} The new array of code points.
		 */
		function ucs2decode(string) {
			var output = [],
			    counter = 0,
			    length = string.length,
			    value,
			    extra;
			while (counter < length) {
				value = string.charCodeAt(counter++);
				if (value >= 0xD800 && value <= 0xDBFF && counter < length) {
					// high surrogate, and there is a next character
					extra = string.charCodeAt(counter++);
					if ((extra & 0xFC00) == 0xDC00) { // low surrogate
						output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);
					} else {
						// unmatched surrogate; only append this code unit, in case the next
						// code unit is the high surrogate of a surrogate pair
						output.push(value);
						counter--;
					}
				} else {
					output.push(value);
				}
			}
			return output;
		}

		/**
		 * Creates a string based on an array of numeric code points.
		 * @see `punycode.ucs2.decode`
		 * @memberOf punycode.ucs2
		 * @name encode
		 * @param {Array} codePoints The array of numeric code points.
		 * @returns {String} The new Unicode string (UCS-2).
		 */
		function ucs2encode(array) {
			return map(array, function(value) {
				var output = '';
				if (value > 0xFFFF) {
					value -= 0x10000;
					output += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);
					value = 0xDC00 | value & 0x3FF;
				}
				output += stringFromCharCode(value);
				return output;
			}).join('');
		}

		/**
		 * Converts a basic code point into a digit/integer.
		 * @see `digitToBasic()`
		 * @private
		 * @param {Number} codePoint The basic numeric code point value.
		 * @returns {Number} The numeric value of a basic code point (for use in
		 * representing integers) in the range `0` to `base - 1`, or `base` if
		 * the code point does not represent a value.
		 */
		function basicToDigit(codePoint) {
			if (codePoint - 48 < 10) {
				return codePoint - 22;
			}
			if (codePoint - 65 < 26) {
				return codePoint - 65;
			}
			if (codePoint - 97 < 26) {
				return codePoint - 97;
			}
			return base;
		}

		/**
		 * Converts a digit/integer into a basic code point.
		 * @see `basicToDigit()`
		 * @private
		 * @param {Number} digit The numeric value of a basic code point.
		 * @returns {Number} The basic code point whose value (when used for
		 * representing integers) is `digit`, which needs to be in the range
		 * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is
		 * used; else, the lowercase form is used. The behavior is undefined
		 * if `flag` is non-zero and `digit` has no uppercase form.
		 */
		function digitToBasic(digit, flag) {
			//  0..25 map to ASCII a..z or A..Z
			// 26..35 map to ASCII 0..9
			return digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);
		}

		/**
		 * Bias adaptation function as per section 3.4 of RFC 3492.
		 * http://tools.ietf.org/html/rfc3492#section-3.4
		 * @private
		 */
		function adapt(delta, numPoints, firstTime) {
			var k = 0;
			delta = firstTime ? floor(delta / damp) : delta >> 1;
			delta += floor(delta / numPoints);
			for (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {
				delta = floor(delta / baseMinusTMin);
			}
			return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));
		}

		/**
		 * Converts a Punycode string of ASCII-only symbols to a string of Unicode
		 * symbols.
		 * @memberOf punycode
		 * @param {String} input The Punycode string of ASCII-only symbols.
		 * @returns {String} The resulting string of Unicode symbols.
		 */
		function decode(input) {
			// Don't use UCS-2
			var output = [],
			    inputLength = input.length,
			    out,
			    i = 0,
			    n = initialN,
			    bias = initialBias,
			    basic,
			    j,
			    index,
			    oldi,
			    w,
			    k,
			    digit,
			    t,
			    /** Cached calculation results */
			    baseMinusT;

			// Handle the basic code points: let `basic` be the number of input code
			// points before the last delimiter, or `0` if there is none, then copy
			// the first basic code points to the output.

			basic = input.lastIndexOf(delimiter);
			if (basic < 0) {
				basic = 0;
			}

			for (j = 0; j < basic; ++j) {
				// if it's not a basic code point
				if (input.charCodeAt(j) >= 0x80) {
					error('not-basic');
				}
				output.push(input.charCodeAt(j));
			}

			// Main decoding loop: start just after the last delimiter if any basic code
			// points were copied; start at the beginning otherwise.

			for (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {

				// `index` is the index of the next character to be consumed.
				// Decode a generalized variable-length integer into `delta`,
				// which gets added to `i`. The overflow checking is easier
				// if we increase `i` as we go, then subtract off its starting
				// value at the end to obtain `delta`.
				for (oldi = i, w = 1, k = base; /* no condition */; k += base) {

					if (index >= inputLength) {
						error('invalid-input');
					}

					digit = basicToDigit(input.charCodeAt(index++));

					if (digit >= base || digit > floor((maxInt - i) / w)) {
						error('overflow');
					}

					i += digit * w;
					t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);

					if (digit < t) {
						break;
					}

					baseMinusT = base - t;
					if (w > floor(maxInt / baseMinusT)) {
						error('overflow');
					}

					w *= baseMinusT;

				}

				out = output.length + 1;
				bias = adapt(i - oldi, out, oldi == 0);

				// `i` was supposed to wrap around from `out` to `0`,
				// incrementing `n` each time, so we'll fix that now:
				if (floor(i / out) > maxInt - n) {
					error('overflow');
				}

				n += floor(i / out);
				i %= out;

				// Insert `n` at position `i` of the output
				output.splice(i++, 0, n);

			}

			return ucs2encode(output);
		}

		/**
		 * Converts a string of Unicode symbols (e.g. a domain name label) to a
		 * Punycode string of ASCII-only symbols.
		 * @memberOf punycode
		 * @param {String} input The string of Unicode symbols.
		 * @returns {String} The resulting Punycode string of ASCII-only symbols.
		 */
		function encode(input) {
			var n,
			    delta,
			    handledCPCount,
			    basicLength,
			    bias,
			    j,
			    m,
			    q,
			    k,
			    t,
			    currentValue,
			    output = [],
			    /** `inputLength` will hold the number of code points in `input`. */
			    inputLength,
			    /** Cached calculation results */
			    handledCPCountPlusOne,
			    baseMinusT,
			    qMinusT;

			// Convert the input in UCS-2 to Unicode
			input = ucs2decode(input);

			// Cache the length
			inputLength = input.length;

			// Initialize the state
			n = initialN;
			delta = 0;
			bias = initialBias;

			// Handle the basic code points
			for (j = 0; j < inputLength; ++j) {
				currentValue = input[j];
				if (currentValue < 0x80) {
					output.push(stringFromCharCode(currentValue));
				}
			}

			handledCPCount = basicLength = output.length;

			// `handledCPCount` is the number of code points that have been handled;
			// `basicLength` is the number of basic code points.

			// Finish the basic string - if it is not empty - with a delimiter
			if (basicLength) {
				output.push(delimiter);
			}

			// Main encoding loop:
			while (handledCPCount < inputLength) {

				// All non-basic code points < n have been handled already. Find the next
				// larger one:
				for (m = maxInt, j = 0; j < inputLength; ++j) {
					currentValue = input[j];
					if (currentValue >= n && currentValue < m) {
						m = currentValue;
					}
				}

				// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,
				// but guard against overflow
				handledCPCountPlusOne = handledCPCount + 1;
				if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {
					error('overflow');
				}

				delta += (m - n) * handledCPCountPlusOne;
				n = m;

				for (j = 0; j < inputLength; ++j) {
					currentValue = input[j];

					if (currentValue < n && ++delta > maxInt) {
						error('overflow');
					}

					if (currentValue == n) {
						// Represent delta as a generalized variable-length integer
						for (q = delta, k = base; /* no condition */; k += base) {
							t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);
							if (q < t) {
								break;
							}
							qMinusT = q - t;
							baseMinusT = base - t;
							output.push(
								stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))
							);
							q = floor(qMinusT / baseMinusT);
						}

						output.push(stringFromCharCode(digitToBasic(q, 0)));
						bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);
						delta = 0;
						++handledCPCount;
					}
				}

				++delta;
				++n;

			}
			return output.join('');
		}

		/**
		 * Converts a Punycode string representing a domain name or an email address
		 * to Unicode. Only the Punycoded parts of the input will be converted, i.e.
		 * it doesn't matter if you call it on a string that has already been
		 * converted to Unicode.
		 * @memberOf punycode
		 * @param {String} input The Punycoded domain name or email address to
		 * convert to Unicode.
		 * @returns {String} The Unicode representation of the given Punycode
		 * string.
		 */
		function toUnicode(input) {
			return mapDomain(input, function(string) {
				return regexPunycode.test(string)
					? decode(string.slice(4).toLowerCase())
					: string;
			});
		}

		/**
		 * Converts a Unicode string representing a domain name or an email address to
		 * Punycode. Only the non-ASCII parts of the domain name will be converted,
		 * i.e. it doesn't matter if you call it with a domain that's already in
		 * ASCII.
		 * @memberOf punycode
		 * @param {String} input The domain name or email address to convert, as a
		 * Unicode string.
		 * @returns {String} The Punycode representation of the given domain name or
		 * email address.
		 */
		function toASCII(input) {
			return mapDomain(input, function(string) {
				return regexNonASCII.test(string)
					? 'xn--' + encode(string)
					: string;
			});
		}

		/*--------------------------------------------------------------------------*/

		/** Define the public API */
		punycode = {
			/**
			 * A string representing the current Punycode.js version number.
			 * @memberOf punycode
			 * @type String
			 */
			'version': '1.3.2',
			/**
			 * An object of methods to convert from JavaScript's internal character
			 * representation (UCS-2) to Unicode code points, and back.
			 * @see <https://mathiasbynens.be/notes/javascript-encoding>
			 * @memberOf punycode
			 * @type Object
			 */
			'ucs2': {
				'decode': ucs2decode,
				'encode': ucs2encode
			},
			'decode': decode,
			'encode': encode,
			'toASCII': toASCII,
			'toUnicode': toUnicode
		};

		/** Expose `punycode` */
		// Some AMD build optimizers, like r.js, check for specific condition patterns
		// like the following:
		if (
			true
		) {
			!(__WEBPACK_AMD_DEFINE_RESULT__ = function() {
				return punycode;
			}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		} else if (freeExports && freeModule) {
			if (module.exports == freeExports) { // in Node.js or RingoJS v0.8.0+
				freeModule.exports = punycode;
			} else { // in Narwhal or RingoJS v0.7.0-
				for (key in punycode) {
					punycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);
				}
			}
		} else { // in Rhino or a web browser
			root.punycode = punycode;
		}

	}(this));

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(21)(module), (function() { return this; }())))

/***/ },
/* 21 */
/***/ function(module, exports) {

	module.exports = function(module) {
		if(!module.webpackPolyfill) {
			module.deprecate = function() {};
			module.paths = [];
			// module.parent = undefined by default
			module.children = [];
			module.webpackPolyfill = 1;
		}
		return module;
	}


/***/ },
/* 22 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.decode = exports.parse = __webpack_require__(23);
	exports.encode = exports.stringify = __webpack_require__(24);


/***/ },
/* 23 */
/***/ function(module, exports) {

	// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.

	'use strict';

	// If obj.hasOwnProperty has been overridden, then calling
	// obj.hasOwnProperty(prop) will break.
	// See: https://github.com/joyent/node/issues/1707
	function hasOwnProperty(obj, prop) {
	  return Object.prototype.hasOwnProperty.call(obj, prop);
	}

	module.exports = function(qs, sep, eq, options) {
	  sep = sep || '&';
	  eq = eq || '=';
	  var obj = {};

	  if (typeof qs !== 'string' || qs.length === 0) {
	    return obj;
	  }

	  var regexp = /\+/g;
	  qs = qs.split(sep);

	  var maxKeys = 1000;
	  if (options && typeof options.maxKeys === 'number') {
	    maxKeys = options.maxKeys;
	  }

	  var len = qs.length;
	  // maxKeys <= 0 means that we should not limit keys count
	  if (maxKeys > 0 && len > maxKeys) {
	    len = maxKeys;
	  }

	  for (var i = 0; i < len; ++i) {
	    var x = qs[i].replace(regexp, '%20'),
	        idx = x.indexOf(eq),
	        kstr, vstr, k, v;

	    if (idx >= 0) {
	      kstr = x.substr(0, idx);
	      vstr = x.substr(idx + 1);
	    } else {
	      kstr = x;
	      vstr = '';
	    }

	    k = decodeURIComponent(kstr);
	    v = decodeURIComponent(vstr);

	    if (!hasOwnProperty(obj, k)) {
	      obj[k] = v;
	    } else if (Array.isArray(obj[k])) {
	      obj[k].push(v);
	    } else {
	      obj[k] = [obj[k], v];
	    }
	  }

	  return obj;
	};


/***/ },
/* 24 */
/***/ function(module, exports) {

	// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.

	'use strict';

	var stringifyPrimitive = function(v) {
	  switch (typeof v) {
	    case 'string':
	      return v;

	    case 'boolean':
	      return v ? 'true' : 'false';

	    case 'number':
	      return isFinite(v) ? v : '';

	    default:
	      return '';
	  }
	};

	module.exports = function(obj, sep, eq, name) {
	  sep = sep || '&';
	  eq = eq || '=';
	  if (obj === null) {
	    obj = undefined;
	  }

	  if (typeof obj === 'object') {
	    return Object.keys(obj).map(function(k) {
	      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;
	      if (Array.isArray(obj[k])) {
	        return obj[k].map(function(v) {
	          return ks + encodeURIComponent(stringifyPrimitive(v));
	        }).join(sep);
	      } else {
	        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));
	      }
	    }).join(sep);

	  }

	  if (!name) return '';
	  return encodeURIComponent(stringifyPrimitive(name)) + eq +
	         encodeURIComponent(stringifyPrimitive(obj));
	};


/***/ },
/* 25 */
/***/ function(module, exports) {

	'use strict';

	module.exports = function equal(a, b) {
	  if (a === b) return true;

	  var arrA = Array.isArray(a)
	    , arrB = Array.isArray(b)
	    , i;

	  if (arrA && arrB) {
	    if (a.length != b.length) return false;
	    for (i = 0; i < a.length; i++)
	      if (!equal(a[i], b[i])) return false;
	    return true;
	  }

	  if (arrA != arrB) return false;

	  if (a && b && typeof a === 'object' && typeof b === 'object') {
	    var keys = Object.keys(a);

	    if (keys.length !== Object.keys(b).length) return false;

	    for (i = 0; i < keys.length; i++)
	      if (b[keys[i]] === undefined) return false;

	    for (i = 0; i < keys.length; i++)
	      if(!equal(a[keys[i]], b[keys[i]])) return false;

	    return true;
	  }

	  return false;
	};


/***/ },
/* 26 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';


	module.exports = {
	  copy: copy,
	  deepClone: deepClone,
	  checkDataType: checkDataType,
	  checkDataTypes: checkDataTypes,
	  toHash: toHash,
	  getProperty: getProperty,
	  escapeQuotes: escapeQuotes,
	  ucs2length: ucs2length,
	  varOccurences: varOccurences,
	  varReplace: varReplace,
	  cleanUpCode: cleanUpCode,
	  cleanUpVarErrors: cleanUpVarErrors,
	  schemaHasRules: schemaHasRules,
	  stableStringify: __webpack_require__(27),
	  toQuotedString: toQuotedString,
	  getPathExpr: getPathExpr,
	  getPath: getPath
	};


	function copy(o, to) {
	  to = to || {};
	  for (var key in o) to[key] = o[key];
	  return to;
	}


	function deepClone(o) {
	  if (typeof o != 'object' || o === null) return o;
	  var res;
	  if (Array.isArray(o)) {
	    res = [];
	    for (var i=0; i<o.length; i++)
	      res[i] = deepClone(o[i]);
	  } else {
	    res = {};
	    for (var key in o)
	      res[key] = deepClone(o[key]);
	  }
	  return res;
	}


	function checkDataType(dataType, data, negate) {
	  var EQUAL = negate ? ' !== ' : ' === '
	    , AND = negate ? ' || ' : ' && '
	    , OK = negate ? '!' : ''
	    , NOT = negate ? '' : '!';
	  switch (dataType) {
	    case 'null': return data + EQUAL + 'null';
	    case 'array': return OK + 'Array.isArray(' + data + ')';
	    case 'object': return '(' + OK + data + AND +
	                          'typeof ' + data + EQUAL + '"object"' + AND +
	                          NOT + 'Array.isArray(' + data + '))';
	    case 'integer': return '(typeof ' + data + EQUAL + '"number"' + AND +
	                           NOT + '(' + data + ' % 1))';
	    default: return 'typeof ' + data + EQUAL + '"' + dataType + '"';
	  }
	}


	function checkDataTypes(dataTypes, data) {
	  switch (dataTypes.length) {
	    case 1: return checkDataType(dataTypes[0], data, true);
	    default:
	      var code = '';
	      var types = toHash(dataTypes);
	      if (types.array && types.object) {
	        code = types.null ? '(': '(!' + data + ' || ';
	        code += 'typeof ' + data + ' !== "object")';
	        delete types.null;
	        delete types.array;
	        delete types.object;
	      }
	      if (types.number) delete types.integer;
	      for (var t in types)
	        code += (code ? ' && ' : '' ) + checkDataType(t, data, true);

	      return code;
	  }
	}


	function toHash(arr) {
	  var hash = {};
	  for (var i=0; i<arr.length; i++) hash[arr[i]] = true;
	  return hash;
	}


	var IDENTIFIER = /^[a-z$_][a-z$_0-9]*$/i;
	var SINGLE_QUOTE = /'|\\/g;
	function getProperty(key) {
	  return IDENTIFIER.test(key)
	          ? '.' + key
	          : "['" + key.replace(SINGLE_QUOTE, '\\$&') + "']";
	}


	function escapeQuotes(str) {
	  return str.replace(SINGLE_QUOTE, '\\$&');
	}


	// https://mathiasbynens.be/notes/javascript-encoding
	// https://github.com/bestiejs/punycode.js - punycode.ucs2.decode
	function ucs2length(str) {
	  var length = 0
	    , len = str.length
	    , pos = 0
	    , value;
	  while (pos < len) {
	    length++;
	    value = str.charCodeAt(pos++);
	    if (value >= 0xD800 && value <= 0xDBFF && pos < len) {
	      // high surrogate, and there is a next character
	      value = str.charCodeAt(pos);
	      if ((value & 0xFC00) == 0xDC00) pos++; // low surrogate
	    }
	  }
	  return length;
	}


	function varOccurences(str, dataVar) {
	  dataVar += '[^0-9]';
	  var matches = str.match(new RegExp(dataVar, 'g'));
	  return matches ? matches.length : 0;
	}


	function varReplace(str, dataVar, expr) {
	  dataVar += '([^0-9])';
	  return str.replace(new RegExp(dataVar, 'g'), expr + '$1');
	}


	var EMPTY_ELSE = /else\s*{\s*}/g
	  , EMPTY_IF_NO_ELSE = /if\s*\([^)]+\)\s*\{\s*\}(?!\s*else)/g
	  , EMPTY_IF_WITH_ELSE = /if\s*\(([^)]+)\)\s*\{\s*\}\s*else(?!\s*if)/g;
	function cleanUpCode(out) {
	  return out.replace(EMPTY_ELSE, '')
	            .replace(EMPTY_IF_NO_ELSE, '')
	            .replace(EMPTY_IF_WITH_ELSE, 'if (!($1))');
	}


	var ERRORS_REGEXP = /[^v\.]errors/g
	  , REMOVE_ERRORS = /var errors = 0;|var vErrors = null;|validate.errors = vErrors;/g
	  , RETURN_VALID = 'return errors === 0;'
	  , RETURN_TRUE = 'validate.errors = null; return true;';

	function cleanUpVarErrors(out) {
	  var matches = out.match(ERRORS_REGEXP);
	  if (matches && matches.length === 2)
	    return out.replace(REMOVE_ERRORS, '')
	              .replace(RETURN_VALID, RETURN_TRUE);
	  else
	    return out;
	}


	function schemaHasRules(schema, rules) {
	  for (var key in schema) if (rules[key]) return true;
	}


	function toQuotedString (str) {
	  return '\'' + escapeQuotes(str) + '\'';
	}


	function getPathExpr (currentPath, expr, jsonPointers, isNumber) {
	  var path = jsonPointers
	              ? '\'/\' + ' + expr + (isNumber ? '' : '.replace(/~/g, \'~0\').replace(/\\//g, \'~1\')')
	              : (isNumber ? '\'[\' + ' + expr + ' + \']\'' : '\'[\\\'\' + ' + expr + ' + \'\\\']\'');
	  return joinPaths(currentPath, path);
	}


	function getPath (currentPath, prop, jsonPointers) {
	  var path = jsonPointers
	              ? toQuotedString('/' + prop.replace(/~/g, '~0').replace(/\//g, '~1'))
	              : toQuotedString(getProperty(prop));
	  return joinPaths(currentPath, path);
	}


	function joinPaths (a, b) {
	  if (a == '""') return b;
	  return (a + ' + ' + b).replace(/' \+ '/g, '');
	}


/***/ },
/* 27 */
/***/ function(module, exports, __webpack_require__) {

	var json = typeof JSON !== 'undefined' ? JSON : __webpack_require__(28);

	module.exports = function (obj, opts) {
	    if (!opts) opts = {};
	    if (typeof opts === 'function') opts = { cmp: opts };
	    var space = opts.space || '';
	    if (typeof space === 'number') space = Array(space+1).join(' ');
	    var cycles = (typeof opts.cycles === 'boolean') ? opts.cycles : false;
	    var replacer = opts.replacer || function(key, value) { return value; };

	    var cmp = opts.cmp && (function (f) {
	        return function (node) {
	            return function (a, b) {
	                var aobj = { key: a, value: node[a] };
	                var bobj = { key: b, value: node[b] };
	                return f(aobj, bobj);
	            };
	        };
	    })(opts.cmp);

	    var seen = [];
	    return (function stringify (parent, key, node, level) {
	        var indent = space ? ('\n' + new Array(level + 1).join(space)) : '';
	        var colonSeparator = space ? ': ' : ':';

	        if (node && node.toJSON && typeof node.toJSON === 'function') {
	            node = node.toJSON();
	        }

	        node = replacer.call(parent, key, node);

	        if (node === undefined) {
	            return;
	        }
	        if (typeof node !== 'object' || node === null) {
	            return json.stringify(node);
	        }
	        if (isArray(node)) {
	            var out = [];
	            for (var i = 0; i < node.length; i++) {
	                var item = stringify(node, i, node[i], level+1) || json.stringify(null);
	                out.push(indent + space + item);
	            }
	            return '[' + out.join(',') + indent + ']';
	        }
	        else {
	            if (seen.indexOf(node) !== -1) {
	                if (cycles) return json.stringify('__cycle__');
	                throw new TypeError('Converting circular structure to JSON');
	            }
	            else seen.push(node);

	            var keys = objectKeys(node).sort(cmp && cmp(node));
	            var out = [];
	            for (var i = 0; i < keys.length; i++) {
	                var key = keys[i];
	                var value = stringify(node, key, node[key], level+1);

	                if(!value) continue;

	                var keyValue = json.stringify(key)
	                    + colonSeparator
	                    + value;
	                ;
	                out.push(indent + space + keyValue);
	            }
	            return '{' + out.join(',') + indent + '}';
	        }
	    })({ '': obj }, '', obj, 0);
	};

	var isArray = Array.isArray || function (x) {
	    return {}.toString.call(x) === '[object Array]';
	};

	var objectKeys = Object.keys || function (obj) {
	    var has = Object.prototype.hasOwnProperty || function () { return true };
	    var keys = [];
	    for (var key in obj) {
	        if (has.call(obj, key)) keys.push(key);
	    }
	    return keys;
	};


/***/ },
/* 28 */
/***/ function(module, exports, __webpack_require__) {

	exports.parse = __webpack_require__(29);
	exports.stringify = __webpack_require__(30);


/***/ },
/* 29 */
/***/ function(module, exports) {

	var at, // The index of the current character
	    ch, // The current character
	    escapee = {
	        '"':  '"',
	        '\\': '\\',
	        '/':  '/',
	        b:    '\b',
	        f:    '\f',
	        n:    '\n',
	        r:    '\r',
	        t:    '\t'
	    },
	    text,

	    error = function (m) {
	        // Call error when something is wrong.
	        throw {
	            name:    'SyntaxError',
	            message: m,
	            at:      at,
	            text:    text
	        };
	    },
	    
	    next = function (c) {
	        // If a c parameter is provided, verify that it matches the current character.
	        if (c && c !== ch) {
	            error("Expected '" + c + "' instead of '" + ch + "'");
	        }
	        
	        // Get the next character. When there are no more characters,
	        // return the empty string.
	        
	        ch = text.charAt(at);
	        at += 1;
	        return ch;
	    },
	    
	    number = function () {
	        // Parse a number value.
	        var number,
	            string = '';
	        
	        if (ch === '-') {
	            string = '-';
	            next('-');
	        }
	        while (ch >= '0' && ch <= '9') {
	            string += ch;
	            next();
	        }
	        if (ch === '.') {
	            string += '.';
	            while (next() && ch >= '0' && ch <= '9') {
	                string += ch;
	            }
	        }
	        if (ch === 'e' || ch === 'E') {
	            string += ch;
	            next();
	            if (ch === '-' || ch === '+') {
	                string += ch;
	                next();
	            }
	            while (ch >= '0' && ch <= '9') {
	                string += ch;
	                next();
	            }
	        }
	        number = +string;
	        if (!isFinite(number)) {
	            error("Bad number");
	        } else {
	            return number;
	        }
	    },
	    
	    string = function () {
	        // Parse a string value.
	        var hex,
	            i,
	            string = '',
	            uffff;
	        
	        // When parsing for string values, we must look for " and \ characters.
	        if (ch === '"') {
	            while (next()) {
	                if (ch === '"') {
	                    next();
	                    return string;
	                } else if (ch === '\\') {
	                    next();
	                    if (ch === 'u') {
	                        uffff = 0;
	                        for (i = 0; i < 4; i += 1) {
	                            hex = parseInt(next(), 16);
	                            if (!isFinite(hex)) {
	                                break;
	                            }
	                            uffff = uffff * 16 + hex;
	                        }
	                        string += String.fromCharCode(uffff);
	                    } else if (typeof escapee[ch] === 'string') {
	                        string += escapee[ch];
	                    } else {
	                        break;
	                    }
	                } else {
	                    string += ch;
	                }
	            }
	        }
	        error("Bad string");
	    },

	    white = function () {

	// Skip whitespace.

	        while (ch && ch <= ' ') {
	            next();
	        }
	    },

	    word = function () {

	// true, false, or null.

	        switch (ch) {
	        case 't':
	            next('t');
	            next('r');
	            next('u');
	            next('e');
	            return true;
	        case 'f':
	            next('f');
	            next('a');
	            next('l');
	            next('s');
	            next('e');
	            return false;
	        case 'n':
	            next('n');
	            next('u');
	            next('l');
	            next('l');
	            return null;
	        }
	        error("Unexpected '" + ch + "'");
	    },

	    value,  // Place holder for the value function.

	    array = function () {

	// Parse an array value.

	        var array = [];

	        if (ch === '[') {
	            next('[');
	            white();
	            if (ch === ']') {
	                next(']');
	                return array;   // empty array
	            }
	            while (ch) {
	                array.push(value());
	                white();
	                if (ch === ']') {
	                    next(']');
	                    return array;
	                }
	                next(',');
	                white();
	            }
	        }
	        error("Bad array");
	    },

	    object = function () {

	// Parse an object value.

	        var key,
	            object = {};

	        if (ch === '{') {
	            next('{');
	            white();
	            if (ch === '}') {
	                next('}');
	                return object;   // empty object
	            }
	            while (ch) {
	                key = string();
	                white();
	                next(':');
	                if (Object.hasOwnProperty.call(object, key)) {
	                    error('Duplicate key "' + key + '"');
	                }
	                object[key] = value();
	                white();
	                if (ch === '}') {
	                    next('}');
	                    return object;
	                }
	                next(',');
	                white();
	            }
	        }
	        error("Bad object");
	    };

	value = function () {

	// Parse a JSON value. It could be an object, an array, a string, a number,
	// or a word.

	    white();
	    switch (ch) {
	    case '{':
	        return object();
	    case '[':
	        return array();
	    case '"':
	        return string();
	    case '-':
	        return number();
	    default:
	        return ch >= '0' && ch <= '9' ? number() : word();
	    }
	};

	// Return the json_parse function. It will have access to all of the above
	// functions and variables.

	module.exports = function (source, reviver) {
	    var result;
	    
	    text = source;
	    at = 0;
	    ch = ' ';
	    result = value();
	    white();
	    if (ch) {
	        error("Syntax error");
	    }

	    // If there is a reviver function, we recursively walk the new structure,
	    // passing each name/value pair to the reviver function for possible
	    // transformation, starting with a temporary root object that holds the result
	    // in an empty key. If there is not a reviver function, we simply return the
	    // result.

	    return typeof reviver === 'function' ? (function walk(holder, key) {
	        var k, v, value = holder[key];
	        if (value && typeof value === 'object') {
	            for (k in value) {
	                if (Object.prototype.hasOwnProperty.call(value, k)) {
	                    v = walk(value, k);
	                    if (v !== undefined) {
	                        value[k] = v;
	                    } else {
	                        delete value[k];
	                    }
	                }
	            }
	        }
	        return reviver.call(holder, key, value);
	    }({'': result}, '')) : result;
	};


/***/ },
/* 30 */
/***/ function(module, exports) {

	var cx = /[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,
	    escapable = /[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,
	    gap,
	    indent,
	    meta = {    // table of character substitutions
	        '\b': '\\b',
	        '\t': '\\t',
	        '\n': '\\n',
	        '\f': '\\f',
	        '\r': '\\r',
	        '"' : '\\"',
	        '\\': '\\\\'
	    },
	    rep;

	function quote(string) {
	    // If the string contains no control characters, no quote characters, and no
	    // backslash characters, then we can safely slap some quotes around it.
	    // Otherwise we must also replace the offending characters with safe escape
	    // sequences.
	    
	    escapable.lastIndex = 0;
	    return escapable.test(string) ? '"' + string.replace(escapable, function (a) {
	        var c = meta[a];
	        return typeof c === 'string' ? c :
	            '\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);
	    }) + '"' : '"' + string + '"';
	}

	function str(key, holder) {
	    // Produce a string from holder[key].
	    var i,          // The loop counter.
	        k,          // The member key.
	        v,          // The member value.
	        length,
	        mind = gap,
	        partial,
	        value = holder[key];
	    
	    // If the value has a toJSON method, call it to obtain a replacement value.
	    if (value && typeof value === 'object' &&
	            typeof value.toJSON === 'function') {
	        value = value.toJSON(key);
	    }
	    
	    // If we were called with a replacer function, then call the replacer to
	    // obtain a replacement value.
	    if (typeof rep === 'function') {
	        value = rep.call(holder, key, value);
	    }
	    
	    // What happens next depends on the value's type.
	    switch (typeof value) {
	        case 'string':
	            return quote(value);
	        
	        case 'number':
	            // JSON numbers must be finite. Encode non-finite numbers as null.
	            return isFinite(value) ? String(value) : 'null';
	        
	        case 'boolean':
	        case 'null':
	            // If the value is a boolean or null, convert it to a string. Note:
	            // typeof null does not produce 'null'. The case is included here in
	            // the remote chance that this gets fixed someday.
	            return String(value);
	            
	        case 'object':
	            if (!value) return 'null';
	            gap += indent;
	            partial = [];
	            
	            // Array.isArray
	            if (Object.prototype.toString.apply(value) === '[object Array]') {
	                length = value.length;
	                for (i = 0; i < length; i += 1) {
	                    partial[i] = str(i, value) || 'null';
	                }
	                
	                // Join all of the elements together, separated with commas, and
	                // wrap them in brackets.
	                v = partial.length === 0 ? '[]' : gap ?
	                    '[\n' + gap + partial.join(',\n' + gap) + '\n' + mind + ']' :
	                    '[' + partial.join(',') + ']';
	                gap = mind;
	                return v;
	            }
	            
	            // If the replacer is an array, use it to select the members to be
	            // stringified.
	            if (rep && typeof rep === 'object') {
	                length = rep.length;
	                for (i = 0; i < length; i += 1) {
	                    k = rep[i];
	                    if (typeof k === 'string') {
	                        v = str(k, value);
	                        if (v) {
	                            partial.push(quote(k) + (gap ? ': ' : ':') + v);
	                        }
	                    }
	                }
	            }
	            else {
	                // Otherwise, iterate through all of the keys in the object.
	                for (k in value) {
	                    if (Object.prototype.hasOwnProperty.call(value, k)) {
	                        v = str(k, value);
	                        if (v) {
	                            partial.push(quote(k) + (gap ? ': ' : ':') + v);
	                        }
	                    }
	                }
	            }
	            
	        // Join all of the member texts together, separated with commas,
	        // and wrap them in braces.

	        v = partial.length === 0 ? '{}' : gap ?
	            '{\n' + gap + partial.join(',\n' + gap) + '\n' + mind + '}' :
	            '{' + partial.join(',') + '}';
	        gap = mind;
	        return v;
	    }
	}

	module.exports = function (value, replacer, space) {
	    var i;
	    gap = '';
	    indent = '';
	    
	    // If the space parameter is a number, make an indent string containing that
	    // many spaces.
	    if (typeof space === 'number') {
	        for (i = 0; i < space; i += 1) {
	            indent += ' ';
	        }
	    }
	    // If the space parameter is a string, it will be used as the indent string.
	    else if (typeof space === 'string') {
	        indent = space;
	    }

	    // If there is a replacer, it must be a function or an array.
	    // Otherwise, throw an error.
	    rep = replacer;
	    if (replacer && typeof replacer !== 'function'
	    && (typeof replacer !== 'object' || typeof replacer.length !== 'number')) {
	        throw new Error('JSON.stringify');
	    }
	    
	    // Make a fake root object containing our value under the key of ''.
	    // Return the result of stringifying the value.
	    return str('', {'': value});
	};


/***/ },
/* 31 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var util = __webpack_require__(26);

	module.exports = SchemaObject;

	function SchemaObject(obj) {
	    util.copy(obj, this);
	}


/***/ },
/* 32 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var util = __webpack_require__(26);

	module.exports = {
	  expand: expandMacros,
	  hasMacro: hasMacro
	};


	function expandMacros() {
	  /* jshint validthis: true */
	  var macros = this.RULES.macros
	    , schema = this.schema
	    , expSchemas, i, key;
	  for (i=0; i<macros.length; i++) {
	    var rule = macros[i]
	      , keywordSchema = schema[rule.keyword];
	    if (keywordSchema !== undefined) {
	      var expanded = rule.macro(keywordSchema, schema);
	      delete schema[rule.keyword];
	      expandMacros.call({ RULES: this.RULES, schema: expanded });
	      if (expSchemas) expSchemas[expSchemas.length] = expanded;
	      else expSchemas = [expanded];
	    }
	  }

	  if (expSchemas) {
	    if (this.self.opts.validateSchema !== false)
	      this.self.validateSchema({ "allOf": expSchemas }, true);

	    var schemaCopy;
	    if (Object.keys(schema).length > 0)
	      schemaCopy = util.copy(schema);

	    var success = true;
	    out: // try to merge schemas without merging keywords
	    for (i=0; i<expSchemas.length; i++) {
	      var sch = expSchemas[i];
	      for (key in sch) {
	        if (schema[key] === undefined)
	          schema[key] = sch[key];
	        else {
	          success = false;
	          break out;
	        }
	      }
	    }

	    if (!success) {
	      for (key in schema) delete schema[key];
	      if (schemaCopy) expSchemas[expSchemas.length] = schemaCopy;
	      schema.allOf = expSchemas;
	    }
	  }
	}


	function hasMacro(schema, RULES) {
	  for (var key in schema) {
	    if (RULES.allMacros[key]) return true;
	    var sch = schema[key];
	    switch (key) {
	      case 'properties':
	      case 'patternProperties':
	      case 'dependencies':
	        for (var prop in sch)
	          if (typeof sch[prop] == 'object' && hasMacro(sch[prop], RULES))
	            return true;
	        break;
	      case 'additionalProperties':
	        if (typeof sch != 'object') break;
	        /* falls through */
	      case 'not':
	        if (hasMacro(sch, RULES)) return true;
	        break;
	      case 'items':
	        if (!Array.isArray(sch)) {
	          if (hasMacro(sch, RULES)) return true;
	          break;
	        }
	        /* falls through */
	      case 'anyOf':
	      case 'oneOf':
	      case 'allOf':
	        for (var i=0; i<sch.length; i++)
	          if (hasMacro(sch[i], RULES))
	            return true;
	    }
	  }
	}


/***/ },
/* 33 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
	The following batches are equivalent:

	var beautify_js = require('js-beautify');
	var beautify_js = require('js-beautify').js;
	var beautify_js = require('js-beautify').js_beautify;

	var beautify_css = require('js-beautify').css;
	var beautify_css = require('js-beautify').css_beautify;

	var beautify_html = require('js-beautify').html;
	var beautify_html = require('js-beautify').html_beautify;

	All methods returned accept two arguments, the source string and an options object.
	**/

	function get_beautify(js_beautify, css_beautify, html_beautify) {
	    // the default is js
	    var beautify = function (src, config) {
	        return js_beautify.js_beautify(src, config);
	    };

	    // short aliases
	    beautify.js   = js_beautify.js_beautify;
	    beautify.css  = css_beautify.css_beautify;
	    beautify.html = html_beautify.html_beautify;

	    // legacy aliases
	    beautify.js_beautify   = js_beautify.js_beautify;
	    beautify.css_beautify  = css_beautify.css_beautify;
	    beautify.html_beautify = html_beautify.html_beautify;

	    return beautify;
	}

	if (true) {
	    // Add support for AMD ( https://github.com/amdjs/amdjs-api/wiki/AMD#defineamd-property- )
	    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [
	        __webpack_require__(34),
	        __webpack_require__(35),
	        __webpack_require__(36)
	    ], __WEBPACK_AMD_DEFINE_RESULT__ = function(js_beautify, css_beautify, html_beautify) {
	        return get_beautify(js_beautify, css_beautify, html_beautify);
	    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	} else {
	    (function(mod) {
	        var js_beautify = require('./lib/beautify');
	        var css_beautify = require('./lib/beautify-css');
	        var html_beautify = require('./lib/beautify-html');

	        mod.exports = get_beautify(js_beautify, css_beautify, html_beautify);

	    })(module);
	}



/***/ },
/* 34 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*jshint curly:true, eqeqeq:true, laxbreak:true, noempty:false */
	/*

	  The MIT License (MIT)

	  Copyright (c) 2007-2013 Einar Lielmanis and contributors.

	  Permission is hereby granted, free of charge, to any person
	  obtaining a copy of this software and associated documentation files
	  (the "Software"), to deal in the Software without restriction,
	  including without limitation the rights to use, copy, modify, merge,
	  publish, distribute, sublicense, and/or sell copies of the Software,
	  and to permit persons to whom the Software is furnished to do so,
	  subject to the following conditions:

	  The above copyright notice and this permission notice shall be
	  included in all copies or substantial portions of the Software.

	  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
	  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
	  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
	  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
	  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
	  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
	  SOFTWARE.

	 JS Beautifier
	---------------


	  Written by Einar Lielmanis, <einar@jsbeautifier.org>
	      http://jsbeautifier.org/

	  Originally converted to javascript by Vital, <vital76@gmail.com>
	  "End braces on own line" added by Chris J. Shull, <chrisjshull@gmail.com>
	  Parsing improvements for brace-less statements by Liam Newman <bitwiseman@gmail.com>


	  Usage:
	    js_beautify(js_source_text);
	    js_beautify(js_source_text, options);

	  The options are:
	    indent_size (default 4)          - indentation size,
	    indent_char (default space)      - character to indent with,
	    preserve_newlines (default true) - whether existing line breaks should be preserved,
	    max_preserve_newlines (default unlimited) - maximum number of line breaks to be preserved in one chunk,

	    jslint_happy (default false) - if true, then jslint-stricter mode is enforced.

	            jslint_happy        !jslint_happy
	            ---------------------------------
	            function ()         function()

	            switch () {         switch() {
	            case 1:               case 1:
	              break;                break;
	            }                   }

	    space_after_anon_function (default false) - should the space before an anonymous function's parens be added, "function()" vs "function ()",
	          NOTE: This option is overriden by jslint_happy (i.e. if jslint_happy is true, space_after_anon_function is true by design)

	    brace_style (default "collapse") - "collapse" | "expand" | "end-expand" | "none"
	            put braces on the same line as control statements (default), or put braces on own line (Allman / ANSI style), or just put end braces on own line, or attempt to keep them where they are.

	    space_before_conditional (default true) - should the space before conditional statement be added, "if(true)" vs "if (true)",

	    unescape_strings (default false) - should printable characters in strings encoded in \xNN notation be unescaped, "example" vs "\x65\x78\x61\x6d\x70\x6c\x65"

	    wrap_line_length (default unlimited) - lines should wrap at next opportunity after this number of characters.
	          NOTE: This is not a hard limit. Lines will continue until a point where a newline would
	                be preserved if it were present.

	    end_with_newline (default false)  - end output with a newline


	    e.g

	    js_beautify(js_source_text, {
	      'indent_size': 1,
	      'indent_char': '\t'
	    });

	*/

	(function() {

	    var acorn = {};
	    (function (exports) {
	      // This section of code is taken from acorn.
	      //
	      // Acorn was written by Marijn Haverbeke and released under an MIT
	      // license. The Unicode regexps (for identifiers and whitespace) were
	      // taken from [Esprima](http://esprima.org) by Ariya Hidayat.
	      //
	      // Git repositories for Acorn are available at
	      //
	      //     http://marijnhaverbeke.nl/git/acorn
	      //     https://github.com/marijnh/acorn.git

	      // ## Character categories

	      // Big ugly regular expressions that match characters in the
	      // whitespace, identifier, and identifier-start categories. These
	      // are only applied when a character is found to actually have a
	      // code point above 128.

	      var nonASCIIwhitespace = /[\u1680\u180e\u2000-\u200a\u202f\u205f\u3000\ufeff]/;
	      var nonASCIIidentifierStartChars = "\xaa\xb5\xba\xc0-\xd6\xd8-\xf6\xf8-\u02c1\u02c6-\u02d1\u02e0-\u02e4\u02ec\u02ee\u0370-\u0374\u0376\u0377\u037a-\u037d\u0386\u0388-\u038a\u038c\u038e-\u03a1\u03a3-\u03f5\u03f7-\u0481\u048a-\u0527\u0531-\u0556\u0559\u0561-\u0587\u05d0-\u05ea\u05f0-\u05f2\u0620-\u064a\u066e\u066f\u0671-\u06d3\u06d5\u06e5\u06e6\u06ee\u06ef\u06fa-\u06fc\u06ff\u0710\u0712-\u072f\u074d-\u07a5\u07b1\u07ca-\u07ea\u07f4\u07f5\u07fa\u0800-\u0815\u081a\u0824\u0828\u0840-\u0858\u08a0\u08a2-\u08ac\u0904-\u0939\u093d\u0950\u0958-\u0961\u0971-\u0977\u0979-\u097f\u0985-\u098c\u098f\u0990\u0993-\u09a8\u09aa-\u09b0\u09b2\u09b6-\u09b9\u09bd\u09ce\u09dc\u09dd\u09df-\u09e1\u09f0\u09f1\u0a05-\u0a0a\u0a0f\u0a10\u0a13-\u0a28\u0a2a-\u0a30\u0a32\u0a33\u0a35\u0a36\u0a38\u0a39\u0a59-\u0a5c\u0a5e\u0a72-\u0a74\u0a85-\u0a8d\u0a8f-\u0a91\u0a93-\u0aa8\u0aaa-\u0ab0\u0ab2\u0ab3\u0ab5-\u0ab9\u0abd\u0ad0\u0ae0\u0ae1\u0b05-\u0b0c\u0b0f\u0b10\u0b13-\u0b28\u0b2a-\u0b30\u0b32\u0b33\u0b35-\u0b39\u0b3d\u0b5c\u0b5d\u0b5f-\u0b61\u0b71\u0b83\u0b85-\u0b8a\u0b8e-\u0b90\u0b92-\u0b95\u0b99\u0b9a\u0b9c\u0b9e\u0b9f\u0ba3\u0ba4\u0ba8-\u0baa\u0bae-\u0bb9\u0bd0\u0c05-\u0c0c\u0c0e-\u0c10\u0c12-\u0c28\u0c2a-\u0c33\u0c35-\u0c39\u0c3d\u0c58\u0c59\u0c60\u0c61\u0c85-\u0c8c\u0c8e-\u0c90\u0c92-\u0ca8\u0caa-\u0cb3\u0cb5-\u0cb9\u0cbd\u0cde\u0ce0\u0ce1\u0cf1\u0cf2\u0d05-\u0d0c\u0d0e-\u0d10\u0d12-\u0d3a\u0d3d\u0d4e\u0d60\u0d61\u0d7a-\u0d7f\u0d85-\u0d96\u0d9a-\u0db1\u0db3-\u0dbb\u0dbd\u0dc0-\u0dc6\u0e01-\u0e30\u0e32\u0e33\u0e40-\u0e46\u0e81\u0e82\u0e84\u0e87\u0e88\u0e8a\u0e8d\u0e94-\u0e97\u0e99-\u0e9f\u0ea1-\u0ea3\u0ea5\u0ea7\u0eaa\u0eab\u0ead-\u0eb0\u0eb2\u0eb3\u0ebd\u0ec0-\u0ec4\u0ec6\u0edc-\u0edf\u0f00\u0f40-\u0f47\u0f49-\u0f6c\u0f88-\u0f8c\u1000-\u102a\u103f\u1050-\u1055\u105a-\u105d\u1061\u1065\u1066\u106e-\u1070\u1075-\u1081\u108e\u10a0-\u10c5\u10c7\u10cd\u10d0-\u10fa\u10fc-\u1248\u124a-\u124d\u1250-\u1256\u1258\u125a-\u125d\u1260-\u1288\u128a-\u128d\u1290-\u12b0\u12b2-\u12b5\u12b8-\u12be\u12c0\u12c2-\u12c5\u12c8-\u12d6\u12d8-\u1310\u1312-\u1315\u1318-\u135a\u1380-\u138f\u13a0-\u13f4\u1401-\u166c\u166f-\u167f\u1681-\u169a\u16a0-\u16ea\u16ee-\u16f0\u1700-\u170c\u170e-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176c\u176e-\u1770\u1780-\u17b3\u17d7\u17dc\u1820-\u1877\u1880-\u18a8\u18aa\u18b0-\u18f5\u1900-\u191c\u1950-\u196d\u1970-\u1974\u1980-\u19ab\u19c1-\u19c7\u1a00-\u1a16\u1a20-\u1a54\u1aa7\u1b05-\u1b33\u1b45-\u1b4b\u1b83-\u1ba0\u1bae\u1baf\u1bba-\u1be5\u1c00-\u1c23\u1c4d-\u1c4f\u1c5a-\u1c7d\u1ce9-\u1cec\u1cee-\u1cf1\u1cf5\u1cf6\u1d00-\u1dbf\u1e00-\u1f15\u1f18-\u1f1d\u1f20-\u1f45\u1f48-\u1f4d\u1f50-\u1f57\u1f59\u1f5b\u1f5d\u1f5f-\u1f7d\u1f80-\u1fb4\u1fb6-\u1fbc\u1fbe\u1fc2-\u1fc4\u1fc6-\u1fcc\u1fd0-\u1fd3\u1fd6-\u1fdb\u1fe0-\u1fec\u1ff2-\u1ff4\u1ff6-\u1ffc\u2071\u207f\u2090-\u209c\u2102\u2107\u210a-\u2113\u2115\u2119-\u211d\u2124\u2126\u2128\u212a-\u212d\u212f-\u2139\u213c-\u213f\u2145-\u2149\u214e\u2160-\u2188\u2c00-\u2c2e\u2c30-\u2c5e\u2c60-\u2ce4\u2ceb-\u2cee\u2cf2\u2cf3\u2d00-\u2d25\u2d27\u2d2d\u2d30-\u2d67\u2d6f\u2d80-\u2d96\u2da0-\u2da6\u2da8-\u2dae\u2db0-\u2db6\u2db8-\u2dbe\u2dc0-\u2dc6\u2dc8-\u2dce\u2dd0-\u2dd6\u2dd8-\u2dde\u2e2f\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303c\u3041-\u3096\u309d-\u309f\u30a1-\u30fa\u30fc-\u30ff\u3105-\u312d\u3131-\u318e\u31a0-\u31ba\u31f0-\u31ff\u3400-\u4db5\u4e00-\u9fcc\ua000-\ua48c\ua4d0-\ua4fd\ua500-\ua60c\ua610-\ua61f\ua62a\ua62b\ua640-\ua66e\ua67f-\ua697\ua6a0-\ua6ef\ua717-\ua71f\ua722-\ua788\ua78b-\ua78e\ua790-\ua793\ua7a0-\ua7aa\ua7f8-\ua801\ua803-\ua805\ua807-\ua80a\ua80c-\ua822\ua840-\ua873\ua882-\ua8b3\ua8f2-\ua8f7\ua8fb\ua90a-\ua925\ua930-\ua946\ua960-\ua97c\ua984-\ua9b2\ua9cf\uaa00-\uaa28\uaa40-\uaa42\uaa44-\uaa4b\uaa60-\uaa76\uaa7a\uaa80-\uaaaf\uaab1\uaab5\uaab6\uaab9-\uaabd\uaac0\uaac2\uaadb-\uaadd\uaae0-\uaaea\uaaf2-\uaaf4\uab01-\uab06\uab09-\uab0e\uab11-\uab16\uab20-\uab26\uab28-\uab2e\uabc0-\uabe2\uac00-\ud7a3\ud7b0-\ud7c6\ud7cb-\ud7fb\uf900-\ufa6d\ufa70-\ufad9\ufb00-\ufb06\ufb13-\ufb17\ufb1d\ufb1f-\ufb28\ufb2a-\ufb36\ufb38-\ufb3c\ufb3e\ufb40\ufb41\ufb43\ufb44\ufb46-\ufbb1\ufbd3-\ufd3d\ufd50-\ufd8f\ufd92-\ufdc7\ufdf0-\ufdfb\ufe70-\ufe74\ufe76-\ufefc\uff21-\uff3a\uff41-\uff5a\uff66-\uffbe\uffc2-\uffc7\uffca-\uffcf\uffd2-\uffd7\uffda-\uffdc";
	      var nonASCIIidentifierChars = "\u0300-\u036f\u0483-\u0487\u0591-\u05bd\u05bf\u05c1\u05c2\u05c4\u05c5\u05c7\u0610-\u061a\u0620-\u0649\u0672-\u06d3\u06e7-\u06e8\u06fb-\u06fc\u0730-\u074a\u0800-\u0814\u081b-\u0823\u0825-\u0827\u0829-\u082d\u0840-\u0857\u08e4-\u08fe\u0900-\u0903\u093a-\u093c\u093e-\u094f\u0951-\u0957\u0962-\u0963\u0966-\u096f\u0981-\u0983\u09bc\u09be-\u09c4\u09c7\u09c8\u09d7\u09df-\u09e0\u0a01-\u0a03\u0a3c\u0a3e-\u0a42\u0a47\u0a48\u0a4b-\u0a4d\u0a51\u0a66-\u0a71\u0a75\u0a81-\u0a83\u0abc\u0abe-\u0ac5\u0ac7-\u0ac9\u0acb-\u0acd\u0ae2-\u0ae3\u0ae6-\u0aef\u0b01-\u0b03\u0b3c\u0b3e-\u0b44\u0b47\u0b48\u0b4b-\u0b4d\u0b56\u0b57\u0b5f-\u0b60\u0b66-\u0b6f\u0b82\u0bbe-\u0bc2\u0bc6-\u0bc8\u0bca-\u0bcd\u0bd7\u0be6-\u0bef\u0c01-\u0c03\u0c46-\u0c48\u0c4a-\u0c4d\u0c55\u0c56\u0c62-\u0c63\u0c66-\u0c6f\u0c82\u0c83\u0cbc\u0cbe-\u0cc4\u0cc6-\u0cc8\u0cca-\u0ccd\u0cd5\u0cd6\u0ce2-\u0ce3\u0ce6-\u0cef\u0d02\u0d03\u0d46-\u0d48\u0d57\u0d62-\u0d63\u0d66-\u0d6f\u0d82\u0d83\u0dca\u0dcf-\u0dd4\u0dd6\u0dd8-\u0ddf\u0df2\u0df3\u0e34-\u0e3a\u0e40-\u0e45\u0e50-\u0e59\u0eb4-\u0eb9\u0ec8-\u0ecd\u0ed0-\u0ed9\u0f18\u0f19\u0f20-\u0f29\u0f35\u0f37\u0f39\u0f41-\u0f47\u0f71-\u0f84\u0f86-\u0f87\u0f8d-\u0f97\u0f99-\u0fbc\u0fc6\u1000-\u1029\u1040-\u1049\u1067-\u106d\u1071-\u1074\u1082-\u108d\u108f-\u109d\u135d-\u135f\u170e-\u1710\u1720-\u1730\u1740-\u1750\u1772\u1773\u1780-\u17b2\u17dd\u17e0-\u17e9\u180b-\u180d\u1810-\u1819\u1920-\u192b\u1930-\u193b\u1951-\u196d\u19b0-\u19c0\u19c8-\u19c9\u19d0-\u19d9\u1a00-\u1a15\u1a20-\u1a53\u1a60-\u1a7c\u1a7f-\u1a89\u1a90-\u1a99\u1b46-\u1b4b\u1b50-\u1b59\u1b6b-\u1b73\u1bb0-\u1bb9\u1be6-\u1bf3\u1c00-\u1c22\u1c40-\u1c49\u1c5b-\u1c7d\u1cd0-\u1cd2\u1d00-\u1dbe\u1e01-\u1f15\u200c\u200d\u203f\u2040\u2054\u20d0-\u20dc\u20e1\u20e5-\u20f0\u2d81-\u2d96\u2de0-\u2dff\u3021-\u3028\u3099\u309a\ua640-\ua66d\ua674-\ua67d\ua69f\ua6f0-\ua6f1\ua7f8-\ua800\ua806\ua80b\ua823-\ua827\ua880-\ua881\ua8b4-\ua8c4\ua8d0-\ua8d9\ua8f3-\ua8f7\ua900-\ua909\ua926-\ua92d\ua930-\ua945\ua980-\ua983\ua9b3-\ua9c0\uaa00-\uaa27\uaa40-\uaa41\uaa4c-\uaa4d\uaa50-\uaa59\uaa7b\uaae0-\uaae9\uaaf2-\uaaf3\uabc0-\uabe1\uabec\uabed\uabf0-\uabf9\ufb20-\ufb28\ufe00-\ufe0f\ufe20-\ufe26\ufe33\ufe34\ufe4d-\ufe4f\uff10-\uff19\uff3f";
	      var nonASCIIidentifierStart = new RegExp("[" + nonASCIIidentifierStartChars + "]");
	      var nonASCIIidentifier = new RegExp("[" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + "]");

	      // Whether a single character denotes a newline.

	      var newline = exports.newline = /[\n\r\u2028\u2029]/;

	      // Matches a whole line break (where CRLF is considered a single
	      // line break). Used to count lines.

	      var lineBreak = exports.lineBreak = /\r\n|[\n\r\u2028\u2029]/g;

	      // Test whether a given character code starts an identifier.

	      var isIdentifierStart = exports.isIdentifierStart = function(code) {
	        if (code < 65) return code === 36;
	        if (code < 91) return true;
	        if (code < 97) return code === 95;
	        if (code < 123)return true;
	        return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));
	      };

	      // Test whether a given character is part of an identifier.

	      var isIdentifierChar = exports.isIdentifierChar = function(code) {
	        if (code < 48) return code === 36;
	        if (code < 58) return true;
	        if (code < 65) return false;
	        if (code < 91) return true;
	        if (code < 97) return code === 95;
	        if (code < 123)return true;
	        return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));
	      };
	    })(acorn);

	    function in_array(what, arr) {
	        for (var i = 0; i < arr.length; i += 1) {
	            if (arr[i] === what) {
	                return true;
	            }
	        }
	        return false;
	    }

	    function trim(s) {
	        return s.replace(/^\s+|\s+$/g, '');
	    }

	    function ltrim(s) {
	        return s.replace(/^\s+/g, '');
	    }

	    function rtrim(s) {
	        return s.replace(/\s+$/g, '');
	    }

	    function js_beautify(js_source_text, options) {
	        "use strict";
	        var beautifier = new Beautifier(js_source_text, options);
	        return beautifier.beautify();
	    }

	    var MODE = {
	            BlockStatement: 'BlockStatement', // 'BLOCK'
	            Statement: 'Statement', // 'STATEMENT'
	            ObjectLiteral: 'ObjectLiteral', // 'OBJECT',
	            ArrayLiteral: 'ArrayLiteral', //'[EXPRESSION]',
	            ForInitializer: 'ForInitializer', //'(FOR-EXPRESSION)',
	            Conditional: 'Conditional', //'(COND-EXPRESSION)',
	            Expression: 'Expression' //'(EXPRESSION)'
	        };

	    function Beautifier(js_source_text, options) {
	        "use strict";
	        var output
	        var tokens = [], token_pos;
	        var Tokenizer;
	        var current_token;
	        var last_type, last_last_text, indent_string;
	        var flags, previous_flags, flag_store;
	        var prefix;

	        var handlers, opt;
	        var baseIndentString = '';

	        handlers = {
	            'TK_START_EXPR': handle_start_expr,
	            'TK_END_EXPR': handle_end_expr,
	            'TK_START_BLOCK': handle_start_block,
	            'TK_END_BLOCK': handle_end_block,
	            'TK_WORD': handle_word,
	            'TK_RESERVED': handle_word,
	            'TK_SEMICOLON': handle_semicolon,
	            'TK_STRING': handle_string,
	            'TK_EQUALS': handle_equals,
	            'TK_OPERATOR': handle_operator,
	            'TK_COMMA': handle_comma,
	            'TK_BLOCK_COMMENT': handle_block_comment,
	            'TK_COMMENT': handle_comment,
	            'TK_DOT': handle_dot,
	            'TK_UNKNOWN': handle_unknown,
	            'TK_EOF': handle_eof
	        };

	        function create_flags(flags_base, mode) {
	            var next_indent_level = 0;
	            if (flags_base) {
	                next_indent_level = flags_base.indentation_level;
	                if (!output.just_added_newline() &&
	                    flags_base.line_indent_level > next_indent_level) {
	                    next_indent_level = flags_base.line_indent_level;
	                }
	            }

	            var next_flags = {
	                mode: mode,
	                parent: flags_base,
	                last_text: flags_base ? flags_base.last_text : '', // last token text
	                last_word: flags_base ? flags_base.last_word : '', // last 'TK_WORD' passed
	                declaration_statement: false,
	                declaration_assignment: false,
	                multiline_frame: false,
	                if_block: false,
	                else_block: false,
	                do_block: false,
	                do_while: false,
	                in_case_statement: false, // switch(..){ INSIDE HERE }
	                in_case: false, // we're on the exact line with "case 0:"
	                case_body: false, // the indented case-action block
	                indentation_level: next_indent_level,
	                line_indent_level: flags_base ? flags_base.line_indent_level : next_indent_level,
	                start_line_index: output.get_line_number(),
	                ternary_depth: 0
	            };
	            return next_flags;
	        }

	        // Some interpreters have unexpected results with foo = baz || bar;
	        options = options ? options : {};
	        opt = {};

	        // compatibility
	        if (options.braces_on_own_line !== undefined) { //graceful handling of deprecated option
	            opt.brace_style = options.braces_on_own_line ? "expand" : "collapse";
	        }
	        opt.brace_style = options.brace_style ? options.brace_style : (opt.brace_style ? opt.brace_style : "collapse");

	        // graceful handling of deprecated option
	        if (opt.brace_style === "expand-strict") {
	            opt.brace_style = "expand";
	        }


	        opt.indent_size = options.indent_size ? parseInt(options.indent_size, 10) : 4;
	        opt.indent_char = options.indent_char ? options.indent_char : ' ';
	        opt.eol = options.eol ? options.eol : '\n';
	        opt.preserve_newlines = (options.preserve_newlines === undefined) ? true : options.preserve_newlines;
	        opt.break_chained_methods = (options.break_chained_methods === undefined) ? false : options.break_chained_methods;
	        opt.max_preserve_newlines = (options.max_preserve_newlines === undefined) ? 0 : parseInt(options.max_preserve_newlines, 10);
	        opt.space_in_paren = (options.space_in_paren === undefined) ? false : options.space_in_paren;
	        opt.space_in_empty_paren = (options.space_in_empty_paren === undefined) ? false : options.space_in_empty_paren;
	        opt.jslint_happy = (options.jslint_happy === undefined) ? false : options.jslint_happy;
	        opt.space_after_anon_function = (options.space_after_anon_function === undefined) ? false : options.space_after_anon_function;
	        opt.keep_array_indentation = (options.keep_array_indentation === undefined) ? false : options.keep_array_indentation;
	        opt.space_before_conditional = (options.space_before_conditional === undefined) ? true : options.space_before_conditional;
	        opt.unescape_strings = (options.unescape_strings === undefined) ? false : options.unescape_strings;
	        opt.wrap_line_length = (options.wrap_line_length === undefined) ? 0 : parseInt(options.wrap_line_length, 10);
	        opt.e4x = (options.e4x === undefined) ? false : options.e4x;
	        opt.end_with_newline = (options.end_with_newline === undefined) ? false : options.end_with_newline;
	        opt.comma_first = (options.comma_first === undefined) ? false : options.comma_first;

	        // For testing of beautify ignore:start directive
	        opt.test_output_raw = (options.test_output_raw === undefined) ? false : options.test_output_raw;

	        // force opt.space_after_anon_function to true if opt.jslint_happy
	        if(opt.jslint_happy) {
	            opt.space_after_anon_function = true;
	        }

	        if(options.indent_with_tabs){
	            opt.indent_char = '\t';
	            opt.indent_size = 1;
	        }

	        opt.eol = opt.eol.replace(/\\r/, '\r').replace(/\\n/, '\n')

	        //----------------------------------
	        indent_string = '';
	        while (opt.indent_size > 0) {
	            indent_string += opt.indent_char;
	            opt.indent_size -= 1;
	        }

	        var preindent_index = 0;
	        if(js_source_text && js_source_text.length) {
	            while ( (js_source_text.charAt(preindent_index) === ' ' ||
	                    js_source_text.charAt(preindent_index) === '\t')) {
	                baseIndentString += js_source_text.charAt(preindent_index);
	                preindent_index += 1;
	            }
	            js_source_text = js_source_text.substring(preindent_index);
	        }

	        last_type = 'TK_START_BLOCK'; // last token type
	        last_last_text = ''; // pre-last token text
	        output = new Output(indent_string, baseIndentString);

	        // If testing the ignore directive, start with output disable set to true
	        output.raw = opt.test_output_raw;


	        // Stack of parsing/formatting states, including MODE.
	        // We tokenize, parse, and output in an almost purely a forward-only stream of token input
	        // and formatted output.  This makes the beautifier less accurate than full parsers
	        // but also far more tolerant of syntax errors.
	        //
	        // For example, the default mode is MODE.BlockStatement. If we see a '{' we push a new frame of type
	        // MODE.BlockStatement on the the stack, even though it could be object literal.  If we later
	        // encounter a ":", we'll switch to to MODE.ObjectLiteral.  If we then see a ";",
	        // most full parsers would die, but the beautifier gracefully falls back to
	        // MODE.BlockStatement and continues on.
	        flag_store = [];
	        set_mode(MODE.BlockStatement);

	        this.beautify = function() {

	            /*jshint onevar:true */
	            var local_token, sweet_code;
	            Tokenizer = new tokenizer(js_source_text, opt, indent_string);
	            tokens = Tokenizer.tokenize();
	            token_pos = 0;

	            while (local_token = get_token()) {
	                for(var i = 0; i < local_token.comments_before.length; i++) {
	                    // The cleanest handling of inline comments is to treat them as though they aren't there.
	                    // Just continue formatting and the behavior should be logical.
	                    // Also ignore unknown tokens.  Again, this should result in better behavior.
	                    handle_token(local_token.comments_before[i]);
	                }
	                handle_token(local_token);

	                last_last_text = flags.last_text;
	                last_type = local_token.type;
	                flags.last_text = local_token.text;

	                token_pos += 1;
	            }

	            sweet_code = output.get_code();
	            if (opt.end_with_newline) {
	                sweet_code += '\n';
	            }

	            if (opt.eol != '\n') {
	                sweet_code = sweet_code.replace(/[\n]/g, opt.eol);
	            }

	            return sweet_code;
	        };

	        function handle_token(local_token) {
	            var newlines = local_token.newlines;
	            var keep_whitespace = opt.keep_array_indentation && is_array(flags.mode);

	            if (keep_whitespace) {
	                for (i = 0; i < newlines; i += 1) {
	                    print_newline(i > 0);
	                }
	            } else {
	                if (opt.max_preserve_newlines && newlines > opt.max_preserve_newlines) {
	                    newlines = opt.max_preserve_newlines;
	                }

	                if (opt.preserve_newlines) {
	                    if (local_token.newlines > 1) {
	                        print_newline();
	                        for (var i = 1; i < newlines; i += 1) {
	                            print_newline(true);
	                        }
	                    }
	                }
	            }

	            current_token = local_token;
	            handlers[current_token.type]();
	        }

	        // we could use just string.split, but
	        // IE doesn't like returning empty strings
	        function split_newlines(s) {
	            //return s.split(/\x0d\x0a|\x0a/);

	            s = s.replace(/\x0d/g, '');
	            var out = [],
	                idx = s.indexOf("\n");
	            while (idx !== -1) {
	                out.push(s.substring(0, idx));
	                s = s.substring(idx + 1);
	                idx = s.indexOf("\n");
	            }
	            if (s.length) {
	                out.push(s);
	            }
	            return out;
	        }

	        function allow_wrap_or_preserved_newline(force_linewrap) {
	            force_linewrap = (force_linewrap === undefined) ? false : force_linewrap;

	            // Never wrap the first token on a line
	            if (output.just_added_newline()) {
	                return
	            }

	            if ((opt.preserve_newlines && current_token.wanted_newline) || force_linewrap) {
	                print_newline(false, true);
	            } else if (opt.wrap_line_length) {
	                var proposed_line_length = output.current_line.get_character_count() + current_token.text.length +
	                    (output.space_before_token ? 1 : 0);
	                if (proposed_line_length >= opt.wrap_line_length) {
	                    print_newline(false, true);
	                }
	            }
	        }

	        function print_newline(force_newline, preserve_statement_flags) {
	            if (!preserve_statement_flags) {
	                if (flags.last_text !== ';' && flags.last_text !== ',' && flags.last_text !== '=' && last_type !== 'TK_OPERATOR') {
	                    while (flags.mode === MODE.Statement && !flags.if_block && !flags.do_block) {
	                        restore_mode();
	                    }
	                }
	            }

	            if (output.add_new_line(force_newline)) {
	                flags.multiline_frame = true;
	            }
	        }

	        function print_token_line_indentation() {
	            if (output.just_added_newline()) {
	                if (opt.keep_array_indentation && is_array(flags.mode) && current_token.wanted_newline) {
	                    output.current_line.push(current_token.whitespace_before);
	                    output.space_before_token = false;
	                } else if (output.set_indent(flags.indentation_level)) {
	                    flags.line_indent_level = flags.indentation_level;
	                }
	            }
	        }

	        function print_token(printable_token) {
	            if (output.raw) {
	                output.add_raw_token(current_token)
	                return;
	            }

	            if (opt.comma_first && last_type === 'TK_COMMA'
	                && output.just_added_newline()) {
	                if(output.previous_line.last() === ',') {
	                    output.previous_line.pop();
	                    print_token_line_indentation();
	                    output.add_token(',');
	                    output.space_before_token = true;
	                }
	            }

	            printable_token = printable_token || current_token.text;
	            print_token_line_indentation();
	            output.add_token(printable_token);
	        }

	        function indent() {
	            flags.indentation_level += 1;
	        }

	        function deindent() {
	            if (flags.indentation_level > 0 &&
	                ((!flags.parent) || flags.indentation_level > flags.parent.indentation_level))
	                flags.indentation_level -= 1;
	        }

	        function set_mode(mode) {
	            if (flags) {
	                flag_store.push(flags);
	                previous_flags = flags;
	            } else {
	                previous_flags = create_flags(null, mode);
	            }

	            flags = create_flags(previous_flags, mode);
	        }

	        function is_array(mode) {
	            return mode === MODE.ArrayLiteral;
	        }

	        function is_expression(mode) {
	            return in_array(mode, [MODE.Expression, MODE.ForInitializer, MODE.Conditional]);
	        }

	        function restore_mode() {
	            if (flag_store.length > 0) {
	                previous_flags = flags;
	                flags = flag_store.pop();
	                if (previous_flags.mode === MODE.Statement) {
	                    output.remove_redundant_indentation(previous_flags);
	                }
	            }
	        }

	        function start_of_object_property() {
	            return flags.parent.mode === MODE.ObjectLiteral && flags.mode === MODE.Statement && (
	                (flags.last_text === ':' && flags.ternary_depth === 0) || (last_type === 'TK_RESERVED' && in_array(flags.last_text, ['get', 'set'])));
	        }

	        function start_of_statement() {
	            if (
	                    (last_type === 'TK_RESERVED' && in_array(flags.last_text, ['var', 'let', 'const']) && current_token.type === 'TK_WORD') ||
	                    (last_type === 'TK_RESERVED' && flags.last_text === 'do') ||
	                    (last_type === 'TK_RESERVED' && flags.last_text === 'return' && !current_token.wanted_newline) ||
	                    (last_type === 'TK_RESERVED' && flags.last_text === 'else' && !(current_token.type === 'TK_RESERVED' && current_token.text === 'if')) ||
	                    (last_type === 'TK_END_EXPR' && (previous_flags.mode === MODE.ForInitializer || previous_flags.mode === MODE.Conditional)) ||
	                    (last_type === 'TK_WORD' && flags.mode === MODE.BlockStatement
	                        && !flags.in_case
	                        && !(current_token.text === '--' || current_token.text === '++')
	                        && last_last_text !== 'function'
	                        && current_token.type !== 'TK_WORD' && current_token.type !== 'TK_RESERVED') ||
	                    (flags.mode === MODE.ObjectLiteral && (
	                        (flags.last_text === ':' && flags.ternary_depth === 0) || (last_type === 'TK_RESERVED' && in_array(flags.last_text, ['get', 'set']))))
	                ) {

	                set_mode(MODE.Statement);
	                indent();

	                if (last_type === 'TK_RESERVED' && in_array(flags.last_text, ['var', 'let', 'const']) && current_token.type === 'TK_WORD') {
	                    flags.declaration_statement = true;
	                }

	                // Issue #276:
	                // If starting a new statement with [if, for, while, do], push to a new line.
	                // if (a) if (b) if(c) d(); else e(); else f();
	                if (!start_of_object_property()) {
	                    allow_wrap_or_preserved_newline(
	                        current_token.type === 'TK_RESERVED' && in_array(current_token.text, ['do', 'for', 'if', 'while']));
	                }

	                return true;
	            }
	            return false;
	        }

	        function all_lines_start_with(lines, c) {
	            for (var i = 0; i < lines.length; i++) {
	                var line = trim(lines[i]);
	                if (line.charAt(0) !== c) {
	                    return false;
	                }
	            }
	            return true;
	        }

	        function each_line_matches_indent(lines, indent) {
	            var i = 0,
	                len = lines.length,
	                line;
	            for (; i < len; i++) {
	                line = lines[i];
	                // allow empty lines to pass through
	                if (line && line.indexOf(indent) !== 0) {
	                    return false;
	                }
	            }
	            return true;
	        }

	        function is_special_word(word) {
	            return in_array(word, ['case', 'return', 'do', 'if', 'throw', 'else']);
	        }

	        function get_token(offset) {
	            var index = token_pos + (offset || 0);
	            return (index < 0 || index >= tokens.length) ? null : tokens[index];
	        }

	        function handle_start_expr() {
	            if (start_of_statement()) {
	                // The conditional starts the statement if appropriate.
	            }

	            var next_mode = MODE.Expression;
	            if (current_token.text === '[') {

	                if (last_type === 'TK_WORD' || flags.last_text === ')') {
	                    // this is array index specifier, break immediately
	                    // a[x], fn()[x]
	                    if (last_type === 'TK_RESERVED' && in_array(flags.last_text, Tokenizer.line_starters)) {
	                        output.space_before_token = true;
	                    }
	                    set_mode(next_mode);
	                    print_token();
	                    indent();
	                    if (opt.space_in_paren) {
	                        output.space_before_token = true;
	                    }
	                    return;
	                }

	                next_mode = MODE.ArrayLiteral;
	                if (is_array(flags.mode)) {
	                    if (flags.last_text === '[' ||
	                        (flags.last_text === ',' && (last_last_text === ']' || last_last_text === '}'))) {
	                        // ], [ goes to new line
	                        // }, [ goes to new line
	                        if (!opt.keep_array_indentation) {
	                            print_newline();
	                        }
	                    }
	                }

	            } else {
	                if (last_type === 'TK_RESERVED' && flags.last_text === 'for') {
	                    next_mode = MODE.ForInitializer;
	                } else if (last_type === 'TK_RESERVED' && in_array(flags.last_text, ['if', 'while'])) {
	                    next_mode = MODE.Conditional;
	                } else {
	                    // next_mode = MODE.Expression;
	                }
	            }

	            if (flags.last_text === ';' || last_type === 'TK_START_BLOCK') {
	                print_newline();
	            } else if (last_type === 'TK_END_EXPR' || last_type === 'TK_START_EXPR' || last_type === 'TK_END_BLOCK' || flags.last_text === '.') {
	                // TODO: Consider whether forcing this is required.  Review failing tests when removed.
	                allow_wrap_or_preserved_newline(current_token.wanted_newline);
	                // do nothing on (( and )( and ][ and ]( and .(
	            } else if (!(last_type === 'TK_RESERVED' && current_token.text === '(') && last_type !== 'TK_WORD' && last_type !== 'TK_OPERATOR') {
	                output.space_before_token = true;
	            } else if ((last_type === 'TK_RESERVED' && (flags.last_word === 'function' || flags.last_word === 'typeof')) ||
	                (flags.last_text === '*' && last_last_text === 'function')) {
	                // function() vs function ()
	                if (opt.space_after_anon_function) {
	                    output.space_before_token = true;
	                }
	            } else if (last_type === 'TK_RESERVED' && (in_array(flags.last_text, Tokenizer.line_starters) || flags.last_text === 'catch')) {
	                if (opt.space_before_conditional) {
	                    output.space_before_token = true;
	                }
	            }

	            // Should be a space between await and an IIFE
	            if(current_token.text === '(' && last_type === 'TK_RESERVED' && flags.last_word === 'await'){
	                output.space_before_token = true;
	            }

	            // Support of this kind of newline preservation.
	            // a = (b &&
	            //     (c || d));
	            if (current_token.text === '(') {
	                if (last_type === 'TK_EQUALS' || last_type === 'TK_OPERATOR') {
	                    if (!start_of_object_property()) {
	                        allow_wrap_or_preserved_newline();
	                    }
	                }
	            }

	            set_mode(next_mode);
	            print_token();
	            if (opt.space_in_paren) {
	                output.space_before_token = true;
	            }

	            // In all cases, if we newline while inside an expression it should be indented.
	            indent();
	        }

	        function handle_end_expr() {
	            // statements inside expressions are not valid syntax, but...
	            // statements must all be closed when their container closes
	            while (flags.mode === MODE.Statement) {
	                restore_mode();
	            }

	            if (flags.multiline_frame) {
	                allow_wrap_or_preserved_newline(current_token.text === ']' && is_array(flags.mode) && !opt.keep_array_indentation);
	            }

	            if (opt.space_in_paren) {
	                if (last_type === 'TK_START_EXPR' && ! opt.space_in_empty_paren) {
	                    // () [] no inner space in empty parens like these, ever, ref #320
	                    output.trim();
	                    output.space_before_token = false;
	                } else {
	                    output.space_before_token = true;
	                }
	            }
	            if (current_token.text === ']' && opt.keep_array_indentation) {
	                print_token();
	                restore_mode();
	            } else {
	                restore_mode();
	                print_token();
	            }
	            output.remove_redundant_indentation(previous_flags);

	            // do {} while () // no statement required after
	            if (flags.do_while && previous_flags.mode === MODE.Conditional) {
	                previous_flags.mode = MODE.Expression;
	                flags.do_block = false;
	                flags.do_while = false;

	            }
	        }

	        function handle_start_block() {
	            // Check if this is should be treated as a ObjectLiteral
	            var next_token = get_token(1)
	            var second_token = get_token(2)
	            if (second_token && (
	                    (second_token.text === ':' && in_array(next_token.type, ['TK_STRING', 'TK_WORD', 'TK_RESERVED']))
	                    || (in_array(next_token.text, ['get', 'set']) && in_array(second_token.type, ['TK_WORD', 'TK_RESERVED']))
	                )) {
	                // We don't support TypeScript,but we didn't break it for a very long time.
	                // We'll try to keep not breaking it.
	                if (!in_array(last_last_text, ['class','interface'])) {
	                    set_mode(MODE.ObjectLiteral);
	                } else {
	                    set_mode(MODE.BlockStatement);
	                }
	            } else {
	                set_mode(MODE.BlockStatement);
	            }

	            var empty_braces = !next_token.comments_before.length &&  next_token.text === '}';
	            var empty_anonymous_function = empty_braces && flags.last_word === 'function' &&
	                last_type === 'TK_END_EXPR';

	            if (opt.brace_style === "expand" ||
	                (opt.brace_style === "none" && current_token.wanted_newline)) {
	                if (last_type !== 'TK_OPERATOR' &&
	                    (empty_anonymous_function ||
	                        last_type === 'TK_EQUALS' ||
	                        (last_type === 'TK_RESERVED' && is_special_word(flags.last_text) && flags.last_text !== 'else'))) {
	                    output.space_before_token = true;
	                } else {
	                    print_newline(false, true);
	                }
	            } else { // collapse
	                if (last_type !== 'TK_OPERATOR' && last_type !== 'TK_START_EXPR') {
	                    if (last_type === 'TK_START_BLOCK') {
	                        print_newline();
	                    } else {
	                        output.space_before_token = true;
	                    }
	                } else {
	                    // if TK_OPERATOR or TK_START_EXPR
	                    if (is_array(previous_flags.mode) && flags.last_text === ',') {
	                        if (last_last_text === '}') {
	                            // }, { in array context
	                            output.space_before_token = true;
	                        } else {
	                            print_newline(); // [a, b, c, {
	                        }
	                    }
	                }
	            }
	            print_token();
	            indent();
	        }

	        function handle_end_block() {
	            // statements must all be closed when their container closes
	            while (flags.mode === MODE.Statement) {
	                restore_mode();
	            }
	            var empty_braces = last_type === 'TK_START_BLOCK';

	            if (opt.brace_style === "expand") {
	                if (!empty_braces) {
	                    print_newline();
	                }
	            } else {
	                // skip {}
	                if (!empty_braces) {
	                    if (is_array(flags.mode) && opt.keep_array_indentation) {
	                        // we REALLY need a newline here, but newliner would skip that
	                        opt.keep_array_indentation = false;
	                        print_newline();
	                        opt.keep_array_indentation = true;

	                    } else {
	                        print_newline();
	                    }
	                }
	            }
	            restore_mode();
	            print_token();
	        }

	        function handle_word() {
	            if (current_token.type === 'TK_RESERVED' && flags.mode !== MODE.ObjectLiteral &&
	                in_array(current_token.text, ['set', 'get'])) {
	                current_token.type = 'TK_WORD';
	            }

	            if (current_token.type === 'TK_RESERVED' && flags.mode === MODE.ObjectLiteral) {
	                var next_token = get_token(1);
	                if (next_token.text == ':') {
	                    current_token.type = 'TK_WORD';
	                }
	            }

	            if (start_of_statement()) {
	                // The conditional starts the statement if appropriate.
	            } else if (current_token.wanted_newline && !is_expression(flags.mode) &&
	                (last_type !== 'TK_OPERATOR' || (flags.last_text === '--' || flags.last_text === '++')) &&
	                last_type !== 'TK_EQUALS' &&
	                (opt.preserve_newlines || !(last_type === 'TK_RESERVED' && in_array(flags.last_text, ['var', 'let', 'const', 'set', 'get'])))) {

	                print_newline();
	            }

	            if (flags.do_block && !flags.do_while) {
	                if (current_token.type === 'TK_RESERVED' && current_token.text === 'while') {
	                    // do {} ## while ()
	                    output.space_before_token = true;
	                    print_token();
	                    output.space_before_token = true;
	                    flags.do_while = true;
	                    return;
	                } else {
	                    // do {} should always have while as the next word.
	                    // if we don't see the expected while, recover
	                    print_newline();
	                    flags.do_block = false;
	                }
	            }

	            // if may be followed by else, or not
	            // Bare/inline ifs are tricky
	            // Need to unwind the modes correctly: if (a) if (b) c(); else d(); else e();
	            if (flags.if_block) {
	                if (!flags.else_block && (current_token.type === 'TK_RESERVED' && current_token.text === 'else')) {
	                    flags.else_block = true;
	                } else {
	                    while (flags.mode === MODE.Statement) {
	                        restore_mode();
	                    }
	                    flags.if_block = false;
	                    flags.else_block = false;
	                }
	            }

	            if (current_token.type === 'TK_RESERVED' && (current_token.text === 'case' || (current_token.text === 'default' && flags.in_case_statement))) {
	                print_newline();
	                if (flags.case_body || opt.jslint_happy) {
	                    // switch cases following one another
	                    deindent();
	                    flags.case_body = false;
	                }
	                print_token();
	                flags.in_case = true;
	                flags.in_case_statement = true;
	                return;
	            }

	            if (current_token.type === 'TK_RESERVED' && current_token.text === 'function') {
	                if (in_array(flags.last_text, ['}', ';']) || (output.just_added_newline() && ! in_array(flags.last_text, ['[', '{', ':', '=', ',']))) {
	                    // make sure there is a nice clean space of at least one blank line
	                    // before a new function definition
	                    if ( !output.just_added_blankline() && !current_token.comments_before.length) {
	                        print_newline();
	                        print_newline(true);
	                    }
	                }
	                if (last_type === 'TK_RESERVED' || last_type === 'TK_WORD') {
	                    if (last_type === 'TK_RESERVED' && in_array(flags.last_text, ['get', 'set', 'new', 'return', 'export', 'async'])) {
	                        output.space_before_token = true;
	                    } else if (last_type === 'TK_RESERVED' && flags.last_text === 'default' && last_last_text === 'export') {
	                        output.space_before_token = true;
	                    } else {
	                        print_newline();
	                    }
	                } else if (last_type === 'TK_OPERATOR' || flags.last_text === '=') {
	                    // foo = function
	                    output.space_before_token = true;
	                } else if (!flags.multiline_frame && (is_expression(flags.mode) || is_array(flags.mode))) {
	                    // (function
	                } else {
	                    print_newline();
	                }
	            }

	            if (last_type === 'TK_COMMA' || last_type === 'TK_START_EXPR' || last_type === 'TK_EQUALS' || last_type === 'TK_OPERATOR') {
	                if (!start_of_object_property()) {
	                    allow_wrap_or_preserved_newline();
	                }
	            }

	            if (current_token.type === 'TK_RESERVED' &&  in_array(current_token.text, ['function', 'get', 'set'])) {
	                print_token();
	                flags.last_word = current_token.text;
	                return;
	            }

	            prefix = 'NONE';

	            if (last_type === 'TK_END_BLOCK') {
	                if (!(current_token.type === 'TK_RESERVED' && in_array(current_token.text, ['else', 'catch', 'finally']))) {
	                    prefix = 'NEWLINE';
	                } else {
	                    if (opt.brace_style === "expand" ||
	                        opt.brace_style === "end-expand" ||
	                        (opt.brace_style === "none" && current_token.wanted_newline)) {
	                        prefix = 'NEWLINE';
	                    } else {
	                        prefix = 'SPACE';
	                        output.space_before_token = true;
	                    }
	                }
	            } else if (last_type === 'TK_SEMICOLON' && flags.mode === MODE.BlockStatement) {
	                // TODO: Should this be for STATEMENT as well?
	                prefix = 'NEWLINE';
	            } else if (last_type === 'TK_SEMICOLON' && is_expression(flags.mode)) {
	                prefix = 'SPACE';
	            } else if (last_type === 'TK_STRING') {
	                prefix = 'NEWLINE';
	            } else if (last_type === 'TK_RESERVED' || last_type === 'TK_WORD' ||
	                (flags.last_text === '*' && last_last_text === 'function')) {
	                prefix = 'SPACE';
	            } else if (last_type === 'TK_START_BLOCK') {
	                prefix = 'NEWLINE';
	            } else if (last_type === 'TK_END_EXPR') {
	                output.space_before_token = true;
	                prefix = 'NEWLINE';
	            }

	            if (current_token.type === 'TK_RESERVED' && in_array(current_token.text, Tokenizer.line_starters) && flags.last_text !== ')') {
	                if (flags.last_text === 'else' || flags.last_text === 'export') {
	                    prefix = 'SPACE';
	                } else {
	                    prefix = 'NEWLINE';
	                }

	            }

	            if (current_token.type === 'TK_RESERVED' && in_array(current_token.text, ['else', 'catch', 'finally'])) {
	                if (last_type !== 'TK_END_BLOCK' ||
	                    opt.brace_style === "expand" ||
	                    opt.brace_style === "end-expand" ||
	                    (opt.brace_style === "none" && current_token.wanted_newline)) {
	                    print_newline();
	                } else {
	                    output.trim(true);
	                    var line = output.current_line;
	                    // If we trimmed and there's something other than a close block before us
	                    // put a newline back in.  Handles '} // comment' scenario.
	                    if (line.last() !== '}') {
	                        print_newline();
	                    }
	                    output.space_before_token = true;
	                }
	            } else if (prefix === 'NEWLINE') {
	                if (last_type === 'TK_RESERVED' && is_special_word(flags.last_text)) {
	                    // no newline between 'return nnn'
	                    output.space_before_token = true;
	                } else if (last_type !== 'TK_END_EXPR') {
	                    if ((last_type !== 'TK_START_EXPR' || !(current_token.type === 'TK_RESERVED' && in_array(current_token.text, ['var', 'let', 'const']))) && flags.last_text !== ':') {
	                        // no need to force newline on 'var': for (var x = 0...)
	                        if (current_token.type === 'TK_RESERVED' && current_token.text === 'if' && flags.last_text === 'else') {
	                            // no newline for } else if {
	                            output.space_before_token = true;
	                        } else {
	                            print_newline();
	                        }
	                    }
	                } else if (current_token.type === 'TK_RESERVED' && in_array(current_token.text, Tokenizer.line_starters) && flags.last_text !== ')') {
	                    print_newline();
	                }
	            } else if (flags.multiline_frame && is_array(flags.mode) && flags.last_text === ',' && last_last_text === '}') {
	                print_newline(); // }, in lists get a newline treatment
	            } else if (prefix === 'SPACE') {
	                output.space_before_token = true;
	            }
	            print_token();
	            flags.last_word = current_token.text;

	            if (current_token.type === 'TK_RESERVED' && current_token.text === 'do') {
	                flags.do_block = true;
	            }

	            if (current_token.type === 'TK_RESERVED' && current_token.text === 'if') {
	                flags.if_block = true;
	            }
	        }

	        function handle_semicolon() {
	            if (start_of_statement()) {
	                // The conditional starts the statement if appropriate.
	                // Semicolon can be the start (and end) of a statement
	                output.space_before_token = false;
	            }
	            while (flags.mode === MODE.Statement && !flags.if_block && !flags.do_block) {
	                restore_mode();
	            }
	            print_token();
	        }

	        function handle_string() {
	            if (start_of_statement()) {
	                // The conditional starts the statement if appropriate.
	                // One difference - strings want at least a space before
	                output.space_before_token = true;
	            } else if (last_type === 'TK_RESERVED' || last_type === 'TK_WORD') {
	                output.space_before_token = true;
	            } else if (last_type === 'TK_COMMA' || last_type === 'TK_START_EXPR' || last_type === 'TK_EQUALS' || last_type === 'TK_OPERATOR') {
	                if (!start_of_object_property()) {
	                    allow_wrap_or_preserved_newline();
	                }
	            } else {
	                print_newline();
	            }
	            print_token();
	        }

	        function handle_equals() {
	            if (start_of_statement()) {
	                // The conditional starts the statement if appropriate.
	            }

	            if (flags.declaration_statement) {
	                // just got an '=' in a var-line, different formatting/line-breaking, etc will now be done
	                flags.declaration_assignment = true;
	            }
	            output.space_before_token = true;
	            print_token();
	            output.space_before_token = true;
	        }

	        function handle_comma() {
	            if (flags.declaration_statement) {
	                if (is_expression(flags.parent.mode)) {
	                    // do not break on comma, for(var a = 1, b = 2)
	                    flags.declaration_assignment = false;
	                }

	                print_token();

	                if (flags.declaration_assignment) {
	                    flags.declaration_assignment = false;
	                    print_newline(false, true);
	                } else {
	                    output.space_before_token = true;
	                    // for comma-first, we want to allow a newline before the comma
	                    // to turn into a newline after the comma, which we will fixup later
	                    if (opt.comma_first) {
	                        allow_wrap_or_preserved_newline();
	                    }
	                }
	                return;
	            }

	            print_token();
	            if (flags.mode === MODE.ObjectLiteral ||
	                (flags.mode === MODE.Statement && flags.parent.mode === MODE.ObjectLiteral)) {
	                if (flags.mode === MODE.Statement) {
	                    restore_mode();
	                }
	                print_newline();
	            } else {
	                // EXPR or DO_BLOCK
	                output.space_before_token = true;
	                // for comma-first, we want to allow a newline before the comma
	                // to turn into a newline after the comma, which we will fixup later
	                if (opt.comma_first) {
	                    allow_wrap_or_preserved_newline();
	                }
	            }

	        }

	        function handle_operator() {
	            if (start_of_statement()) {
	                // The conditional starts the statement if appropriate.
	            }

	            if (last_type === 'TK_RESERVED' && is_special_word(flags.last_text)) {
	                // "return" had a special handling in TK_WORD. Now we need to return the favor
	                output.space_before_token = true;
	                print_token();
	                return;
	            }

	            // hack for actionscript's import .*;
	            if (current_token.text === '*' && last_type === 'TK_DOT') {
	                print_token();
	                return;
	            }

	            if (current_token.text === ':' && flags.in_case) {
	                flags.case_body = true;
	                indent();
	                print_token();
	                print_newline();
	                flags.in_case = false;
	                return;
	            }

	            if (current_token.text === '::') {
	                // no spaces around exotic namespacing syntax operator
	                print_token();
	                return;
	            }

	            // Allow line wrapping between operators
	            if (last_type === 'TK_OPERATOR') {
	                allow_wrap_or_preserved_newline();
	            }

	            var space_before = true;
	            var space_after = true;

	            if (in_array(current_token.text, ['--', '++', '!', '~']) || (in_array(current_token.text, ['-', '+']) && (in_array(last_type, ['TK_START_BLOCK', 'TK_START_EXPR', 'TK_EQUALS', 'TK_OPERATOR']) || in_array(flags.last_text, Tokenizer.line_starters) || flags.last_text === ','))) {
	                // unary operators (and binary +/- pretending to be unary) special cases

	                space_before = false;
	                space_after = false;

	                // http://www.ecma-international.org/ecma-262/5.1/#sec-7.9.1
	                // if there is a newline between -- or ++ and anything else we should preserve it.
	                if (current_token.wanted_newline && (current_token.text === '--' || current_token.text === '++')) {
	                    print_newline(false, true);
	                }

	                if (flags.last_text === ';' && is_expression(flags.mode)) {
	                    // for (;; ++i)
	                    //        ^^^
	                    space_before = true;
	                }

	                if (last_type === 'TK_RESERVED') {
	                    space_before = true;
	                } else if (last_type === 'TK_END_EXPR') {
	                    space_before = !(flags.last_text === ']' && (current_token.text === '--' || current_token.text === '++'));
	                } else if (last_type === 'TK_OPERATOR') {
	                    // a++ + ++b;
	                    // a - -b
	                    space_before = in_array(current_token.text, ['--', '-', '++', '+']) && in_array(flags.last_text, ['--', '-', '++', '+']);
	                    // + and - are not unary when preceeded by -- or ++ operator
	                    // a-- + b
	                    // a * +b
	                    // a - -b
	                    if (in_array(current_token.text, ['+', '-']) && in_array(flags.last_text, ['--', '++'])) {
	                        space_after = true;
	                    }
	                }

	                if ((flags.mode === MODE.BlockStatement || flags.mode === MODE.Statement) && (flags.last_text === '{' || flags.last_text === ';')) {
	                    // { foo; --i }
	                    // foo(); --bar;
	                    print_newline();
	                }
	            } else if (current_token.text === ':') {
	                if (flags.ternary_depth === 0) {
	                    // Colon is invalid javascript outside of ternary and object, but do our best to guess what was meant.
	                    space_before = false;
	                } else {
	                    flags.ternary_depth -= 1;
	                }
	            } else if (current_token.text === '?') {
	                flags.ternary_depth += 1;
	            } else if (current_token.text === '*' && last_type === 'TK_RESERVED' && flags.last_text === 'function') {
	                space_before = false;
	                space_after = false;
	            }
	            output.space_before_token = output.space_before_token || space_before;
	            print_token();
	            output.space_before_token = space_after;
	        }

	        function handle_block_comment() {
	            if (output.raw) {
	                output.add_raw_token(current_token)
	                if (current_token.directives && current_token.directives['preserve'] === 'end') {
	                    // If we're testing the raw output behavior, do not allow a directive to turn it off.
	                    if (!opt.test_output_raw) {
	                        output.raw = false;
	                    }
	                }
	                return;
	            }

	            if (current_token.directives) {
	                print_newline(false, true);
	                print_token();
	                if (current_token.directives['preserve'] === 'start') {
	                    output.raw = true;
	                }
	                print_newline(false, true);
	                return;
	            }

	            // inline block
	            if (!acorn.newline.test(current_token.text) && !current_token.wanted_newline) {
	                output.space_before_token = true;
	                print_token();
	                output.space_before_token = true;
	                return;
	            }

	            var lines = split_newlines(current_token.text);
	            var j; // iterator for this case
	            var javadoc = false;
	            var starless = false;
	            var lastIndent = current_token.whitespace_before;
	            var lastIndentLength = lastIndent.length;

	            // block comment starts with a new line
	            print_newline(false, true);
	            if (lines.length > 1) {
	                if (all_lines_start_with(lines.slice(1), '*')) {
	                    javadoc = true;
	                }
	                else if (each_line_matches_indent(lines.slice(1), lastIndent)) {
	                    starless = true;
	                }
	            }

	            // first line always indented
	            print_token(lines[0]);
	            for (j = 1; j < lines.length; j++) {
	                print_newline(false, true);
	                if (javadoc) {
	                    // javadoc: reformat and re-indent
	                    print_token(' ' + ltrim(lines[j]));
	                } else if (starless && lines[j].length > lastIndentLength) {
	                    // starless: re-indent non-empty content, avoiding trim
	                    print_token(lines[j].substring(lastIndentLength));
	                } else {
	                    // normal comments output raw
	                    output.add_token(lines[j]);
	                }
	            }

	            // for comments of more than one line, make sure there's a new line after
	            print_newline(false, true);
	        }

	        function handle_comment() {
	            if (current_token.wanted_newline) {
	                print_newline(false, true);
	            } else {
	                output.trim(true);
	            }

	            output.space_before_token = true;
	            print_token();
	            print_newline(false, true);
	        }

	        function handle_dot() {
	            if (start_of_statement()) {
	                // The conditional starts the statement if appropriate.
	            }

	            if (last_type === 'TK_RESERVED' && is_special_word(flags.last_text)) {
	                output.space_before_token = true;
	            } else {
	                // allow preserved newlines before dots in general
	                // force newlines on dots after close paren when break_chained - for bar().baz()
	                allow_wrap_or_preserved_newline(flags.last_text === ')' && opt.break_chained_methods);
	            }

	            print_token();
	        }

	        function handle_unknown() {
	            print_token();

	            if (current_token.text[current_token.text.length - 1] === '\n') {
	                print_newline();
	            }
	        }

	        function handle_eof() {
	            // Unwind any open statements
	            while (flags.mode === MODE.Statement) {
	                restore_mode();
	            }
	        }
	    }


	    function OutputLine(parent) {
	        var _character_count = 0;
	        // use indent_count as a marker for lines that have preserved indentation
	        var _indent_count = -1;

	        var _items = [];
	        var _empty = true;

	        this.set_indent = function(level) {
	            _character_count = parent.baseIndentLength + level * parent.indent_length
	            _indent_count = level;
	        }

	        this.get_character_count = function() {
	            return _character_count;
	        }

	        this.is_empty = function() {
	            return _empty;
	        }

	        this.last = function() {
	            if (!this._empty) {
	              return _items[_items.length - 1];
	            } else {
	              return null;
	            }
	        }

	        this.push = function(input) {
	            _items.push(input);
	            _character_count += input.length;
	            _empty = false;
	        }

	        this.pop = function() {
	            var item = null;
	            if (!_empty) {
	                item = _items.pop();
	                _character_count -= item.length;
	                _empty = _items.length === 0;
	            }
	            return item;
	        }

	        this.remove_indent = function() {
	            if (_indent_count > 0) {
	                _indent_count -= 1;
	                _character_count -= parent.indent_length
	            }
	        }

	        this.trim = function() {
	            while (this.last() === ' ') {
	                var item = _items.pop();
	                _character_count -= 1;
	            }
	            _empty = _items.length === 0;
	        }

	        this.toString = function() {
	            var result = '';
	            if (!this._empty) {
	                if (_indent_count >= 0) {
	                    result = parent.indent_cache[_indent_count];
	                }
	                result += _items.join('')
	            }
	            return result;
	        }
	    }

	    function Output(indent_string, baseIndentString) {
	        baseIndentString = baseIndentString || '';
	        this.indent_cache = [ baseIndentString ];
	        this.baseIndentLength = baseIndentString.length;
	        this.indent_length = indent_string.length;
	        this.raw = false;

	        var lines =[];
	        this.baseIndentString = baseIndentString;
	        this.indent_string = indent_string;
	        this.previous_line = null;
	        this.current_line = null;
	        this.space_before_token = false;

	        this.add_outputline = function() {
	            this.previous_line = this.current_line;
	            this.current_line = new OutputLine(this);
	            lines.push(this.current_line);
	        }

	        // initialize
	        this.add_outputline();


	        this.get_line_number = function() {
	            return lines.length;
	        }

	        // Using object instead of string to allow for later expansion of info about each line
	        this.add_new_line = function(force_newline) {
	            if (this.get_line_number() === 1 && this.just_added_newline()) {
	                return false; // no newline on start of file
	            }

	            if (force_newline || !this.just_added_newline()) {
	                if (!this.raw) {
	                    this.add_outputline();
	                }
	                return true;
	            }

	            return false;
	        }

	        this.get_code = function() {
	            var sweet_code = lines.join('\n').replace(/[\r\n\t ]+$/, '');
	            return sweet_code;
	        }

	        this.set_indent = function(level) {
	            // Never indent your first output indent at the start of the file
	            if (lines.length > 1) {
	                while(level >= this.indent_cache.length) {
	                    this.indent_cache.push(this.indent_cache[this.indent_cache.length - 1] + this.indent_string);
	                }

	                this.current_line.set_indent(level);
	                return true;
	            }
	            this.current_line.set_indent(0);
	            return false;
	        }

	        this.add_raw_token = function(token) {
	            for (var x = 0; x < token.newlines; x++) {
	                this.add_outputline();
	            }
	            this.current_line.push(token.whitespace_before);
	            this.current_line.push(token.text);
	            this.space_before_token = false;
	        }

	        this.add_token = function(printable_token) {
	            this.add_space_before_token();
	            this.current_line.push(printable_token);
	        }

	        this.add_space_before_token = function() {
	            if (this.space_before_token && !this.just_added_newline()) {
	                this.current_line.push(' ');
	            }
	            this.space_before_token = false;
	        }

	        this.remove_redundant_indentation = function (frame) {
	            // This implementation is effective but has some issues:
	            //     - can cause line wrap to happen too soon due to indent removal
	            //           after wrap points are calculated
	            // These issues are minor compared to ugly indentation.

	            if (frame.multiline_frame ||
	                frame.mode === MODE.ForInitializer ||
	                frame.mode === MODE.Conditional) {
	                return;
	            }

	            // remove one indent from each line inside this section
	            var index = frame.start_line_index;
	            var line;

	            var output_length = lines.length;
	            while (index < output_length) {
	                lines[index].remove_indent();
	                index++;
	            }
	        }

	        this.trim = function(eat_newlines) {
	            eat_newlines = (eat_newlines === undefined) ? false : eat_newlines;

	            this.current_line.trim(indent_string, baseIndentString);

	            while (eat_newlines && lines.length > 1 &&
	                this.current_line.is_empty()) {
	                lines.pop();
	                this.current_line = lines[lines.length - 1]
	                this.current_line.trim();
	            }

	            this.previous_line = lines.length > 1 ? lines[lines.length - 2] : null;
	        }

	        this.just_added_newline = function() {
	            return this.current_line.is_empty();
	        }

	        this.just_added_blankline = function() {
	            if (this.just_added_newline()) {
	                if (lines.length === 1) {
	                    return true; // start of the file and newline = blank
	                }

	                var line = lines[lines.length - 2];
	                return line.is_empty();
	            }
	            return false;
	        }
	    }


	    var Token = function(type, text, newlines, whitespace_before, mode, parent) {
	        this.type = type;
	        this.text = text;
	        this.comments_before = [];
	        this.newlines = newlines || 0;
	        this.wanted_newline = newlines > 0;
	        this.whitespace_before = whitespace_before || '';
	        this.parent = null;
	        this.directives = null;
	    }

	    function tokenizer(input, opts, indent_string) {

	        var whitespace = "\n\r\t ".split('');
	        var digit = /[0-9]/;
	        var digit_hex = /[0123456789abcdefABCDEF]/;

	        var punct = ('+ - * / % & ++ -- = += -= *= /= %= == === != !== > < >= <= >> << >>> >>>= >>= <<= && &= | || ! ~ , : ? ^ ^= |= :: =>'
	                +' <%= <% %> <?= <? ?>').split(' '); // try to be a good boy and try not to break the markup language identifiers

	        // words which should always start on new line.
	        this.line_starters = 'continue,try,throw,return,var,let,const,if,switch,case,default,for,while,break,function,import,export'.split(',');
	        var reserved_words = this.line_starters.concat(['do', 'in', 'else', 'get', 'set', 'new', 'catch', 'finally', 'typeof', 'yield', 'async', 'await']);

	        //  /* ... */ comment ends with nearest */ or end of file
	        var block_comment_pattern = /([\s\S]*?)((?:\*\/)|$)/g;

	        // comment ends just before nearest linefeed or end of file
	        var comment_pattern = /([^\n\r\u2028\u2029]*)/g;

	        var directives_block_pattern = /\/\* beautify( \w+[:]\w+)+ \*\//g;
	        var directive_pattern = / (\w+)[:](\w+)/g;
	        var directives_end_ignore_pattern = /([\s\S]*?)((?:\/\*\sbeautify\signore:end\s\*\/)|$)/g;

	        var template_pattern = /((<\?php|<\?=)[\s\S]*?\?>)|(<%[\s\S]*?%>)/g

	        var n_newlines, whitespace_before_token, in_html_comment, tokens, parser_pos;
	        var input_length;

	        this.tokenize = function() {
	            // cache the source's length.
	            input_length = input.length
	            parser_pos = 0;
	            in_html_comment = false
	            tokens = [];

	            var next, last;
	            var token_values;
	            var open = null;
	            var open_stack = [];
	            var comments = [];

	            while (!(last && last.type === 'TK_EOF')) {
	                token_values = tokenize_next();
	                next = new Token(token_values[1], token_values[0], n_newlines, whitespace_before_token);
	                while(next.type === 'TK_COMMENT' || next.type === 'TK_BLOCK_COMMENT' || next.type === 'TK_UNKNOWN') {
	                    if (next.type === 'TK_BLOCK_COMMENT') {
	                        next.directives = token_values[2];
	                    }
	                    comments.push(next);
	                    token_values = tokenize_next();
	                    next = new Token(token_values[1], token_values[0], n_newlines, whitespace_before_token);
	                }

	                if (comments.length) {
	                    next.comments_before = comments;
	                    comments = [];
	                }

	                if (next.type === 'TK_START_BLOCK' || next.type === 'TK_START_EXPR') {
	                    next.parent = last;
	                    open_stack.push(open);
	                    open = next;
	                }  else if ((next.type === 'TK_END_BLOCK' || next.type === 'TK_END_EXPR') &&
	                    (open && (
	                        (next.text === ']' && open.text === '[') ||
	                        (next.text === ')' && open.text === '(') ||
	                        (next.text === '}' && open.text === '{')))) {
	                    next.parent = open.parent;
	                    open = open_stack.pop();
	                }

	                tokens.push(next);
	                last = next;
	            }

	            return tokens;
	        }

	        function get_directives (text) {
	            if (!text.match(directives_block_pattern)) {
	                return null;
	            }

	            var directives = {};
	            directive_pattern.lastIndex = 0;
	            var directive_match = directive_pattern.exec(text);

	            while (directive_match) {
	                directives[directive_match[1]] = directive_match[2];
	                directive_match = directive_pattern.exec(text);
	            }

	            return directives;
	        }

	        function tokenize_next() {
	            var i, resulting_string;
	            var whitespace_on_this_line = [];

	            n_newlines = 0;
	            whitespace_before_token = '';

	            if (parser_pos >= input_length) {
	                return ['', 'TK_EOF'];
	            }

	            var last_token;
	            if (tokens.length) {
	                last_token = tokens[tokens.length-1];
	            } else {
	                // For the sake of tokenizing we can pretend that there was on open brace to start
	                last_token = new Token('TK_START_BLOCK', '{');
	            }


	            var c = input.charAt(parser_pos);
	            parser_pos += 1;

	            while (in_array(c, whitespace)) {

	                if (acorn.newline.test(c)) {
	                    if (!(c === '\n' && input.charAt(parser_pos-2) === '\r')) {
	                        n_newlines += 1;
	                        whitespace_on_this_line = [];
	                    }
	                } else {
	                    whitespace_on_this_line.push(c);
	                }

	                if (parser_pos >= input_length) {
	                    return ['', 'TK_EOF'];
	                }

	                c = input.charAt(parser_pos);
	                parser_pos += 1;
	            }

	            if(whitespace_on_this_line.length) {
	                whitespace_before_token = whitespace_on_this_line.join('');
	            }

	            if (digit.test(c)) {
	                var allow_decimal = true;
	                var allow_e = true;
	                var local_digit = digit;

	                if (c === '0' && parser_pos < input_length && /[Xx]/.test(input.charAt(parser_pos))) {
	                    // switch to hex number, no decimal or e, just hex digits
	                    allow_decimal = false;
	                    allow_e = false;
	                    c += input.charAt(parser_pos);
	                    parser_pos += 1;
	                    local_digit = digit_hex
	                } else {
	                    // we know this first loop will run.  It keeps the logic simpler.
	                    c = '';
	                    parser_pos -= 1
	                }

	                // Add the digits
	                while (parser_pos < input_length && local_digit.test(input.charAt(parser_pos))) {
	                    c += input.charAt(parser_pos);
	                    parser_pos += 1;

	                    if (allow_decimal && parser_pos < input_length && input.charAt(parser_pos) === '.') {
	                        c += input.charAt(parser_pos);
	                        parser_pos += 1;
	                        allow_decimal = false;
	                    }

	                    if (allow_e && parser_pos < input_length && /[Ee]/.test(input.charAt(parser_pos))) {
	                        c += input.charAt(parser_pos);
	                        parser_pos += 1;

	                        if (parser_pos < input_length && /[+-]/.test(input.charAt(parser_pos))) {
	                            c += input.charAt(parser_pos);
	                            parser_pos += 1;
	                        }

	                        allow_e = false;
	                        allow_decimal = false;
	                    }
	                }

	                return [c, 'TK_WORD'];
	            }

	            if (acorn.isIdentifierStart(input.charCodeAt(parser_pos-1))) {
	                if (parser_pos < input_length) {
	                    while (acorn.isIdentifierChar(input.charCodeAt(parser_pos))) {
	                        c += input.charAt(parser_pos);
	                        parser_pos += 1;
	                        if (parser_pos === input_length) {
	                            break;
	                        }
	                    }
	                }

	                if (!(last_token.type === 'TK_DOT' ||
	                        (last_token.type === 'TK_RESERVED' && in_array(last_token.text, ['set', 'get'])))
	                    && in_array(c, reserved_words)) {
	                    if (c === 'in') { // hack for 'in' operator
	                        return [c, 'TK_OPERATOR'];
	                    }
	                    return [c, 'TK_RESERVED'];
	                }

	                return [c, 'TK_WORD'];
	            }

	            if (c === '(' || c === '[') {
	                return [c, 'TK_START_EXPR'];
	            }

	            if (c === ')' || c === ']') {
	                return [c, 'TK_END_EXPR'];
	            }

	            if (c === '{') {
	                return [c, 'TK_START_BLOCK'];
	            }

	            if (c === '}') {
	                return [c, 'TK_END_BLOCK'];
	            }

	            if (c === ';') {
	                return [c, 'TK_SEMICOLON'];
	            }

	            if (c === '/') {
	                var comment = '';
	                // peek for comment /* ... */
	                if (input.charAt(parser_pos) === '*') {
	                    parser_pos += 1;
	                    block_comment_pattern.lastIndex = parser_pos;
	                    var comment_match = block_comment_pattern.exec(input);
	                    comment = '/*' + comment_match[0];
	                    parser_pos += comment_match[0].length;
	                    var directives = get_directives(comment);
	                    if (directives && directives['ignore'] === 'start') {
	                        directives_end_ignore_pattern.lastIndex = parser_pos;
	                        comment_match = directives_end_ignore_pattern.exec(input)
	                        comment += comment_match[0];
	                        parser_pos += comment_match[0].length;
	                    }
	                    comment = comment.replace(acorn.lineBreak, '\n');
	                    return [comment, 'TK_BLOCK_COMMENT', directives];
	                }
	                // peek for comment // ...
	                if (input.charAt(parser_pos) === '/') {
	                    parser_pos += 1;
	                    comment_pattern.lastIndex = parser_pos;
	                    var comment_match = comment_pattern.exec(input);
	                    comment = '//' + comment_match[0];
	                    parser_pos += comment_match[0].length;
	                    return [comment, 'TK_COMMENT'];
	                }

	            }

	            if (c === '`' || c === "'" || c === '"' || // string
	                (
	                    (c === '/') || // regexp
	                    (opts.e4x && c === "<" && input.slice(parser_pos - 1).match(/^<([-a-zA-Z:0-9_.]+|{[^{}]*}|!\[CDATA\[[\s\S]*?\]\])(\s+[-a-zA-Z:0-9_.]+\s*=\s*('[^']*'|"[^"]*"|{.*?}))*\s*(\/?)\s*>/)) // xml
	                ) && ( // regex and xml can only appear in specific locations during parsing
	                    (last_token.type === 'TK_RESERVED' && in_array(last_token.text , ['return', 'case', 'throw', 'else', 'do', 'typeof', 'yield'])) ||
	                    (last_token.type === 'TK_END_EXPR' && last_token.text === ')' &&
	                        last_token.parent && last_token.parent.type === 'TK_RESERVED' && in_array(last_token.parent.text, ['if', 'while', 'for'])) ||
	                    (in_array(last_token.type, ['TK_COMMENT', 'TK_START_EXPR', 'TK_START_BLOCK',
	                        'TK_END_BLOCK', 'TK_OPERATOR', 'TK_EQUALS', 'TK_EOF', 'TK_SEMICOLON', 'TK_COMMA'
	                    ]))
	                )) {

	                var sep = c,
	                    esc = false,
	                    has_char_escapes = false;

	                resulting_string = c;

	                if (sep === '/') {
	                    //
	                    // handle regexp
	                    //
	                    var in_char_class = false;
	                    while (parser_pos < input_length &&
	                            ((esc || in_char_class || input.charAt(parser_pos) !== sep) &&
	                            !acorn.newline.test(input.charAt(parser_pos)))) {
	                        resulting_string += input.charAt(parser_pos);
	                        if (!esc) {
	                            esc = input.charAt(parser_pos) === '\\';
	                            if (input.charAt(parser_pos) === '[') {
	                                in_char_class = true;
	                            } else if (input.charAt(parser_pos) === ']') {
	                                in_char_class = false;
	                            }
	                        } else {
	                            esc = false;
	                        }
	                        parser_pos += 1;
	                    }
	                } else if (opts.e4x && sep === '<') {
	                    //
	                    // handle e4x xml literals
	                    //
	                    var xmlRegExp = /<(\/?)([-a-zA-Z:0-9_.]+|{[^{}]*}|!\[CDATA\[[\s\S]*?\]\])(\s+[-a-zA-Z:0-9_.]+\s*=\s*('[^']*'|"[^"]*"|{.*?}))*\s*(\/?)\s*>/g;
	                    var xmlStr = input.slice(parser_pos - 1);
	                    var match = xmlRegExp.exec(xmlStr);
	                    if (match && match.index === 0) {
	                        var rootTag = match[2];
	                        var depth = 0;
	                        while (match) {
	                            var isEndTag = !! match[1];
	                            var tagName = match[2];
	                            var isSingletonTag = ( !! match[match.length - 1]) || (tagName.slice(0, 8) === "![CDATA[");
	                            if (tagName === rootTag && !isSingletonTag) {
	                                if (isEndTag) {
	                                    --depth;
	                                } else {
	                                    ++depth;
	                                }
	                            }
	                            if (depth <= 0) {
	                                break;
	                            }
	                            match = xmlRegExp.exec(xmlStr);
	                        }
	                        var xmlLength = match ? match.index + match[0].length : xmlStr.length;
	                        xmlStr = xmlStr.slice(0, xmlLength);
	                        parser_pos += xmlLength - 1;
	                        xmlStr = xmlStr.replace(acorn.lineBreak, '\n');
	                        return [xmlStr, "TK_STRING"];
	                    }
	                } else {
	                    //
	                    // handle string
	                    //
	                    // Template strings can travers lines without escape characters.
	                    // Other strings cannot
	                    while (parser_pos < input_length &&
	                            (esc || (input.charAt(parser_pos) !== sep &&
	                            (sep === '`' || !acorn.newline.test(input.charAt(parser_pos)))))) {
	                        // Handle \r\n linebreaks after escapes or in template strings
	                        if ((esc || sep === '`') && acorn.newline.test(input.charAt(parser_pos))) {
	                            if (input.charAt(parser_pos) === '\r' && input.charAt(parser_pos + 1) === '\n') {
	                                parser_pos += 1;
	                            }
	                            resulting_string += '\n';
	                        } else {
	                            resulting_string += input.charAt(parser_pos);
	                        }
	                        if (esc) {
	                            if (input.charAt(parser_pos) === 'x' || input.charAt(parser_pos) === 'u') {
	                                has_char_escapes = true;
	                            }
	                            esc = false;
	                        } else {
	                            esc = input.charAt(parser_pos) === '\\';
	                        }
	                        parser_pos += 1;
	                    }

	                }

	                if (has_char_escapes && opts.unescape_strings) {
	                    resulting_string = unescape_string(resulting_string);
	                }

	                if (parser_pos < input_length && input.charAt(parser_pos) === sep) {
	                    resulting_string += sep;
	                    parser_pos += 1;

	                    if (sep === '/') {
	                        // regexps may have modifiers /regexp/MOD , so fetch those, too
	                        // Only [gim] are valid, but if the user puts in garbage, do what we can to take it.
	                        while (parser_pos < input_length && acorn.isIdentifierStart(input.charCodeAt(parser_pos))) {
	                            resulting_string += input.charAt(parser_pos);
	                            parser_pos += 1;
	                        }
	                    }
	                }
	                return [resulting_string, 'TK_STRING'];
	            }

	            if (c === '#') {

	                if (tokens.length === 0 && input.charAt(parser_pos) === '!') {
	                    // shebang
	                    resulting_string = c;
	                    while (parser_pos < input_length && c !== '\n') {
	                        c = input.charAt(parser_pos);
	                        resulting_string += c;
	                        parser_pos += 1;
	                    }
	                    return [trim(resulting_string) + '\n', 'TK_UNKNOWN'];
	                }



	                // Spidermonkey-specific sharp variables for circular references
	                // https://developer.mozilla.org/En/Sharp_variables_in_JavaScript
	                // http://mxr.mozilla.org/mozilla-central/source/js/src/jsscan.cpp around line 1935
	                var sharp = '#';
	                if (parser_pos < input_length && digit.test(input.charAt(parser_pos))) {
	                    do {
	                        c = input.charAt(parser_pos);
	                        sharp += c;
	                        parser_pos += 1;
	                    } while (parser_pos < input_length && c !== '#' && c !== '=');
	                    if (c === '#') {
	                        //
	                    } else if (input.charAt(parser_pos) === '[' && input.charAt(parser_pos + 1) === ']') {
	                        sharp += '[]';
	                        parser_pos += 2;
	                    } else if (input.charAt(parser_pos) === '{' && input.charAt(parser_pos + 1) === '}') {
	                        sharp += '{}';
	                        parser_pos += 2;
	                    }
	                    return [sharp, 'TK_WORD'];
	                }
	            }

	            if (c === '<' && (input.charAt(parser_pos) === '?' || input.charAt(parser_pos) === '%')) {
	                template_pattern.lastIndex = parser_pos - 1;
	                var template_match = template_pattern.exec(input);
	                if(template_match) {
	                    c = template_match[0];
	                    parser_pos += c.length - 1;
	                    c = c.replace(acorn.lineBreak, '\n');
	                    return [c, 'TK_STRING'];
	                }
	            }

	            if (c === '<' && input.substring(parser_pos - 1, parser_pos + 3) === '<!--') {
	                parser_pos += 3;
	                c = '<!--';
	                while (!acorn.newline.test(input.charAt(parser_pos)) && parser_pos < input_length) {
	                    c += input.charAt(parser_pos);
	                    parser_pos++;
	                }
	                in_html_comment = true;
	                return [c, 'TK_COMMENT'];
	            }

	            if (c === '-' && in_html_comment && input.substring(parser_pos - 1, parser_pos + 2) === '-->') {
	                in_html_comment = false;
	                parser_pos += 2;
	                return ['-->', 'TK_COMMENT'];
	            }

	            if (c === '.') {
	                return [c, 'TK_DOT'];
	            }

	            if (in_array(c, punct)) {
	                while (parser_pos < input_length && in_array(c + input.charAt(parser_pos), punct)) {
	                    c += input.charAt(parser_pos);
	                    parser_pos += 1;
	                    if (parser_pos >= input_length) {
	                        break;
	                    }
	                }

	                if (c === ',') {
	                    return [c, 'TK_COMMA'];
	                } else if (c === '=') {
	                    return [c, 'TK_EQUALS'];
	                } else {
	                    return [c, 'TK_OPERATOR'];
	                }
	            }

	            return [c, 'TK_UNKNOWN'];
	        }


	        function unescape_string(s) {
	            var esc = false,
	                out = '',
	                pos = 0,
	                s_hex = '',
	                escaped = 0,
	                c;

	            while (esc || pos < s.length) {

	                c = s.charAt(pos);
	                pos++;

	                if (esc) {
	                    esc = false;
	                    if (c === 'x') {
	                        // simple hex-escape \x24
	                        s_hex = s.substr(pos, 2);
	                        pos += 2;
	                    } else if (c === 'u') {
	                        // unicode-escape, \u2134
	                        s_hex = s.substr(pos, 4);
	                        pos += 4;
	                    } else {
	                        // some common escape, e.g \n
	                        out += '\\' + c;
	                        continue;
	                    }
	                    if (!s_hex.match(/^[0123456789abcdefABCDEF]+$/)) {
	                        // some weird escaping, bail out,
	                        // leaving whole string intact
	                        return s;
	                    }

	                    escaped = parseInt(s_hex, 16);

	                    if (escaped >= 0x00 && escaped < 0x20) {
	                        // leave 0x00...0x1f escaped
	                        if (c === 'x') {
	                            out += '\\x' + s_hex;
	                        } else {
	                            out += '\\u' + s_hex;
	                        }
	                        continue;
	                    } else if (escaped === 0x22 || escaped === 0x27 || escaped === 0x5c) {
	                        // single-quote, apostrophe, backslash - escape these
	                        out += '\\' + String.fromCharCode(escaped);
	                    } else if (c === 'x' && escaped > 0x7e && escaped <= 0xff) {
	                        // we bail out on \x7f..\xff,
	                        // leaving whole string escaped,
	                        // as it's probably completely binary
	                        return s;
	                    } else {
	                        out += String.fromCharCode(escaped);
	                    }
	                } else if (c === '\\') {
	                    esc = true;
	                } else {
	                    out += c;
	                }
	            }
	            return out;
	        }

	    }


	    if (true) {
	        // Add support for AMD ( https://github.com/amdjs/amdjs-api/wiki/AMD#defineamd-property- )
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() {
	            return { js_beautify: js_beautify };
	        }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	    } else if (typeof exports !== "undefined") {
	        // Add support for CommonJS. Just put this file somewhere on your require.paths
	        // and you will be able to `var js_beautify = require("beautify").js_beautify`.
	        exports.js_beautify = js_beautify;
	    } else if (typeof window !== "undefined") {
	        // If we're running a web page and don't have either of the above, add our one global
	        window.js_beautify = js_beautify;
	    } else if (typeof global !== "undefined") {
	        // If we don't even have window, try global.
	        global.js_beautify = js_beautify;
	    }

	}());


/***/ },
/* 35 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*jshint curly:true, eqeqeq:true, laxbreak:true, noempty:false */
	/*

	  The MIT License (MIT)

	  Copyright (c) 2007-2013 Einar Lielmanis and contributors.

	  Permission is hereby granted, free of charge, to any person
	  obtaining a copy of this software and associated documentation files
	  (the "Software"), to deal in the Software without restriction,
	  including without limitation the rights to use, copy, modify, merge,
	  publish, distribute, sublicense, and/or sell copies of the Software,
	  and to permit persons to whom the Software is furnished to do so,
	  subject to the following conditions:

	  The above copyright notice and this permission notice shall be
	  included in all copies or substantial portions of the Software.

	  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
	  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
	  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
	  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
	  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
	  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
	  SOFTWARE.


	 CSS Beautifier
	---------------

	    Written by Harutyun Amirjanyan, (amirjanyan@gmail.com)

	    Based on code initially developed by: Einar Lielmanis, <einar@jsbeautifier.org>
	        http://jsbeautifier.org/

	    Usage:
	        css_beautify(source_text);
	        css_beautify(source_text, options);

	    The options are (default in brackets):
	        indent_size (4)                   — indentation size,
	        indent_char (space)               — character to indent with,
	        selector_separator_newline (true) - separate selectors with newline or
	                                            not (e.g. "a,\nbr" or "a, br")
	        end_with_newline (false)          - end with a newline
	        newline_between_rules (true)      - add a new line after every css rule

	    e.g

	    css_beautify(css_source_text, {
	      'indent_size': 1,
	      'indent_char': '\t',
	      'selector_separator': ' ',
	      'end_with_newline': false,
	      'newline_between_rules': true
	    });
	*/

	// http://www.w3.org/TR/CSS21/syndata.html#tokenization
	// http://www.w3.org/TR/css3-syntax/

	(function() {
	    function css_beautify(source_text, options) {
	        options = options || {};
	        source_text = source_text || '';
	        // HACK: newline parsing inconsistent. This brute force normalizes the input.
	        source_text = source_text.replace(/\r\n|[\r\u2028\u2029]/g, '\n')

	        var indentSize = options.indent_size || 4;
	        var indentCharacter = options.indent_char || ' ';
	        var selectorSeparatorNewline = (options.selector_separator_newline === undefined) ? true : options.selector_separator_newline;
	        var end_with_newline = (options.end_with_newline === undefined) ? false : options.end_with_newline;
	        var newline_between_rules = (options.newline_between_rules === undefined) ? true : options.newline_between_rules;
	        var eol = options.eol ? options.eol : '\n';

	        // compatibility
	        if (typeof indentSize === "string") {
	            indentSize = parseInt(indentSize, 10);
	        }

	        if(options.indent_with_tabs){
	            indentCharacter = '\t';
	            indentSize = 1;
	        }

	        eol = eol.replace(/\\r/, '\r').replace(/\\n/, '\n')


	        // tokenizer
	        var whiteRe = /^\s+$/;
	        var wordRe = /[\w$\-_]/;

	        var pos = -1,
	            ch;
	        var parenLevel = 0;

	        function next() {
	            ch = source_text.charAt(++pos);
	            return ch || '';
	        }

	        function peek(skipWhitespace) {
	            var result = '';
	            var prev_pos = pos;
	            if (skipWhitespace) {
	                eatWhitespace();
	            }
	            result = source_text.charAt(pos + 1) || '';
	            pos = prev_pos - 1;
	            next();
	            return result;
	        }

	        function eatString(endChars) {
	            var start = pos;
	            while (next()) {
	                if (ch === "\\") {
	                    next();
	                } else if (endChars.indexOf(ch) !== -1) {
	                    break;
	                } else if (ch === "\n") {
	                    break;
	                }
	            }
	            return source_text.substring(start, pos + 1);
	        }

	        function peekString(endChar) {
	            var prev_pos = pos;
	            var str = eatString(endChar);
	            pos = prev_pos - 1;
	            next();
	            return str;
	        }

	        function eatWhitespace() {
	            var result = '';
	            while (whiteRe.test(peek())) {
	                next();
	                result += ch;
	            }
	            return result;
	        }

	        function skipWhitespace() {
	            var result = '';
	            if (ch && whiteRe.test(ch)) {
	                result = ch;
	            }
	            while (whiteRe.test(next())) {
	                result += ch;
	            }
	            return result;
	        }

	        function eatComment(singleLine) {
	            var start = pos;
	            singleLine = peek() === "/";
	            next();
	            while (next()) {
	                if (!singleLine && ch === "*" && peek() === "/") {
	                    next();
	                    break;
	                } else if (singleLine && ch === "\n") {
	                    return source_text.substring(start, pos);
	                }
	            }

	            return source_text.substring(start, pos) + ch;
	        }


	        function lookBack(str) {
	            return source_text.substring(pos - str.length, pos).toLowerCase() ===
	                str;
	        }

	        // Nested pseudo-class if we are insideRule
	        // and the next special character found opens
	        // a new block
	        function foundNestedPseudoClass() {
	            var openParen = 0;
	            for (var i = pos + 1; i < source_text.length; i++) {
	                var ch = source_text.charAt(i);
	                if (ch === "{") {
	                    return true;
	                } else if (ch === '(') {
	                    // pseudoclasses can contain ()
	                    openParen += 1;
	                } else if (ch === ')') {
	                    if (openParen == 0) {
	                        return false;
	                    }
	                    openParen -= 1;
	                } else if (ch === ";" || ch === "}") {
	                    return false;
	                }
	            }
	            return false;
	        }

	        // printer
	        var basebaseIndentString = source_text.match(/^[\t ]*/)[0];
	        var singleIndent = new Array(indentSize + 1).join(indentCharacter);
	        var indentLevel = 0;
	        var nestedLevel = 0;

	        function indent() {
	            indentLevel++;
	            basebaseIndentString += singleIndent;
	        }

	        function outdent() {
	            indentLevel--;
	            basebaseIndentString = basebaseIndentString.slice(0, -indentSize);
	        }

	        var print = {};
	        print["{"] = function(ch) {
	            print.singleSpace();
	            output.push(ch);
	            print.newLine();
	        };
	        print["}"] = function(ch) {
	            print.newLine();
	            output.push(ch);
	            print.newLine();
	        };

	        print._lastCharWhitespace = function() {
	            return whiteRe.test(output[output.length - 1]);
	        };

	        print.newLine = function(keepWhitespace) {
	            if (output.length) {
	                if (!keepWhitespace && output[output.length - 1] !== '\n') {
	                    print.trim();
	                }

	                output.push('\n');

	                if (basebaseIndentString) {
	                    output.push(basebaseIndentString);
	                }
	            }
	        };
	        print.singleSpace = function() {
	            if (output.length && !print._lastCharWhitespace()) {
	                output.push(' ');
	            }
	        };

	        print.preserveSingleSpace = function() {
	            if (isAfterSpace) {
	                print.singleSpace();
	            }
	        };

	        print.trim = function() {
	            while (print._lastCharWhitespace()) {
	                output.pop();
	            }
	        };


	        var output = [];
	        /*_____________________--------------------_____________________*/

	        var insideRule = false;
	        var insidePropertyValue = false;
	        var enteringConditionalGroup = false;
	        var top_ch = '';
	        var last_top_ch = '';

	        while (true) {
	            var whitespace = skipWhitespace();
	            var isAfterSpace = whitespace !== '';
	            var isAfterNewline = whitespace.indexOf('\n') !== -1;
	            last_top_ch = top_ch;
	            top_ch = ch;

	            if (!ch) {
	                break;
	            } else if (ch === '/' && peek() === '*') { /* css comment */
	                var header = indentLevel === 0;

	                if (isAfterNewline || header) {
	                    print.newLine();
	                }

	                output.push(eatComment());
	                print.newLine();
	                if (header) {
	                    print.newLine(true);
	                }
	            } else if (ch === '/' && peek() === '/') { // single line comment
	                if (!isAfterNewline && last_top_ch !== '{' ) {
	                    print.trim();
	                }
	                print.singleSpace();
	                output.push(eatComment());
	                print.newLine();
	            } else if (ch === '@') {
	                print.preserveSingleSpace();
	                output.push(ch);

	                // strip trailing space, if present, for hash property checks
	                var variableOrRule = peekString(": ,;{}()[]/='\"");

	                if (variableOrRule.match(/[ :]$/)) {
	                    // we have a variable or pseudo-class, add it and insert one space before continuing
	                    next();
	                    variableOrRule = eatString(": ").replace(/\s$/, '');
	                    output.push(variableOrRule);
	                    print.singleSpace();
	                }

	                variableOrRule = variableOrRule.replace(/\s$/, '')

	                // might be a nesting at-rule
	                if (variableOrRule in css_beautify.NESTED_AT_RULE) {
	                    nestedLevel += 1;
	                    if (variableOrRule in css_beautify.CONDITIONAL_GROUP_RULE) {
	                        enteringConditionalGroup = true;
	                    }
	                }
	            } else if (ch === '#' && peek() === '{') {
	              print.preserveSingleSpace();
	              output.push(eatString('}'));
	            } else if (ch === '{') {
	                if (peek(true) === '}') {
	                    eatWhitespace();
	                    next();
	                    print.singleSpace();
	                    output.push("{}");
	                    print.newLine();
	                    if (newline_between_rules && indentLevel === 0) {
	                        print.newLine(true);
	                    }
	                } else {
	                    indent();
	                    print["{"](ch);
	                    // when entering conditional groups, only rulesets are allowed
	                    if (enteringConditionalGroup) {
	                        enteringConditionalGroup = false;
	                        insideRule = (indentLevel > nestedLevel);
	                    } else {
	                        // otherwise, declarations are also allowed
	                        insideRule = (indentLevel >= nestedLevel);
	                    }
	                }
	            } else if (ch === '}') {
	                outdent();
	                print["}"](ch);
	                insideRule = false;
	                insidePropertyValue = false;
	                if (nestedLevel) {
	                    nestedLevel--;
	                }
	                if (newline_between_rules && indentLevel === 0) {
	                    print.newLine(true);
	                }
	            } else if (ch === ":") {
	                eatWhitespace();
	                if ((insideRule || enteringConditionalGroup) &&
	                    !(lookBack("&") || foundNestedPseudoClass())) {
	                    // 'property: value' delimiter
	                    // which could be in a conditional group query
	                    insidePropertyValue = true;
	                    output.push(':');
	                    print.singleSpace();
	                } else {
	                    // sass/less parent reference don't use a space
	                    // sass nested pseudo-class don't use a space
	                    if (peek() === ":") {
	                        // pseudo-element
	                        next();
	                        output.push("::");
	                    } else {
	                        // pseudo-class
	                        output.push(':');
	                    }
	                }
	            } else if (ch === '"' || ch === '\'') {
	                print.preserveSingleSpace();
	                output.push(eatString(ch));
	            } else if (ch === ';') {
	                insidePropertyValue = false;
	                output.push(ch);
	                print.newLine();
	            } else if (ch === '(') { // may be a url
	                if (lookBack("url")) {
	                    output.push(ch);
	                    eatWhitespace();
	                    if (next()) {
	                        if (ch !== ')' && ch !== '"' && ch !== '\'') {
	                            output.push(eatString(')'));
	                        } else {
	                            pos--;
	                        }
	                    }
	                } else {
	                    parenLevel++;
	                    print.preserveSingleSpace();
	                    output.push(ch);
	                    eatWhitespace();
	                }
	            } else if (ch === ')') {
	                output.push(ch);
	                parenLevel--;
	            } else if (ch === ',') {
	                output.push(ch);
	                eatWhitespace();
	                if (selectorSeparatorNewline && !insidePropertyValue && parenLevel < 1) {
	                    print.newLine();
	                } else {
	                    print.singleSpace();
	                }
	            } else if (ch === ']') {
	                output.push(ch);
	            } else if (ch === '[') {
	                print.preserveSingleSpace();
	                output.push(ch);
	            } else if (ch === '=') { // no whitespace before or after
	                eatWhitespace()
	                ch = '=';
	                output.push(ch);
	            } else {
	                print.preserveSingleSpace();
	                output.push(ch);
	            }
	        }


	        var sweetCode = '';
	        if (basebaseIndentString) {
	            sweetCode += basebaseIndentString;
	        }

	        sweetCode += output.join('').replace(/[\r\n\t ]+$/, '');

	        // establish end_with_newline
	        if (end_with_newline) {
	            sweetCode += '\n';
	        }

	        if (eol != '\n') {
	            sweetCode = sweetCode.replace(/[\n]/g, eol);
	        }

	        return sweetCode;
	    }

	    // https://developer.mozilla.org/en-US/docs/Web/CSS/At-rule
	    css_beautify.NESTED_AT_RULE = {
	        "@page": true,
	        "@font-face": true,
	        "@keyframes": true,
	        // also in CONDITIONAL_GROUP_RULE below
	        "@media": true,
	        "@supports": true,
	        "@document": true
	    };
	    css_beautify.CONDITIONAL_GROUP_RULE = {
	        "@media": true,
	        "@supports": true,
	        "@document": true
	    };

	    /*global define */
	    if (true) {
	        // Add support for AMD ( https://github.com/amdjs/amdjs-api/wiki/AMD#defineamd-property- )
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() {
	            return {
	                css_beautify: css_beautify
	            };
	        }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	    } else if (typeof exports !== "undefined") {
	        // Add support for CommonJS. Just put this file somewhere on your require.paths
	        // and you will be able to `var html_beautify = require("beautify").html_beautify`.
	        exports.css_beautify = css_beautify;
	    } else if (typeof window !== "undefined") {
	        // If we're running a web page and don't have either of the above, add our one global
	        window.css_beautify = css_beautify;
	    } else if (typeof global !== "undefined") {
	        // If we don't even have window, try global.
	        global.css_beautify = css_beautify;
	    }

	}());


/***/ },
/* 36 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*jshint curly:true, eqeqeq:true, laxbreak:true, noempty:false */
	/*

	  The MIT License (MIT)

	  Copyright (c) 2007-2013 Einar Lielmanis and contributors.

	  Permission is hereby granted, free of charge, to any person
	  obtaining a copy of this software and associated documentation files
	  (the "Software"), to deal in the Software without restriction,
	  including without limitation the rights to use, copy, modify, merge,
	  publish, distribute, sublicense, and/or sell copies of the Software,
	  and to permit persons to whom the Software is furnished to do so,
	  subject to the following conditions:

	  The above copyright notice and this permission notice shall be
	  included in all copies or substantial portions of the Software.

	  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
	  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
	  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
	  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
	  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
	  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
	  SOFTWARE.


	 Style HTML
	---------------

	  Written by Nochum Sossonko, (nsossonko@hotmail.com)

	  Based on code initially developed by: Einar Lielmanis, <einar@jsbeautifier.org>
	    http://jsbeautifier.org/

	  Usage:
	    style_html(html_source);

	    style_html(html_source, options);

	  The options are:
	    indent_inner_html (default false)  — indent <head> and <body> sections,
	    indent_size (default 4)          — indentation size,
	    indent_char (default space)      — character to indent with,
	    wrap_line_length (default 250)            -  maximum amount of characters per line (0 = disable)
	    brace_style (default "collapse") - "collapse" | "expand" | "end-expand" | "none"
	            put braces on the same line as control statements (default), or put braces on own line (Allman / ANSI style), or just put end braces on own line, or attempt to keep them where they are.
	    unformatted (defaults to inline tags) - list of tags, that shouldn't be reformatted
	    indent_scripts (default normal)  - "keep"|"separate"|"normal"
	    preserve_newlines (default true) - whether existing line breaks before elements should be preserved
	                                        Only works before elements, not inside tags or for text.
	    max_preserve_newlines (default unlimited) - maximum number of line breaks to be preserved in one chunk
	    indent_handlebars (default false) - format and indent {{#foo}} and {{/foo}}
	    end_with_newline (false)          - end with a newline
	    extra_liners (default [head,body,/html]) -List of tags that should have an extra newline before them.

	    e.g.

	    style_html(html_source, {
	      'indent_inner_html': false,
	      'indent_size': 2,
	      'indent_char': ' ',
	      'wrap_line_length': 78,
	      'brace_style': 'expand',
	      'unformatted': ['a', 'sub', 'sup', 'b', 'i', 'u'],
	      'preserve_newlines': true,
	      'max_preserve_newlines': 5,
	      'indent_handlebars': false,
	      'extra_liners': ['/html']
	    });
	*/

	(function() {

	    function trim(s) {
	        return s.replace(/^\s+|\s+$/g, '');
	    }

	    function ltrim(s) {
	        return s.replace(/^\s+/g, '');
	    }

	    function rtrim(s) {
	        return s.replace(/\s+$/g,'');
	    }

	    function style_html(html_source, options, js_beautify, css_beautify) {
	        //Wrapper function to invoke all the necessary constructors and deal with the output.

	        var multi_parser,
	            indent_inner_html,
	            indent_size,
	            indent_character,
	            wrap_line_length,
	            brace_style,
	            unformatted,
	            preserve_newlines,
	            max_preserve_newlines,
	            indent_handlebars,
	            wrap_attributes,
	            wrap_attributes_indent_size,
	            end_with_newline,
	            extra_liners,
	            eol;

	        options = options || {};

	        // backwards compatibility to 1.3.4
	        if ((options.wrap_line_length === undefined || parseInt(options.wrap_line_length, 10) === 0) &&
	                (options.max_char !== undefined && parseInt(options.max_char, 10) !== 0)) {
	            options.wrap_line_length = options.max_char;
	        }

	        indent_inner_html = (options.indent_inner_html === undefined) ? false : options.indent_inner_html;
	        indent_size = (options.indent_size === undefined) ? 4 : parseInt(options.indent_size, 10);
	        indent_character = (options.indent_char === undefined) ? ' ' : options.indent_char;
	        brace_style = (options.brace_style === undefined) ? 'collapse' : options.brace_style;
	        wrap_line_length =  parseInt(options.wrap_line_length, 10) === 0 ? 32786 : parseInt(options.wrap_line_length || 250, 10);
	        unformatted = options.unformatted || ['a', 'span', 'img', 'bdo', 'em', 'strong', 'dfn', 'code', 'samp', 'kbd',
	            'var', 'cite', 'abbr', 'acronym', 'q', 'sub', 'sup', 'tt', 'i', 'b', 'big', 'small', 'u', 's', 'strike',
	            'font', 'ins', 'del', 'pre', 'address', 'dt', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6'];
	        preserve_newlines = (options.preserve_newlines === undefined) ? true : options.preserve_newlines;
	        max_preserve_newlines = preserve_newlines ?
	            (isNaN(parseInt(options.max_preserve_newlines, 10)) ? 32786 : parseInt(options.max_preserve_newlines, 10))
	            : 0;
	        indent_handlebars = (options.indent_handlebars === undefined) ? false : options.indent_handlebars;
	        wrap_attributes = (options.wrap_attributes === undefined) ? 'auto' : options.wrap_attributes;
	        wrap_attributes_indent_size = (options.wrap_attributes_indent_size === undefined) ? indent_size : parseInt(options.wrap_attributes_indent_size, 10) || indent_size;
	        end_with_newline = (options.end_with_newline === undefined) ? false : options.end_with_newline;
	        extra_liners = (typeof options.extra_liners == 'object') && options.extra_liners ?
	            options.extra_liners.concat() : (typeof options.extra_liners === 'string') ?
	            options.extra_liners.split(',') : 'head,body,/html'.split(',');
	        eol = options.eol ? options.eol : '\n';

	        if(options.indent_with_tabs){
	            indent_character = '\t';
	            indent_size = 1;
	        }

	        eol = eol.replace(/\\r/, '\r').replace(/\\n/, '\n')

	        function Parser() {

	            this.pos = 0; //Parser position
	            this.token = '';
	            this.current_mode = 'CONTENT'; //reflects the current Parser mode: TAG/CONTENT
	            this.tags = { //An object to hold tags, their position, and their parent-tags, initiated with default values
	                parent: 'parent1',
	                parentcount: 1,
	                parent1: ''
	            };
	            this.tag_type = '';
	            this.token_text = this.last_token = this.last_text = this.token_type = '';
	            this.newlines = 0;
	            this.indent_content = indent_inner_html;

	            this.Utils = { //Uilities made available to the various functions
	                whitespace: "\n\r\t ".split(''),
	                single_token: 'br,input,link,meta,source,!doctype,basefont,base,area,hr,wbr,param,img,isindex,embed'.split(','), //all the single tags for HTML
	                extra_liners: extra_liners, //for tags that need a line of whitespace before them
	                in_array: function(what, arr) {
	                    for (var i = 0; i < arr.length; i++) {
	                        if (what === arr[i]) {
	                            return true;
	                        }
	                    }
	                    return false;
	                }
	            };

	            // Return true if the given text is composed entirely of whitespace.
	            this.is_whitespace = function(text) {
	                for (var n = 0; n < text.length; text++) {
	                    if (!this.Utils.in_array(text.charAt(n), this.Utils.whitespace)) {
	                        return false;
	                    }
	                }
	                return true;
	            };

	            this.traverse_whitespace = function() {
	                var input_char = '';

	                input_char = this.input.charAt(this.pos);
	                if (this.Utils.in_array(input_char, this.Utils.whitespace)) {
	                    this.newlines = 0;
	                    while (this.Utils.in_array(input_char, this.Utils.whitespace)) {
	                        if (preserve_newlines && input_char === '\n' && this.newlines <= max_preserve_newlines) {
	                            this.newlines += 1;
	                        }

	                        this.pos++;
	                        input_char = this.input.charAt(this.pos);
	                    }
	                    return true;
	                }
	                return false;
	            };

	            // Append a space to the given content (string array) or, if we are
	            // at the wrap_line_length, append a newline/indentation.
	            this.space_or_wrap = function(content) {
	                if (this.line_char_count >= this.wrap_line_length) { //insert a line when the wrap_line_length is reached
	                    this.print_newline(false, content);
	                    this.print_indentation(content);
	                } else {
	                    this.line_char_count++;
	                    content.push(' ');
	                }
	            };

	            this.get_content = function() { //function to capture regular content between tags
	                var input_char = '',
	                    content = [],
	                    space = false; //if a space is needed

	                while (this.input.charAt(this.pos) !== '<') {
	                    if (this.pos >= this.input.length) {
	                        return content.length ? content.join('') : ['', 'TK_EOF'];
	                    }

	                    if (this.traverse_whitespace()) {
	                        this.space_or_wrap(content);
	                        continue;
	                    }

	                    if (indent_handlebars) {
	                        // Handlebars parsing is complicated.
	                        // {{#foo}} and {{/foo}} are formatted tags.
	                        // {{something}} should get treated as content, except:
	                        // {{else}} specifically behaves like {{#if}} and {{/if}}
	                        var peek3 = this.input.substr(this.pos, 3);
	                        if (peek3 === '{{#' || peek3 === '{{/') {
	                            // These are tags and not content.
	                            break;
	                        } else if (peek3 === '{{!') {
	                            return [this.get_tag(), 'TK_TAG_HANDLEBARS_COMMENT'];
	                        } else if (this.input.substr(this.pos, 2) === '{{') {
	                            if (this.get_tag(true) === '{{else}}') {
	                                break;
	                            }
	                        }
	                    }

	                    input_char = this.input.charAt(this.pos);
	                    this.pos++;
	                    this.line_char_count++;
	                    content.push(input_char); //letter at-a-time (or string) inserted to an array
	                }
	                return content.length ? content.join('') : '';
	            };

	            this.get_contents_to = function(name) { //get the full content of a script or style to pass to js_beautify
	                if (this.pos === this.input.length) {
	                    return ['', 'TK_EOF'];
	                }
	                var input_char = '';
	                var content = '';
	                var reg_match = new RegExp('</' + name + '\\s*>', 'igm');
	                reg_match.lastIndex = this.pos;
	                var reg_array = reg_match.exec(this.input);
	                var end_script = reg_array ? reg_array.index : this.input.length; //absolute end of script
	                if (this.pos < end_script) { //get everything in between the script tags
	                    content = this.input.substring(this.pos, end_script);
	                    this.pos = end_script;
	                }
	                return content;
	            };

	            this.record_tag = function(tag) { //function to record a tag and its parent in this.tags Object
	                if (this.tags[tag + 'count']) { //check for the existence of this tag type
	                    this.tags[tag + 'count']++;
	                    this.tags[tag + this.tags[tag + 'count']] = this.indent_level; //and record the present indent level
	                } else { //otherwise initialize this tag type
	                    this.tags[tag + 'count'] = 1;
	                    this.tags[tag + this.tags[tag + 'count']] = this.indent_level; //and record the present indent level
	                }
	                this.tags[tag + this.tags[tag + 'count'] + 'parent'] = this.tags.parent; //set the parent (i.e. in the case of a div this.tags.div1parent)
	                this.tags.parent = tag + this.tags[tag + 'count']; //and make this the current parent (i.e. in the case of a div 'div1')
	            };

	            this.retrieve_tag = function(tag) { //function to retrieve the opening tag to the corresponding closer
	                if (this.tags[tag + 'count']) { //if the openener is not in the Object we ignore it
	                    var temp_parent = this.tags.parent; //check to see if it's a closable tag.
	                    while (temp_parent) { //till we reach '' (the initial value);
	                        if (tag + this.tags[tag + 'count'] === temp_parent) { //if this is it use it
	                            break;
	                        }
	                        temp_parent = this.tags[temp_parent + 'parent']; //otherwise keep on climbing up the DOM Tree
	                    }
	                    if (temp_parent) { //if we caught something
	                        this.indent_level = this.tags[tag + this.tags[tag + 'count']]; //set the indent_level accordingly
	                        this.tags.parent = this.tags[temp_parent + 'parent']; //and set the current parent
	                    }
	                    delete this.tags[tag + this.tags[tag + 'count'] + 'parent']; //delete the closed tags parent reference...
	                    delete this.tags[tag + this.tags[tag + 'count']]; //...and the tag itself
	                    if (this.tags[tag + 'count'] === 1) {
	                        delete this.tags[tag + 'count'];
	                    } else {
	                        this.tags[tag + 'count']--;
	                    }
	                }
	            };

	            this.indent_to_tag = function(tag) {
	                // Match the indentation level to the last use of this tag, but don't remove it.
	                if (!this.tags[tag + 'count']) {
	                    return;
	                }
	                var temp_parent = this.tags.parent;
	                while (temp_parent) {
	                    if (tag + this.tags[tag + 'count'] === temp_parent) {
	                        break;
	                    }
	                    temp_parent = this.tags[temp_parent + 'parent'];
	                }
	                if (temp_parent) {
	                    this.indent_level = this.tags[tag + this.tags[tag + 'count']];
	                }
	            };

	            this.get_tag = function(peek) { //function to get a full tag and parse its type
	                var input_char = '',
	                    content = [],
	                    comment = '',
	                    space = false,
	                    first_attr = true,
	                    tag_start, tag_end,
	                    tag_start_char,
	                    orig_pos = this.pos,
	                    orig_line_char_count = this.line_char_count;

	                peek = peek !== undefined ? peek : false;

	                do {
	                    if (this.pos >= this.input.length) {
	                        if (peek) {
	                            this.pos = orig_pos;
	                            this.line_char_count = orig_line_char_count;
	                        }
	                        return content.length ? content.join('') : ['', 'TK_EOF'];
	                    }

	                    input_char = this.input.charAt(this.pos);
	                    this.pos++;

	                    if (this.Utils.in_array(input_char, this.Utils.whitespace)) { //don't want to insert unnecessary space
	                        space = true;
	                        continue;
	                    }

	                    if (input_char === "'" || input_char === '"') {
	                        input_char += this.get_unformatted(input_char);
	                        space = true;

	                    }

	                    if (input_char === '=') { //no space before =
	                        space = false;
	                    }

	                    if (content.length && content[content.length - 1] !== '=' && input_char !== '>' && space) {
	                        //no space after = or before >
	                        this.space_or_wrap(content);
	                        space = false;
	                        if (!first_attr && wrap_attributes === 'force' &&  input_char !== '/') {
	                            this.print_newline(true, content);
	                            this.print_indentation(content);
	                            for (var count = 0; count < wrap_attributes_indent_size; count++) {
	                                content.push(indent_character);
	                            }
	                        }
	                        for (var i = 0; i < content.length; i++) {
	                          if (content[i] === ' ') {
	                            first_attr = false;
	                            break;
	                          }
	                        }
	                    }

	                    if (indent_handlebars && tag_start_char === '<') {
	                        // When inside an angle-bracket tag, put spaces around
	                        // handlebars not inside of strings.
	                        if ((input_char + this.input.charAt(this.pos)) === '{{') {
	                            input_char += this.get_unformatted('}}');
	                            if (content.length && content[content.length - 1] !== ' ' && content[content.length - 1] !== '<') {
	                                input_char = ' ' + input_char;
	                            }
	                            space = true;
	                        }
	                    }

	                    if (input_char === '<' && !tag_start_char) {
	                        tag_start = this.pos - 1;
	                        tag_start_char = '<';
	                    }

	                    if (indent_handlebars && !tag_start_char) {
	                        if (content.length >= 2 && content[content.length - 1] === '{' && content[content.length - 2] === '{') {
	                            if (input_char === '#' || input_char === '/' || input_char === '!') {
	                                tag_start = this.pos - 3;
	                            } else {
	                                tag_start = this.pos - 2;
	                            }
	                            tag_start_char = '{';
	                        }
	                    }

	                    this.line_char_count++;
	                    content.push(input_char); //inserts character at-a-time (or string)

	                    if (content[1] && (content[1] === '!' || content[1] === '?' || content[1] === '%')) { //if we're in a comment, do something special
	                        // We treat all comments as literals, even more than preformatted tags
	                        // we just look for the appropriate close tag
	                        content = [this.get_comment(tag_start)];
	                        break;
	                    }

	                    if (indent_handlebars && content[1] && content[1] === '{' && content[2] && content[2] === '!') { //if we're in a comment, do something special
	                        // We treat all comments as literals, even more than preformatted tags
	                        // we just look for the appropriate close tag
	                        content = [this.get_comment(tag_start)];
	                        break;
	                    }

	                    if (indent_handlebars && tag_start_char === '{' && content.length > 2 && content[content.length - 2] === '}' && content[content.length - 1] === '}') {
	                        break;
	                    }
	                } while (input_char !== '>');

	                var tag_complete = content.join('');
	                var tag_index;
	                var tag_offset;

	                if (tag_complete.indexOf(' ') !== -1) { //if there's whitespace, thats where the tag name ends
	                    tag_index = tag_complete.indexOf(' ');
	                } else if (tag_complete.charAt(0) === '{') {
	                    tag_index = tag_complete.indexOf('}');
	                } else { //otherwise go with the tag ending
	                    tag_index = tag_complete.indexOf('>');
	                }
	                if (tag_complete.charAt(0) === '<' || !indent_handlebars) {
	                    tag_offset = 1;
	                } else {
	                    tag_offset = tag_complete.charAt(2) === '#' ? 3 : 2;
	                }
	                var tag_check = tag_complete.substring(tag_offset, tag_index).toLowerCase();
	                if (tag_complete.charAt(tag_complete.length - 2) === '/' ||
	                    this.Utils.in_array(tag_check, this.Utils.single_token)) { //if this tag name is a single tag type (either in the list or has a closing /)
	                    if (!peek) {
	                        this.tag_type = 'SINGLE';
	                    }
	                } else if (indent_handlebars && tag_complete.charAt(0) === '{' && tag_check === 'else') {
	                    if (!peek) {
	                        this.indent_to_tag('if');
	                        this.tag_type = 'HANDLEBARS_ELSE';
	                        this.indent_content = true;
	                        this.traverse_whitespace();
	                    }
	                } else if (this.is_unformatted(tag_check, unformatted)) { // do not reformat the "unformatted" tags
	                    comment = this.get_unformatted('</' + tag_check + '>', tag_complete); //...delegate to get_unformatted function
	                    content.push(comment);
	                    tag_end = this.pos - 1;
	                    this.tag_type = 'SINGLE';
	                } else if (tag_check === 'script' &&
	                    (tag_complete.search('type') === -1 ||
	                    (tag_complete.search('type') > -1 &&
	                    tag_complete.search(/\b(text|application)\/(x-)?(javascript|ecmascript|jscript|livescript)/) > -1))) {
	                    if (!peek) {
	                        this.record_tag(tag_check);
	                        this.tag_type = 'SCRIPT';
	                    }
	                } else if (tag_check === 'style' &&
	                    (tag_complete.search('type') === -1 ||
	                    (tag_complete.search('type') > -1 && tag_complete.search('text/css') > -1))) {
	                    if (!peek) {
	                        this.record_tag(tag_check);
	                        this.tag_type = 'STYLE';
	                    }
	                } else if (tag_check.charAt(0) === '!') { //peek for <! comment
	                    // for comments content is already correct.
	                    if (!peek) {
	                        this.tag_type = 'SINGLE';
	                        this.traverse_whitespace();
	                    }
	                } else if (!peek) {
	                    if (tag_check.charAt(0) === '/') { //this tag is a double tag so check for tag-ending
	                        this.retrieve_tag(tag_check.substring(1)); //remove it and all ancestors
	                        this.tag_type = 'END';
	                    } else { //otherwise it's a start-tag
	                        this.record_tag(tag_check); //push it on the tag stack
	                        if (tag_check.toLowerCase() !== 'html') {
	                            this.indent_content = true;
	                        }
	                        this.tag_type = 'START';
	                    }

	                    // Allow preserving of newlines after a start or end tag
	                    if (this.traverse_whitespace()) {
	                        this.space_or_wrap(content);
	                    }

	                    if (this.Utils.in_array(tag_check, this.Utils.extra_liners)) { //check if this double needs an extra line
	                        this.print_newline(false, this.output);
	                        if (this.output.length && this.output[this.output.length - 2] !== '\n') {
	                            this.print_newline(true, this.output);
	                        }
	                    }
	                }

	                if (peek) {
	                    this.pos = orig_pos;
	                    this.line_char_count = orig_line_char_count;
	                }

	                return content.join(''); //returns fully formatted tag
	            };

	            this.get_comment = function(start_pos) { //function to return comment content in its entirety
	                // this is will have very poor perf, but will work for now.
	                var comment = '',
	                    delimiter = '>',
	                    matched = false;

	                this.pos = start_pos;
	                input_char = this.input.charAt(this.pos);
	                this.pos++;

	                while (this.pos <= this.input.length) {
	                    comment += input_char;

	                    // only need to check for the delimiter if the last chars match
	                    if (comment.charAt(comment.length - 1) === delimiter.charAt(delimiter.length - 1) &&
	                        comment.indexOf(delimiter) !== -1) {
	                        break;
	                    }

	                    // only need to search for custom delimiter for the first few characters
	                    if (!matched && comment.length < 10) {
	                        if (comment.indexOf('<![if') === 0) { //peek for <![if conditional comment
	                            delimiter = '<![endif]>';
	                            matched = true;
	                        } else if (comment.indexOf('<![cdata[') === 0) { //if it's a <[cdata[ comment...
	                            delimiter = ']]>';
	                            matched = true;
	                        } else if (comment.indexOf('<![') === 0) { // some other ![ comment? ...
	                            delimiter = ']>';
	                            matched = true;
	                        } else if (comment.indexOf('<!--') === 0) { // <!-- comment ...
	                            delimiter = '-->';
	                            matched = true;
	                        } else if (comment.indexOf('{{!') === 0) { // {{! handlebars comment
	                            delimiter = '}}';
	                            matched = true;
	                        } else if (comment.indexOf('<?') === 0) { // {{! handlebars comment
	                            delimiter = '?>';
	                            matched = true;
	                        } else if (comment.indexOf('<%') === 0) { // {{! handlebars comment
	                            delimiter = '%>';
	                            matched = true;
	                        }
	                    }

	                    input_char = this.input.charAt(this.pos);
	                    this.pos++;
	                }

	                return comment;
	            };

	            this.get_unformatted = function(delimiter, orig_tag) { //function to return unformatted content in its entirety

	                if (orig_tag && orig_tag.toLowerCase().indexOf(delimiter) !== -1) {
	                    return '';
	                }
	                var input_char = '';
	                var content = '';
	                var min_index = 0;
	                var space = true;
	                do {

	                    if (this.pos >= this.input.length) {
	                        return content;
	                    }

	                    input_char = this.input.charAt(this.pos);
	                    this.pos++;

	                    if (this.Utils.in_array(input_char, this.Utils.whitespace)) {
	                        if (!space) {
	                            this.line_char_count--;
	                            continue;
	                        }
	                        if (input_char === '\n' || input_char === '\r') {
	                            content += '\n';
	                            /*  Don't change tab indention for unformatted blocks.  If using code for html editing, this will greatly affect <pre> tags if they are specified in the 'unformatted array'
	                for (var i=0; i<this.indent_level; i++) {
	                  content += this.indent_string;
	                }
	                space = false; //...and make sure other indentation is erased
	                */
	                            this.line_char_count = 0;
	                            continue;
	                        }
	                    }
	                    content += input_char;
	                    this.line_char_count++;
	                    space = true;

	                    if (indent_handlebars && input_char === '{' && content.length && content.charAt(content.length - 2) === '{') {
	                        // Handlebars expressions in strings should also be unformatted.
	                        content += this.get_unformatted('}}');
	                        // These expressions are opaque.  Ignore delimiters found in them.
	                        min_index = content.length;
	                    }
	                } while (content.toLowerCase().indexOf(delimiter, min_index) === -1);
	                return content;
	            };

	            this.get_token = function() { //initial handler for token-retrieval
	                var token;

	                if (this.last_token === 'TK_TAG_SCRIPT' || this.last_token === 'TK_TAG_STYLE') { //check if we need to format javascript
	                    var type = this.last_token.substr(7);
	                    token = this.get_contents_to(type);
	                    if (typeof token !== 'string') {
	                        return token;
	                    }
	                    return [token, 'TK_' + type];
	                }
	                if (this.current_mode === 'CONTENT') {
	                    token = this.get_content();
	                    if (typeof token !== 'string') {
	                        return token;
	                    } else {
	                        return [token, 'TK_CONTENT'];
	                    }
	                }

	                if (this.current_mode === 'TAG') {
	                    token = this.get_tag();
	                    if (typeof token !== 'string') {
	                        return token;
	                    } else {
	                        var tag_name_type = 'TK_TAG_' + this.tag_type;
	                        return [token, tag_name_type];
	                    }
	                }
	            };

	            this.get_full_indent = function(level) {
	                level = this.indent_level + level || 0;
	                if (level < 1) {
	                    return '';
	                }

	                return Array(level + 1).join(this.indent_string);
	            };

	            this.is_unformatted = function(tag_check, unformatted) {
	                //is this an HTML5 block-level link?
	                if (!this.Utils.in_array(tag_check, unformatted)) {
	                    return false;
	                }

	                if (tag_check.toLowerCase() !== 'a' || !this.Utils.in_array('a', unformatted)) {
	                    return true;
	                }

	                //at this point we have an  tag; is its first child something we want to remain
	                //unformatted?
	                var next_tag = this.get_tag(true /* peek. */ );

	                // test next_tag to see if it is just html tag (no external content)
	                var tag = (next_tag || "").match(/^\s*<\s*\/?([a-z]*)\s*[^>]*>\s*$/);

	                // if next_tag comes back but is not an isolated tag, then
	                // let's treat the 'a' tag as having content
	                // and respect the unformatted option
	                if (!tag || this.Utils.in_array(tag, unformatted)) {
	                    return true;
	                } else {
	                    return false;
	                }
	            };

	            this.printer = function(js_source, indent_character, indent_size, wrap_line_length, brace_style) { //handles input/output and some other printing functions

	                this.input = js_source || ''; //gets the input for the Parser

	                // HACK: newline parsing inconsistent. This brute force normalizes the input.
	                this.input = this.input.replace(/\r\n|[\r\u2028\u2029]/g, '\n')

	                this.output = [];
	                this.indent_character = indent_character;
	                this.indent_string = '';
	                this.indent_size = indent_size;
	                this.brace_style = brace_style;
	                this.indent_level = 0;
	                this.wrap_line_length = wrap_line_length;
	                this.line_char_count = 0; //count to see if wrap_line_length was exceeded

	                for (var i = 0; i < this.indent_size; i++) {
	                    this.indent_string += this.indent_character;
	                }

	                this.print_newline = function(force, arr) {
	                    this.line_char_count = 0;
	                    if (!arr || !arr.length) {
	                        return;
	                    }
	                    if (force || (arr[arr.length - 1] !== '\n')) { //we might want the extra line
	                        if ((arr[arr.length - 1] !== '\n')) {
	                            arr[arr.length - 1] = rtrim(arr[arr.length - 1]);
	                        }
	                        arr.push('\n');
	                    }
	                };

	                this.print_indentation = function(arr) {
	                    for (var i = 0; i < this.indent_level; i++) {
	                        arr.push(this.indent_string);
	                        this.line_char_count += this.indent_string.length;
	                    }
	                };

	                this.print_token = function(text) {
	                    // Avoid printing initial whitespace.
	                    if (this.is_whitespace(text) && !this.output.length) {
	                        return;
	                    }
	                    if (text || text !== '') {
	                        if (this.output.length && this.output[this.output.length - 1] === '\n') {
	                            this.print_indentation(this.output);
	                            text = ltrim(text);
	                        }
	                    }
	                    this.print_token_raw(text);
	                };

	                this.print_token_raw = function(text) {
	                    // If we are going to print newlines, truncate trailing
	                    // whitespace, as the newlines will represent the space.
	                    if (this.newlines > 0) {
	                        text = rtrim(text);
	                    }

	                    if (text && text !== '') {
	                        if (text.length > 1 && text.charAt(text.length - 1) === '\n') {
	                            // unformatted tags can grab newlines as their last character
	                            this.output.push(text.slice(0, -1));
	                            this.print_newline(false, this.output);
	                        } else {
	                            this.output.push(text);
	                        }
	                    }

	                    for (var n = 0; n < this.newlines; n++) {
	                        this.print_newline(n > 0, this.output);
	                    }
	                    this.newlines = 0;
	                };

	                this.indent = function() {
	                    this.indent_level++;
	                };

	                this.unindent = function() {
	                    if (this.indent_level > 0) {
	                        this.indent_level--;
	                    }
	                };
	            };
	            return this;
	        }

	        /*_____________________--------------------_____________________*/

	        multi_parser = new Parser(); //wrapping functions Parser
	        multi_parser.printer(html_source, indent_character, indent_size, wrap_line_length, brace_style); //initialize starting values

	        while (true) {
	            var t = multi_parser.get_token();
	            multi_parser.token_text = t[0];
	            multi_parser.token_type = t[1];

	            if (multi_parser.token_type === 'TK_EOF') {
	                break;
	            }

	            switch (multi_parser.token_type) {
	                case 'TK_TAG_START':
	                    multi_parser.print_newline(false, multi_parser.output);
	                    multi_parser.print_token(multi_parser.token_text);
	                    if (multi_parser.indent_content) {
	                        multi_parser.indent();
	                        multi_parser.indent_content = false;
	                    }
	                    multi_parser.current_mode = 'CONTENT';
	                    break;
	                case 'TK_TAG_STYLE':
	                case 'TK_TAG_SCRIPT':
	                    multi_parser.print_newline(false, multi_parser.output);
	                    multi_parser.print_token(multi_parser.token_text);
	                    multi_parser.current_mode = 'CONTENT';
	                    break;
	                case 'TK_TAG_END':
	                    //Print new line only if the tag has no content and has child
	                    if (multi_parser.last_token === 'TK_CONTENT' && multi_parser.last_text === '') {
	                        var tag_name = multi_parser.token_text.match(/\w+/)[0];
	                        var tag_extracted_from_last_output = null;
	                        if (multi_parser.output.length) {
	                            tag_extracted_from_last_output = multi_parser.output[multi_parser.output.length - 1].match(/(?:<|{{#)\s*(\w+)/);
	                        }
	                        if (tag_extracted_from_last_output === null ||
	                            (tag_extracted_from_last_output[1] !== tag_name && !multi_parser.Utils.in_array(tag_extracted_from_last_output[1], unformatted))) {
	                            multi_parser.print_newline(false, multi_parser.output);
	                        }
	                    }
	                    multi_parser.print_token(multi_parser.token_text);
	                    multi_parser.current_mode = 'CONTENT';
	                    break;
	                case 'TK_TAG_SINGLE':
	                    // Don't add a newline before elements that should remain unformatted.
	                    var tag_check = multi_parser.token_text.match(/^\s*<([a-z-]+)/i);
	                    if (!tag_check || !multi_parser.Utils.in_array(tag_check[1], unformatted)) {
	                        multi_parser.print_newline(false, multi_parser.output);
	                    }
	                    multi_parser.print_token(multi_parser.token_text);
	                    multi_parser.current_mode = 'CONTENT';
	                    break;
	                case 'TK_TAG_HANDLEBARS_ELSE':
	                    multi_parser.print_token(multi_parser.token_text);
	                    if (multi_parser.indent_content) {
	                        multi_parser.indent();
	                        multi_parser.indent_content = false;
	                    }
	                    multi_parser.current_mode = 'CONTENT';
	                    break;
	                case 'TK_TAG_HANDLEBARS_COMMENT':
	                    multi_parser.print_token(multi_parser.token_text);
	                    multi_parser.current_mode = 'TAG';
	                    break;
	                case 'TK_CONTENT':
	                    multi_parser.print_token(multi_parser.token_text);
	                    multi_parser.current_mode = 'TAG';
	                    break;
	                case 'TK_STYLE':
	                case 'TK_SCRIPT':
	                    if (multi_parser.token_text !== '') {
	                        multi_parser.print_newline(false, multi_parser.output);
	                        var text = multi_parser.token_text,
	                            _beautifier,
	                            script_indent_level = 1;
	                        if (multi_parser.token_type === 'TK_SCRIPT') {
	                            _beautifier = typeof js_beautify === 'function' && js_beautify;
	                        } else if (multi_parser.token_type === 'TK_STYLE') {
	                            _beautifier = typeof css_beautify === 'function' && css_beautify;
	                        }

	                        if (options.indent_scripts === "keep") {
	                            script_indent_level = 0;
	                        } else if (options.indent_scripts === "separate") {
	                            script_indent_level = -multi_parser.indent_level;
	                        }

	                        var indentation = multi_parser.get_full_indent(script_indent_level);
	                        if (_beautifier) {

	                            // call the Beautifier if avaliable
	                            var Child_options = function() {
	                                this.eol = '\n';
	                            };
	                            Child_options.prototype = options;
	                            var child_options = new Child_options();
	                            text = _beautifier(text.replace(/^\s*/, indentation), child_options);
	                        } else {
	                            // simply indent the string otherwise
	                            var white = text.match(/^\s*/)[0];
	                            var _level = white.match(/[^\n\r]*$/)[0].split(multi_parser.indent_string).length - 1;
	                            var reindent = multi_parser.get_full_indent(script_indent_level - _level);
	                            text = text.replace(/^\s*/, indentation)
	                                .replace(/\r\n|\r|\n/g, '\n' + reindent)
	                                .replace(/\s+$/, '');
	                        }
	                        if (text) {
	                            multi_parser.print_token_raw(text);
	                            multi_parser.print_newline(true, multi_parser.output);
	                        }
	                    }
	                    multi_parser.current_mode = 'TAG';
	                    break;
	                default:
	                    // We should not be getting here but we don't want to drop input on the floor
	                    // Just output the text and move on
	                    if (multi_parser.token_text !== '') {
	                        multi_parser.print_token(multi_parser.token_text);
	                    }
	                    break;
	            }
	            multi_parser.last_token = multi_parser.token_type;
	            multi_parser.last_text = multi_parser.token_text;
	        }
	        var sweet_code = multi_parser.output.join('').replace(/[\r\n\t ]+$/, '');

	        // establish end_with_newline
	        if (end_with_newline) {
	            sweet_code += '\n';
	        }

	        if (eol != '\n') {
	            sweet_code = sweet_code.replace(/[\n]/g, eol);
	        }

	        return sweet_code;
	    }

	    if (true) {
	        // Add support for AMD ( https://github.com/amdjs/amdjs-api/wiki/AMD#defineamd-property- )
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, __webpack_require__(34), __webpack_require__(35)], __WEBPACK_AMD_DEFINE_RESULT__ = function(requireamd) {
	            var js_beautify =  __webpack_require__(34);
	            var css_beautify =  __webpack_require__(35);

	            return {
	              html_beautify: function(html_source, options) {
	                return style_html(html_source, options, js_beautify.js_beautify, css_beautify.css_beautify);
	              }
	            };
	        }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	    } else if (typeof exports !== "undefined") {
	        // Add support for CommonJS. Just put this file somewhere on your require.paths
	        // and you will be able to `var html_beautify = require("beautify").html_beautify`.
	        var js_beautify = require('./beautify.js');
	        var css_beautify = require('./beautify-css.js');

	        exports.html_beautify = function(html_source, options) {
	            return style_html(html_source, options, js_beautify.js_beautify, css_beautify.css_beautify);
	        };
	    } else if (typeof window !== "undefined") {
	        // If we're running a web page and don't have either of the above, add our one global
	        window.html_beautify = function(html_source, options) {
	            return style_html(html_source, options, window.js_beautify, window.css_beautify);
	        };
	    } else if (typeof global !== "undefined") {
	        // If we don't even have window, try global.
	        global.html_beautify = function(html_source, options) {
	            return style_html(html_source, options, global.js_beautify, global.css_beautify);
	        };
	    }

	}());


/***/ },
/* 37 */
/***/ function(module, exports) {

	'use strict';
	module.exports = function generate_validate(it) {
	  var out = '';
	  if (it.isTop) {
	    var $top = it.isTop,
	      $lvl = it.level = 0,
	      $dataLvl = it.dataLevel = 0,
	      $data = 'data';
	    it.rootId = it.resolve.fullPath(it.root.schema.id);
	    it.baseId = it.baseId || it.rootId;
	    delete it.isTop;
	    out += ' validate = function (data, dataPath) { \'use strict\'; var vErrors = null; ';
	    out += ' var errors = 0;     ';
	  } else {
	    var $lvl = it.level,
	      $dataLvl = it.dataLevel,
	      $data = 'data' + ($dataLvl || '');
	    if (it.schema.id) it.baseId = it.resolve.url(it.baseId, it.schema.id);
	    out += ' var errs_' + ($lvl) + ' = errors;';
	  }
	  var $valid = 'valid' + $lvl,
	    $breakOnError = !it.opts.allErrors,
	    $closingBraces1 = '',
	    $closingBraces2 = '';
	  var $typeSchema = it.schema.type;
	  if (it.RULES.macros) {
	    it.expandMacros();
	  }
	  var arr1 = it.RULES;
	  if (arr1) {
	    var $rulesGroup, i1 = -1,
	      l1 = arr1.length - 1;
	    while (i1 < l1) {
	      $rulesGroup = arr1[i1 += 1];
	      if ($shouldUseGroup($rulesGroup)) {
	        if ($rulesGroup.type) {
	          out += ' if (' + (it.util.checkDataType($rulesGroup.type, $data)) + ') { ';
	        }
	        var arr2 = $rulesGroup.rules;
	        if (arr2) {
	          var $rule, i2 = -1,
	            l2 = arr2.length - 1;
	          while (i2 < l2) {
	            $rule = arr2[i2 += 1];
	            if ($shouldUseRule($rule)) {
	              if ($rule.custom) {
	                var $schema = it.schema[$rule.keyword],
	                  $ruleValidate = it.useCustomRule($rule, $schema, it.schema, it),
	                  $ruleErrs = $ruleValidate.code + '.errors',
	                  $schemaPath = it.schemaPath + '.' + $rule.keyword,
	                  $errs = 'errs' + $lvl,
	                  $i = 'i' + $lvl,
	                  $ruleErr = 'ruleErr' + $lvl,
	                  $rDef = $rule.definition,
	                  $inline = $rDef.inline;
	                if (!$inline) {
	                  out += '' + ($ruleErrs) + ' = null;';
	                }
	                out += 'var ' + ($errs) + ' = errors;';
	                if ($inline && $rDef.statements) {
	                  out += ' ' + ($ruleValidate.validate);
	                }
	                out += 'if (! ';
	                if ($inline) {
	                  if ($rDef.statements) {
	                    out += ' valid' + ($lvl) + ' ';
	                  } else {
	                    out += ' (' + ($ruleValidate.validate) + ') ';
	                  }
	                } else {
	                  out += ' ' + ($ruleValidate.code) + '.call(self ';
	                  if ($rDef.compile) {
	                    out += ' , ' + ($data) + ' ';
	                  } else {
	                    out += ' , validate.schema' + ($schemaPath) + ' , ' + ($data) + ' ';
	                    if ($ruleValidate.validate.length > 2) {
	                      out += ' , validate.schema' + (it.schemaPath) + ' ';
	                    }
	                  }
	                  out += ' ) ';
	                }
	                out += ') { ';
	                if ($inline) {
	                  if ($rDef.errors) {
	                    out += '  for (var ' + ($i) + '=' + ($errs) + '; ' + ($i) + '<errors; ' + ($i) + '++) { var ' + ($ruleErr) + ' = vErrors[' + ($i) + ']; if (' + ($ruleErr) + '.dataPath === undefined) { ' + ($ruleErr) + '.dataPath = (dataPath || \'\') + ' + (it.errorPath) + '; } ';
	                    if (it.opts.verbose) {
	                      out += ' ' + ($ruleErr) + '.schema = validate.schema' + ($schemaPath) + '; ' + ($ruleErr) + '.data = ' + ($data) + '; ';
	                    }
	                    out += ' } ';
	                  } else {
	                    out += ' if (' + ($errs) + ' == errors) {  ';
	                    if (!it.compositeRule && $breakOnError) {
	                      out += ' validate.errors = [ { keyword: \'' + ('custom') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: "' + ($schemaPath) + '" , params: { keyword: \'$rule.keyword\' } ';
	                      if (it.opts.messages !== false) {
	                        out += ' , message: \'should pass "' + ($rule.keyword) + '" keyword validation\' ';
	                      }
	                      if (it.opts.verbose) {
	                        out += ' , schema: validate.schema' + ($schemaPath) + ' , data: ' + ($data) + ' ';
	                      }
	                      out += ' }]; return false; ';
	                    } else {
	                      out += '  var err =   { keyword: \'' + ('custom') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: "' + ($schemaPath) + '" , params: { keyword: \'$rule.keyword\' } ';
	                      if (it.opts.messages !== false) {
	                        out += ' , message: \'should pass "' + ($rule.keyword) + '" keyword validation\' ';
	                      }
	                      if (it.opts.verbose) {
	                        out += ' , schema: validate.schema' + ($schemaPath) + ' , data: ' + ($data) + ' ';
	                      }
	                      out += ' }; if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
	                    }
	                    out += ' } else {  for (var ' + ($i) + '=' + ($errs) + '; ' + ($i) + '<errors; ' + ($i) + '++) { var ' + ($ruleErr) + ' = vErrors[' + ($i) + ']; if (' + ($ruleErr) + '.dataPath === undefined) { ' + ($ruleErr) + '.dataPath = (dataPath || \'\') + ' + (it.errorPath) + '; } ';
	                    if (it.opts.verbose) {
	                      out += ' ' + ($ruleErr) + '.schema = validate.schema' + ($schemaPath) + '; ' + ($ruleErr) + '.data = ' + ($data) + '; ';
	                    }
	                    out += ' } } ';
	                  }
	                } else {
	                  out += ' if (Array.isArray(' + ($ruleErrs) + ')) { if (vErrors === null) vErrors = ' + ($ruleErrs) + '; else vErrors.concat(' + ($ruleErrs) + '); errors = vErrors.length;  for (var ' + ($i) + '=' + ($errs) + '; ' + ($i) + '<errors; ' + ($i) + '++) { var ' + ($ruleErr) + ' = vErrors[' + ($i) + '];  ' + ($ruleErr) + '.dataPath = (dataPath || \'\') + ' + (it.errorPath) + ';  ';
	                  if (it.opts.verbose) {
	                    out += ' ' + ($ruleErr) + '.schema = validate.schema' + ($schemaPath) + '; ' + ($ruleErr) + '.data = ' + ($data) + '; ';
	                  }
	                  out += ' } } else {  ';
	                  if (!it.compositeRule && $breakOnError) {
	                    out += ' validate.errors = [ { keyword: \'' + ('custom') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: "' + ($schemaPath) + '" , params: { keyword: \'$rule.keyword\' } ';
	                    if (it.opts.messages !== false) {
	                      out += ' , message: \'should pass "' + ($rule.keyword) + '" keyword validation\' ';
	                    }
	                    if (it.opts.verbose) {
	                      out += ' , schema: validate.schema' + ($schemaPath) + ' , data: ' + ($data) + ' ';
	                    }
	                    out += ' }]; return false; ';
	                  } else {
	                    out += '  var err =   { keyword: \'' + ('custom') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: "' + ($schemaPath) + '" , params: { keyword: \'$rule.keyword\' } ';
	                    if (it.opts.messages !== false) {
	                      out += ' , message: \'should pass "' + ($rule.keyword) + '" keyword validation\' ';
	                    }
	                    if (it.opts.verbose) {
	                      out += ' , schema: validate.schema' + ($schemaPath) + ' , data: ' + ($data) + ' ';
	                    }
	                    out += ' }; if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
	                  }
	                  out += ' } ';
	                }
	                out += '} ';
	                if ($breakOnError) {
	                  out += ' else { ';
	                }
	              } else {
	                out += ' ' + ($rule.code(it)) + ' ';
	              }
	              if ($breakOnError) {
	                $closingBraces1 += '}';
	              }
	            }
	          }
	        }
	        if ($breakOnError) {
	          out += ' ' + ($closingBraces1) + ' ';
	          $closingBraces1 = '';
	        }
	        if ($rulesGroup.type) {
	          out += ' } ';
	          if ($typeSchema && $typeSchema === $rulesGroup.type) {
	            var $typeChecked = true;
	            out += ' else {  ';
	            if (!it.compositeRule && $breakOnError) {
	              out += ' validate.errors = [ { keyword: \'' + ('type') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: "' + ($schemaPath) + '" , params: { type: \'';
	              if ($isArray) {
	                out += '' + ($typeSchema.join(","));
	              } else {
	                out += '' + ($typeSchema);
	              }
	              out += '\' } ';
	              if (it.opts.messages !== false) {
	                out += ' , message: \'should be ';
	                if ($isArray) {
	                  out += '' + ($typeSchema.join(","));
	                } else {
	                  out += '' + ($typeSchema);
	                }
	                out += '\' ';
	              }
	              if (it.opts.verbose) {
	                out += ' , schema: ';
	                if ($isArray) {
	                  out += '[\'' + ($typeSchema.join("','")) + '\']';
	                } else {
	                  out += '\'' + ($typeSchema) + '\'';
	                }
	                out += ' , data: ' + ($data) + ' ';
	              }
	              out += ' }]; return false; ';
	            } else {
	              out += '  var err =   { keyword: \'' + ('type') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: "' + ($schemaPath) + '" , params: { type: \'';
	              if ($isArray) {
	                out += '' + ($typeSchema.join(","));
	              } else {
	                out += '' + ($typeSchema);
	              }
	              out += '\' } ';
	              if (it.opts.messages !== false) {
	                out += ' , message: \'should be ';
	                if ($isArray) {
	                  out += '' + ($typeSchema.join(","));
	                } else {
	                  out += '' + ($typeSchema);
	                }
	                out += '\' ';
	              }
	              if (it.opts.verbose) {
	                out += ' , schema: ';
	                if ($isArray) {
	                  out += '[\'' + ($typeSchema.join("','")) + '\']';
	                } else {
	                  out += '\'' + ($typeSchema) + '\'';
	                }
	                out += ' , data: ' + ($data) + ' ';
	              }
	              out += ' }; if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
	            }
	            out += ' } ';
	          }
	        }
	        if ($breakOnError) {
	          out += ' if (errors === ';
	          if ($top) {
	            out += '0';
	          } else {
	            out += 'errs_' + ($lvl);
	          }
	          out += ') { ';
	          $closingBraces2 += '}';
	        }
	      }
	    }
	  }
	  if ($typeSchema && !$typeChecked) {
	    var $schemaPath = it.schemaPath + '.type',
	      $isArray = Array.isArray($typeSchema),
	      $method = $isArray ? 'checkDataTypes' : 'checkDataType';
	    out += ' if (' + (it.util[$method]($typeSchema, $data, true)) + ') {  ';
	    if (!it.compositeRule && $breakOnError) {
	      out += ' validate.errors = [ { keyword: \'' + ('type') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: "' + ($schemaPath) + '" , params: { type: \'';
	      if ($isArray) {
	        out += '' + ($typeSchema.join(","));
	      } else {
	        out += '' + ($typeSchema);
	      }
	      out += '\' } ';
	      if (it.opts.messages !== false) {
	        out += ' , message: \'should be ';
	        if ($isArray) {
	          out += '' + ($typeSchema.join(","));
	        } else {
	          out += '' + ($typeSchema);
	        }
	        out += '\' ';
	      }
	      if (it.opts.verbose) {
	        out += ' , schema: ';
	        if ($isArray) {
	          out += '[\'' + ($typeSchema.join("','")) + '\']';
	        } else {
	          out += '\'' + ($typeSchema) + '\'';
	        }
	        out += ' , data: ' + ($data) + ' ';
	      }
	      out += ' }]; return false; ';
	    } else {
	      out += '  var err =   { keyword: \'' + ('type') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: "' + ($schemaPath) + '" , params: { type: \'';
	      if ($isArray) {
	        out += '' + ($typeSchema.join(","));
	      } else {
	        out += '' + ($typeSchema);
	      }
	      out += '\' } ';
	      if (it.opts.messages !== false) {
	        out += ' , message: \'should be ';
	        if ($isArray) {
	          out += '' + ($typeSchema.join(","));
	        } else {
	          out += '' + ($typeSchema);
	        }
	        out += '\' ';
	      }
	      if (it.opts.verbose) {
	        out += ' , schema: ';
	        if ($isArray) {
	          out += '[\'' + ($typeSchema.join("','")) + '\']';
	        } else {
	          out += '\'' + ($typeSchema) + '\'';
	        }
	        out += ' , data: ' + ($data) + ' ';
	      }
	      out += ' }; if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
	    }
	    out += ' }';
	  }
	  if ($breakOnError) {
	    out += ' ' + ($closingBraces2) + ' ';
	  }
	  if ($top) {
	    out += ' validate.errors = vErrors; ';
	    out += ' return errors === 0;       ';
	    out += ' }';
	  } else {
	    out += ' var ' + ($valid) + ' = errors === errs_' + ($lvl) + ';';
	  }
	  out = it.util.cleanUpCode(out);
	  if ($top && $breakOnError) {
	    out = it.util.cleanUpVarErrors(out);
	  }

	  function $shouldUseGroup($rulesGroup) {
	    for (var i = 0; i < $rulesGroup.rules.length; i++)
	      if ($shouldUseRule($rulesGroup.rules[i])) return true;
	  }

	  function $shouldUseRule($rule) {
	    return it.schema[$rule.keyword] !== undefined || ($rule.keyword == 'properties' && (it.schema.additionalProperties === false || typeof it.schema.additionalProperties == 'object' || (it.schema.patternProperties && Object.keys(it.schema.patternProperties).length)));
	  }
	  return out;
	}


/***/ },
/* 38 */
/***/ function(module, exports) {

	'use strict';


	var Cache = module.exports = function Cache() {
	    this._cache = {};
	};


	Cache.prototype.put = function Cache_put(key, value) {
	    this._cache[key] = value;
	};


	Cache.prototype.get = function Cache_get(key) {
	    return this._cache[key];
	};


	Cache.prototype.del = function Cache_del(key) {
	    delete this._cache[key];
	};


/***/ },
/* 39 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var util = __webpack_require__(26);

	var DATE = /^\d\d\d\d-(\d\d)-(\d\d)$/;
	var DAYS = [0,31,29,31,30,31,30,31,31,30,31,30,31];
	var TIME = /^(\d\d):(\d\d):(\d\d)(?:\.\d+)?(?:z|[+-]\d\d:\d\d)$/;
	var HOSTNAME = /^[a-z](?:(?:[-0-9a-z]{0,61})?[0-9a-z])?(\.[a-z](?:(?:[-0-9a-z]{0,61})?[0-9a-z])?)*$/i;
	var URI = /^(?:[a-z][a-z0-9+\-.]*:)?(?:\/?\/(?:(?:[a-z0-9\-._~!$&'()*+,;=:]|%[0-9a-f]{2})*@)?(?:\[(?:(?:(?:(?:[0-9a-f]{1,4}:){6}|::(?:[0-9a-f]{1,4}:){5}|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::)(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\d|[01]?\d\d?)\.){3}(?:25[0-5]|2[0-4]\d|[01]?\d\d?))|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|[Vv][0-9a-f]+\.[a-z0-9\-._~!$&'()*+,;=:]+)\]|(?:(?:25[0-5]|2[0-4]\d|[01]?\d\d?)\.){3}(?:25[0-5]|2[0-4]\d|[01]?\d\d?)|(?:[a-z0-9\-._~!$&'()*+,;=]|%[0-9a-f]{2})*)(?::\d*)?(?:\/(?:[a-z0-9\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*|\/(?:(?:[a-z0-9\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\/(?:[a-z0-9\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)?|(?:[a-z0-9\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\/(?:[a-z0-9\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)(?:\?(?:[a-z0-9\-._~!$&'()*+,;=:@\/?]|%[0-9a-f]{2})*)?(?:\#(?:[a-z0-9\-._~!$&'()*+,;=:@\/?]|%[0-9a-f]{2})*)?$/i;


	module.exports = formats;

	function formats(mode) {
	  mode = mode == 'full' ? 'full' : 'fast';
	  return util.copy(formats[mode]);
	}


	formats.fast = {
	  // date: http://tools.ietf.org/html/rfc3339#section-5.6
	  date: /^\d\d\d\d-[0-1]\d-[0-3]\d$/,
	  // date-time: http://tools.ietf.org/html/rfc3339#section-5.6
	  'date-time': /^\d\d\d\d-[0-1]\d-[0-3]\d[t ][0-2]\d:[0-5]\d:[0-5]\d(?:\.\d+)?(?:z|[+-]\d\d:\d\d)$/i,
	  // uri: https://github.com/mafintosh/is-my-json-valid/blob/master/formats.js
	  uri: /^(?:[a-z][a-z0-9+-.]*)?(?:\:|\/)\/?[^\s]*$/i,
	  // email (sources from jsen validator):
	  // http://stackoverflow.com/questions/201323/using-a-regular-expression-to-validate-an-email-address#answer-8829363
	  // http://www.w3.org/TR/html5/forms.html#valid-e-mail-address (search for 'willful violation')
	  email: /^[a-z0-9.!#$%&'*+\/=?^_`{|}~-]+@[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\.[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?)*$/i,
	  hostname: HOSTNAME,
	  // optimized https://www.safaribooksonline.com/library/view/regular-expressions-cookbook/9780596802837/ch07s16.html
	  ipv4: /^(?:(?:25[0-5]|2[0-4]\d|[01]?\d\d?)\.){3}(?:25[0-5]|2[0-4]\d|[01]?\d\d?)$/,
	  // optimized http://stackoverflow.com/questions/53497/regular-expression-that-matches-valid-ipv6-addresses
	  ipv6: /^\s*(?:(?:(?:[0-9a-f]{1,4}:){7}(?:[0-9a-f]{1,4}|:))|(?:(?:[0-9a-f]{1,4}:){6}(?::[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){5}(?:(?:(?::[0-9a-f]{1,4}){1,2})|:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){4}(?:(?:(?::[0-9a-f]{1,4}){1,3})|(?:(?::[0-9a-f]{1,4})?:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){3}(?:(?:(?::[0-9a-f]{1,4}){1,4})|(?:(?::[0-9a-f]{1,4}){0,2}:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){2}(?:(?:(?::[0-9a-f]{1,4}){1,5})|(?:(?::[0-9a-f]{1,4}){0,3}:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){1}(?:(?:(?::[0-9a-f]{1,4}){1,6})|(?:(?::[0-9a-f]{1,4}){0,4}:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(?::(?:(?:(?::[0-9a-f]{1,4}){1,7})|(?:(?::[0-9a-f]{1,4}){0,5}:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:)))(?:%.+)?\s*$/i,
	  regex: regex
	};


	formats.full = {
	  date: date,
	  'date-time': date_time,
	  uri: uri,
	  email: /^[a-z0-9!#$%&'*+\/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&''*+\/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/i,
	  hostname: hostname,
	  ipv4: /^(?:(?:25[0-5]|2[0-4]\d|[01]?\d\d?)\.){3}(?:25[0-5]|2[0-4]\d|[01]?\d\d?)$/,
	  ipv6: /^\s*(?:(?:(?:[0-9a-f]{1,4}:){7}(?:[0-9a-f]{1,4}|:))|(?:(?:[0-9a-f]{1,4}:){6}(?::[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){5}(?:(?:(?::[0-9a-f]{1,4}){1,2})|:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){4}(?:(?:(?::[0-9a-f]{1,4}){1,3})|(?:(?::[0-9a-f]{1,4})?:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){3}(?:(?:(?::[0-9a-f]{1,4}){1,4})|(?:(?::[0-9a-f]{1,4}){0,2}:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){2}(?:(?:(?::[0-9a-f]{1,4}){1,5})|(?:(?::[0-9a-f]{1,4}){0,3}:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){1}(?:(?:(?::[0-9a-f]{1,4}){1,6})|(?:(?::[0-9a-f]{1,4}){0,4}:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(?::(?:(?:(?::[0-9a-f]{1,4}){1,7})|(?:(?::[0-9a-f]{1,4}){0,5}:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:)))(?:%.+)?\s*$/i,
	  regex: regex
	};


	function date(str) {
	  // full-date from http://tools.ietf.org/html/rfc3339#section-5.6
	  var matches = str.match(DATE);
	  if (!matches) return false;

	  var month = +matches[1];
	  var day = +matches[2];
	  return month >= 1 && month <= 12 && day >= 1 && day <= DAYS[month];
	}


	function date_time(str) {
	  // http://tools.ietf.org/html/rfc3339#section-5.6
	  var dateTime = str.toLowerCase().split('t');
	  if (!date(dateTime[0])) return false;

	  var matches = dateTime[1].match(TIME);
	  if (!matches) return false;

	  var hour = matches[1];
	  var minute = matches[2];
	  var second = matches[3];
	  return hour <= 23 && minute <= 59 && second <= 59;
	}


	function hostname(str) {
	  // http://tools.ietf.org/html/rfc1034#section-3.5
	  return str.length <= 255 && HOSTNAME.test(str);
	}


	var NOT_URI_FRAGMENT = /\/|\:/;
	function uri(str) {
	  // http://jmrware.com/articles/2009/uri_regexp/URI_regex.html + optional protocol + required "."
	  return NOT_URI_FRAGMENT.test(str) && URI.test(str);
	}


	function regex(str) {
	  try {
	    new RegExp(str);
	    return true;
	  } catch(e) {
	    return false;
	  }
	}


/***/ },
/* 40 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var ruleModules = __webpack_require__(41)
	  , util = __webpack_require__(26);

	module.exports = function rules() {
	  var RULES = [
	    { type: 'number',
	      rules: [ 'maximum', 'minimum', 'multipleOf'] },
	    { type: 'string',
	      rules: [ 'maxLength', 'minLength', 'pattern', 'format' ] },
	    { type: 'array',
	      rules: [ 'maxItems', 'minItems', 'uniqueItems', 'items' ] },
	    { type: 'object',
	      rules: [ 'maxProperties', 'minProperties', 'required', 'dependencies', 'properties' ] },
	    { rules: [ '$ref', 'enum', 'not', 'anyOf', 'oneOf', 'allOf' ] }
	  ];

	  RULES.all = [ 'type', 'additionalProperties', 'patternProperties' ];
	  RULES.keywords = [ '$schema', 'id', 'title', 'description', 'default' ];
	  RULES.types = [ 'number', 'integer', 'string', 'array', 'object', 'boolean', 'null' ];

	  RULES.forEach(function (group) {
	    group.rules = group.rules.map(function (keyword) {
	      RULES.all.push(keyword);
	      return {
	        keyword: keyword,
	        code: ruleModules[keyword]
	      };
	    });
	  });

	  RULES.keywords = util.toHash(RULES.all.concat(RULES.keywords));
	  RULES.all = util.toHash(RULES.all);
	  RULES.types = util.toHash(RULES.types);

	  return RULES;
	};


/***/ },
/* 41 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	//all requires must be explicit because browserify won't work with dynamic requires
	module.exports = {
	  '$ref': __webpack_require__(42),
	  anyOf: __webpack_require__(43),
	  format: __webpack_require__(44),
	  maxLength: __webpack_require__(45),
	  minItems: __webpack_require__(46),
	  minimum: __webpack_require__(47),
	  oneOf: __webpack_require__(48),
	  required: __webpack_require__(49),
	  dependencies: __webpack_require__(50),
	  items: __webpack_require__(51),
	  maxProperties: __webpack_require__(52),
	  minLength: __webpack_require__(53),
	  multipleOf: __webpack_require__(54),
	  pattern: __webpack_require__(55),
	  uniqueItems: __webpack_require__(56),
	  allOf: __webpack_require__(57),
	  enum: __webpack_require__(58),
	  maxItems: __webpack_require__(59),
	  maximum: __webpack_require__(60),
	  minProperties: __webpack_require__(61),
	  not: __webpack_require__(62),
	  properties: __webpack_require__(63),
	  validate: __webpack_require__(37)
	};


/***/ },
/* 42 */
/***/ function(module, exports) {

	'use strict';
	module.exports = function generate_ref(it) {
	  var out = ' ';
	  var $lvl = it.level,
	    $dataLvl = it.dataLevel,
	    $schema = it.schema['$ref'],
	    $schemaPath = it.schemaPath + '.' + '$ref',
	    $breakOnError = !it.opts.allErrors;
	  var $data = 'data' + ($dataLvl || ''),
	    $valid = 'valid' + $lvl,
	    $errs = 'errs' + $lvl;
	  if ($schema == '#' || $schema == '#/') {
	    if (it.isRoot) {
	      out += '  if (! ' + ('validate') + '(' + ($data) + ', (dataPath || \'\')';
	      if (it.errorPath != '""') {
	        out += ' + ' + (it.errorPath);
	      }
	      out += ') ) { if (vErrors === null) vErrors = ' + ('validate') + '.errors; else vErrors = vErrors.concat(' + ('validate') + '.errors); errors = vErrors.length; } ';
	      if ($breakOnError) {
	        out += ' else { ';
	      }
	    } else {
	      out += '  if (! ' + ('root.refVal[0]') + '(' + ($data) + ', (dataPath || \'\')';
	      if (it.errorPath != '""') {
	        out += ' + ' + (it.errorPath);
	      }
	      out += ') ) { if (vErrors === null) vErrors = ' + ('root.refVal[0]') + '.errors; else vErrors = vErrors.concat(' + ('root.refVal[0]') + '.errors); errors = vErrors.length; } ';
	      if ($breakOnError) {
	        out += ' else { ';
	      }
	    }
	  } else {
	    var $refVal = it.resolveRef(it.baseId, $schema, it.isRoot);
	    if ($refVal === undefined) {
	      var $message = 'can\'t resolve reference ' + $schema + ' from id ' + it.baseId;
	      if (it.opts.missingRefs == 'fail') {
	        console.log($message);
	        if (!it.compositeRule && $breakOnError) {
	          out += ' validate.errors = [ { keyword: \'' + ('$ref') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: "' + ($schemaPath) + '" , params: { ref: \'' + (it.util.escapeQuotes($schema)) + '\' } ';
	          if (it.opts.messages !== false) {
	            out += ' , message: \'can\\\'t resolve reference ' + (it.util.escapeQuotes($schema)) + '\' ';
	          }
	          if (it.opts.verbose) {
	            out += ' , schema: ' + (it.util.toQuotedString($schema)) + ' , data: ' + ($data) + ' ';
	          }
	          out += ' }]; return false; ';
	        } else {
	          out += '  var err =   { keyword: \'' + ('$ref') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: "' + ($schemaPath) + '" , params: { ref: \'' + (it.util.escapeQuotes($schema)) + '\' } ';
	          if (it.opts.messages !== false) {
	            out += ' , message: \'can\\\'t resolve reference ' + (it.util.escapeQuotes($schema)) + '\' ';
	          }
	          if (it.opts.verbose) {
	            out += ' , schema: ' + (it.util.toQuotedString($schema)) + ' , data: ' + ($data) + ' ';
	          }
	          out += ' }; if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
	        }
	        if ($breakOnError) {
	          out += ' if (false) { ';
	        }
	      } else if (it.opts.missingRefs == 'ignore') {
	        console.log($message);
	        if ($breakOnError) {
	          out += ' if (true) { ';
	        }
	      } else {
	        var $error = new Error($message);
	        $error.missingRef = it.resolve.url(it.baseId, $schema);
	        $error.missingSchema = it.resolve.normalizeId(it.resolve.fullPath($error.missingRef));
	        throw $error;
	      }
	    } else if (typeof $refVal == 'string') {
	      out += '  if (! ' + ($refVal) + '(' + ($data) + ', (dataPath || \'\')';
	      if (it.errorPath != '""') {
	        out += ' + ' + (it.errorPath);
	      }
	      out += ') ) { if (vErrors === null) vErrors = ' + ($refVal) + '.errors; else vErrors = vErrors.concat(' + ($refVal) + '.errors); errors = vErrors.length; } ';
	      if ($breakOnError) {
	        out += ' else { ';
	      }
	    } else {
	      var $it = it.util.copy(it),
	        $closingBraces = '';
	      $it.level++;
	      $it.schema = $refVal.schema;
	      $it.schemaPath = '';
	      var $code = it.validate($it).replace(/validate\.schema/g, $refVal.code);
	      out += ' ' + ($code) + ' ';
	      if ($breakOnError) {
	        out += ' if (valid' + ($it.level) + ') { ';
	      }
	    }
	  }
	  return out;
	}


/***/ },
/* 43 */
/***/ function(module, exports) {

	'use strict';
	module.exports = function generate_anyOf(it) {
	  var out = ' ';
	  var $lvl = it.level,
	    $dataLvl = it.dataLevel,
	    $schema = it.schema['anyOf'],
	    $schemaPath = it.schemaPath + '.' + 'anyOf',
	    $breakOnError = !it.opts.allErrors;
	  var $data = 'data' + ($dataLvl || ''),
	    $valid = 'valid' + $lvl,
	    $errs = 'errs' + $lvl;
	  var $it = it.util.copy(it),
	    $closingBraces = '';
	  $it.level++;
	  var $noEmptySchema = $schema.every(function($sch) {
	    return it.util.schemaHasRules($sch, it.RULES.all);
	  });
	  if ($noEmptySchema) {
	    out += ' var ' + ($errs) + ' = errors; var ' + ($valid) + ' = false;  ';
	    var $wasComposite = it.compositeRule;
	    it.compositeRule = $it.compositeRule = true;
	    var arr1 = $schema;
	    if (arr1) {
	      var $sch, $i = -1,
	        l1 = arr1.length - 1;
	      while ($i < l1) {
	        $sch = arr1[$i += 1];
	        $it.schema = $sch;
	        $it.schemaPath = $schemaPath + '[' + $i + ']';
	        out += ' ' + (it.validate($it)) + ' ' + ($valid) + ' = ' + ($valid) + ' || valid' + ($it.level) + '; if (!' + ($valid) + ') { ';
	        $closingBraces += '}';
	      }
	    }
	    it.compositeRule = $it.compositeRule = $wasComposite;
	    out += ' ' + ($closingBraces) + ' if (!' + ($valid) + ') {  var err =   { keyword: \'' + ('anyOf') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: "' + ($schemaPath) + '" , params: {} ';
	    if (it.opts.messages !== false) {
	      out += ' , message: \'should match some schema in anyOf\' ';
	    }
	    if (it.opts.verbose) {
	      out += ' , schema: validate.schema' + ($schemaPath) + ' , data: ' + ($data) + ' ';
	    }
	    out += ' }; if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } else { errors = ' + ($errs) + '; if (vErrors !== null) { if (' + ($errs) + ') vErrors.length = ' + ($errs) + '; else vErrors = null; } ';
	    if (it.opts.allErrors) {
	      out += ' } ';
	    }
	    out = it.util.cleanUpCode(out);
	  } else {
	    if ($breakOnError) {
	      out += ' if (true) { ';
	    }
	  }
	  return out;
	}


/***/ },
/* 44 */
/***/ function(module, exports) {

	'use strict';
	module.exports = function generate_format(it) {
	  var out = ' ';
	  var $lvl = it.level,
	    $dataLvl = it.dataLevel,
	    $schema = it.schema['format'],
	    $schemaPath = it.schemaPath + '.' + 'format',
	    $breakOnError = !it.opts.allErrors;
	  var $data = 'data' + ($dataLvl || ''),
	    $valid = 'valid' + $lvl,
	    $errs = 'errs' + $lvl;
	  var $format = it.formats[$schema];
	  if (it.opts.format !== false && $format) {
	    out += ' if (!   ';
	    if (typeof $format == 'function') {
	      out += ' formats' + (it.util.getProperty($schema)) + ' (' + ($data) + ') ';
	    } else {
	      out += ' formats' + (it.util.getProperty($schema)) + ' .test(' + ($data) + ') ';
	    }
	    out += ') {  ';
	    if (!it.compositeRule && $breakOnError) {
	      out += ' validate.errors = [ { keyword: \'' + ('format') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: "' + ($schemaPath) + '" , params: { format: \'' + (it.util.escapeQuotes($schema)) + '\' } ';
	      if (it.opts.messages !== false) {
	        out += ' , message: \'should match format ' + (it.util.escapeQuotes($schema)) + '\' ';
	      }
	      if (it.opts.verbose) {
	        out += ' , schema: ' + (it.util.toQuotedString($schema)) + ' , data: ' + ($data) + ' ';
	      }
	      out += ' }]; return false; ';
	    } else {
	      out += '  var err =   { keyword: \'' + ('format') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: "' + ($schemaPath) + '" , params: { format: \'' + (it.util.escapeQuotes($schema)) + '\' } ';
	      if (it.opts.messages !== false) {
	        out += ' , message: \'should match format ' + (it.util.escapeQuotes($schema)) + '\' ';
	      }
	      if (it.opts.verbose) {
	        out += ' , schema: ' + (it.util.toQuotedString($schema)) + ' , data: ' + ($data) + ' ';
	      }
	      out += ' }; if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
	    }
	    out += ' } ';
	    if ($breakOnError) {
	      out += ' else { ';
	    }
	  } else {
	    if ($breakOnError) {
	      out += ' if (true) { ';
	    }
	  }
	  return out;
	}


/***/ },
/* 45 */
/***/ function(module, exports) {

	'use strict';
	module.exports = function generate_maxLength(it) {
	  var out = ' ';
	  var $lvl = it.level,
	    $dataLvl = it.dataLevel,
	    $schema = it.schema['maxLength'],
	    $schemaPath = it.schemaPath + '.' + 'maxLength',
	    $breakOnError = !it.opts.allErrors;
	  var $data = 'data' + ($dataLvl || ''),
	    $valid = 'valid' + $lvl,
	    $errs = 'errs' + $lvl;
	  out += 'if ( ';
	  if (it.opts.unicode === false) {
	    out += ' ' + ($data) + '.length ';
	  } else {
	    out += ' ucs2length(' + ($data) + ') ';
	  }
	  out += ' > ' + ($schema) + ') {  ';
	  if (!it.compositeRule && $breakOnError) {
	    out += ' validate.errors = [ { keyword: \'' + ('maxLength') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: "' + ($schemaPath) + '" , params: { limit: ' + ($schema) + ' } ';
	    if (it.opts.messages !== false) {
	      out += ' , message: \'should NOT be longer than ' + ($schema) + ' characters\' ';
	    }
	    if (it.opts.verbose) {
	      out += ' , schema: ' + ($schema) + ' , data: ' + ($data) + ' ';
	    }
	    out += ' }]; return false; ';
	  } else {
	    out += '  var err =   { keyword: \'' + ('maxLength') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: "' + ($schemaPath) + '" , params: { limit: ' + ($schema) + ' } ';
	    if (it.opts.messages !== false) {
	      out += ' , message: \'should NOT be longer than ' + ($schema) + ' characters\' ';
	    }
	    if (it.opts.verbose) {
	      out += ' , schema: ' + ($schema) + ' , data: ' + ($data) + ' ';
	    }
	    out += ' }; if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
	  }
	  out += '} ';
	  if ($breakOnError) {
	    out += ' else { ';
	  }
	  return out;
	}


/***/ },
/* 46 */
/***/ function(module, exports) {

	'use strict';
	module.exports = function generate_minItems(it) {
	  var out = ' ';
	  var $lvl = it.level,
	    $dataLvl = it.dataLevel,
	    $schema = it.schema['minItems'],
	    $schemaPath = it.schemaPath + '.' + 'minItems',
	    $breakOnError = !it.opts.allErrors;
	  var $data = 'data' + ($dataLvl || ''),
	    $valid = 'valid' + $lvl,
	    $errs = 'errs' + $lvl;
	  out += 'if (' + ($data) + '.length < ' + ($schema) + ') {  ';
	  if (!it.compositeRule && $breakOnError) {
	    out += ' validate.errors = [ { keyword: \'' + ('minItems') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: "' + ($schemaPath) + '" , params: { limit: ' + ($schema) + ' } ';
	    if (it.opts.messages !== false) {
	      out += ' , message: \'should NOT have less than ' + ($schema) + ' items\' ';
	    }
	    if (it.opts.verbose) {
	      out += ' , schema: ' + ($schema) + ' , data: ' + ($data) + ' ';
	    }
	    out += ' }]; return false; ';
	  } else {
	    out += '  var err =   { keyword: \'' + ('minItems') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: "' + ($schemaPath) + '" , params: { limit: ' + ($schema) + ' } ';
	    if (it.opts.messages !== false) {
	      out += ' , message: \'should NOT have less than ' + ($schema) + ' items\' ';
	    }
	    if (it.opts.verbose) {
	      out += ' , schema: ' + ($schema) + ' , data: ' + ($data) + ' ';
	    }
	    out += ' }; if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
	  }
	  out += '} ';
	  if ($breakOnError) {
	    out += ' else { ';
	  }
	  return out;
	}


/***/ },
/* 47 */
/***/ function(module, exports) {

	'use strict';
	module.exports = function generate_minimum(it) {
	  var out = ' ';
	  var $lvl = it.level,
	    $dataLvl = it.dataLevel,
	    $schema = it.schema['minimum'],
	    $schemaPath = it.schemaPath + '.' + 'minimum',
	    $breakOnError = !it.opts.allErrors;
	  var $data = 'data' + ($dataLvl || ''),
	    $valid = 'valid' + $lvl,
	    $errs = 'errs' + $lvl;
	  var $exclusive = it.schema.exclusiveMinimum === true,
	    $op = $exclusive ? '>' : '>=',
	    $notOp = $exclusive ? '<=' : '<';
	  out += 'if (' + ($data) + ' ' + ($notOp) + ' ' + ($schema) + ') {  ';
	  if (!it.compositeRule && $breakOnError) {
	    out += ' validate.errors = [ { keyword: \'' + ('minimum') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: "' + ($schemaPath) + '" , params: { comparison: \'' + ($op) + '\', limit: ' + ($schema) + ', exclusive: ' + ($exclusive) + ' } ';
	    if (it.opts.messages !== false) {
	      out += ' , message: \'should be ' + ($op) + ' ' + ($schema) + '\' ';
	    }
	    if (it.opts.verbose) {
	      out += ' , schema: ' + ($schema) + ' , data: ' + ($data) + ' ';
	    }
	    out += ' }]; return false; ';
	  } else {
	    out += '  var err =   { keyword: \'' + ('minimum') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: "' + ($schemaPath) + '" , params: { comparison: \'' + ($op) + '\', limit: ' + ($schema) + ', exclusive: ' + ($exclusive) + ' } ';
	    if (it.opts.messages !== false) {
	      out += ' , message: \'should be ' + ($op) + ' ' + ($schema) + '\' ';
	    }
	    if (it.opts.verbose) {
	      out += ' , schema: ' + ($schema) + ' , data: ' + ($data) + ' ';
	    }
	    out += ' }; if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
	  }
	  out += '} ';
	  if ($breakOnError) {
	    out += ' else { ';
	  }
	  return out;
	}


/***/ },
/* 48 */
/***/ function(module, exports) {

	'use strict';
	module.exports = function generate_oneOf(it) {
	  var out = ' ';
	  var $lvl = it.level,
	    $dataLvl = it.dataLevel,
	    $schema = it.schema['oneOf'],
	    $schemaPath = it.schemaPath + '.' + 'oneOf',
	    $breakOnError = !it.opts.allErrors;
	  var $data = 'data' + ($dataLvl || ''),
	    $valid = 'valid' + $lvl,
	    $errs = 'errs' + $lvl;
	  var $it = it.util.copy(it),
	    $closingBraces = '';
	  $it.level++;
	  out += 'var ' + ($errs) + ' = errors;var prevValid' + ($lvl) + ' = false;var ' + ($valid) + ' = false; ';
	  var $wasComposite = it.compositeRule;
	  it.compositeRule = $it.compositeRule = true;
	  var arr1 = $schema;
	  if (arr1) {
	    var $sch, $i = -1,
	      l1 = arr1.length - 1;
	    while ($i < l1) {
	      $sch = arr1[$i += 1];
	      if (it.util.schemaHasRules($sch, it.RULES.all)) {
	        $it.schema = $sch;
	        $it.schemaPath = $schemaPath + '[' + $i + ']';
	        out += ' ' + (it.validate($it)) + ' ';
	      } else {
	        out += ' var valid' + ($it.level) + ' = true; ';
	      }
	      if ($i) {
	        out += ' if (valid' + ($it.level) + ' && prevValid' + ($lvl) + ') ' + ($valid) + ' = false; else { ';
	        $closingBraces += '}';
	      }
	      out += ' if (valid' + ($it.level) + ') ' + ($valid) + ' = prevValid' + ($lvl) + ' = true;';
	    }
	  }
	  it.compositeRule = $it.compositeRule = $wasComposite;
	  out += '' + ($closingBraces) + 'if (!' + ($valid) + ') {  ';
	  if (!it.compositeRule && $breakOnError) {
	    out += ' validate.errors = [ { keyword: \'' + ('oneOf') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: "' + ($schemaPath) + '" , params: {} ';
	    if (it.opts.messages !== false) {
	      out += ' , message: \'should match exactly one schema in oneOf\' ';
	    }
	    if (it.opts.verbose) {
	      out += ' , schema: validate.schema' + ($schemaPath) + ' , data: ' + ($data) + ' ';
	    }
	    out += ' }]; return false; ';
	  } else {
	    out += '  var err =   { keyword: \'' + ('oneOf') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: "' + ($schemaPath) + '" , params: {} ';
	    if (it.opts.messages !== false) {
	      out += ' , message: \'should match exactly one schema in oneOf\' ';
	    }
	    if (it.opts.verbose) {
	      out += ' , schema: validate.schema' + ($schemaPath) + ' , data: ' + ($data) + ' ';
	    }
	    out += ' }; if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
	  }
	  out += '} else { errors = ' + ($errs) + '; if (vErrors !== null) { if (' + ($errs) + ') vErrors.length = ' + ($errs) + '; else vErrors = null; }';
	  if (it.opts.allErrors) {
	    out += ' } ';
	  }
	  return out;
	}


/***/ },
/* 49 */
/***/ function(module, exports) {

	'use strict';
	module.exports = function generate_required(it) {
	  var out = ' ';
	  var $lvl = it.level,
	    $dataLvl = it.dataLevel,
	    $schema = it.schema['required'],
	    $schemaPath = it.schemaPath + '.' + 'required',
	    $breakOnError = !it.opts.allErrors;
	  var $data = 'data' + ($dataLvl || ''),
	    $valid = 'valid' + $lvl,
	    $errs = 'errs' + $lvl;
	  if (it.schema.properties && Object.keys(it.schema.properties).length) {
	    var $required = [];
	    var arr1 = $schema;
	    if (arr1) {
	      var $property, i1 = -1,
	        l1 = arr1.length - 1;
	      while (i1 < l1) {
	        $property = arr1[i1 += 1];
	        var $propertySch = it.schema.properties[$property];
	        if (!($propertySch && it.util.schemaHasRules($propertySch, it.RULES.all))) {
	          $required[$required.length] = $property;
	        }
	      }
	    }
	  } else {
	    var $required = $schema;
	  }
	  if ($required.length) {
	    var $currentErrorPath = it.errorPath;
	    if ($breakOnError) {
	      out += ' var missing' + ($lvl) + '; ';
	      if ($required.length <= 20) {
	        out += ' if ( ';
	        var arr2 = $required;
	        if (arr2) {
	          var _$property, $i = -1,
	            l2 = arr2.length - 1;
	          while ($i < l2) {
	            _$property = arr2[$i += 1];
	            if ($i) {
	              out += ' || ';
	            }
	            var $prop = it.util.getProperty(_$property);
	            out += ' ( ' + ($data) + ($prop) + ' === undefined && (missing' + ($lvl) + ' = ' + (it.util.toQuotedString(it.opts.jsonPointers ? _$property : $prop)) + ') ) ';
	          }
	        }
	        out += ') {  ';
	        var $propertyPath = 'missing' + $lvl,
	          $missingProperty = '\' + ' + $propertyPath + ' + \'';
	        if (it.opts._errorDataPathProperty) {
	          it.errorPath = it.opts.jsonPointers ? it.util.getPathExpr($currentErrorPath, $propertyPath, true) : $currentErrorPath + ' + ' + $propertyPath;
	        }
	        if (!it.compositeRule && $breakOnError) {
	          out += ' validate.errors = [ { keyword: \'' + ('required') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: "' + ($schemaPath) + '" , params: { missingProperty: \'' + ($missingProperty) + '\' } ';
	          if (it.opts.messages !== false) {
	            out += ' , message: \'';
	            if (it.opts._errorDataPathProperty) {
	              out += 'is a required property';
	            } else {
	              out += 'should have required property \\\'' + ($missingProperty) + '\\\'';
	            }
	            out += '\' ';
	          }
	          if (it.opts.verbose) {
	            out += ' , schema: validate.schema' + ($schemaPath) + ' , data: ' + ($data) + ' ';
	          }
	          out += ' }]; return false; ';
	        } else {
	          out += '  var err =   { keyword: \'' + ('required') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: "' + ($schemaPath) + '" , params: { missingProperty: \'' + ($missingProperty) + '\' } ';
	          if (it.opts.messages !== false) {
	            out += ' , message: \'';
	            if (it.opts._errorDataPathProperty) {
	              out += 'is a required property';
	            } else {
	              out += 'should have required property \\\'' + ($missingProperty) + '\\\'';
	            }
	            out += '\' ';
	          }
	          if (it.opts.verbose) {
	            out += ' , schema: validate.schema' + ($schemaPath) + ' , data: ' + ($data) + ' ';
	          }
	          out += ' }; if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
	        }
	        out += ' } else { ';
	      } else {
	        out += '  var schema' + ($lvl) + ' = validate.schema' + ($schemaPath) + '; ';
	        var $i = 'i' + $lvl,
	          $propertyPath = 'schema' + $lvl + '[' + $i + ']',
	          $missingProperty = '\' + ' + $propertyPath + ' + \'';
	        if (it.opts._errorDataPathProperty) {
	          it.errorPath = it.util.getPathExpr($currentErrorPath, $propertyPath, it.opts.jsonPointers);
	        }
	        out += ' for (var ' + ($i) + ' = 0; ' + ($i) + ' < schema' + ($lvl) + '.length; ' + ($i) + '++) { var ' + ($valid) + ' = ' + ($data) + '[schema' + ($lvl) + '[' + ($i) + ']] !== undefined; if (!' + ($valid) + ') break; }  if (!' + ($valid) + ') {  ';
	        if (!it.compositeRule && $breakOnError) {
	          out += ' validate.errors = [ { keyword: \'' + ('required') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: "' + ($schemaPath) + '" , params: { missingProperty: \'' + ($missingProperty) + '\' } ';
	          if (it.opts.messages !== false) {
	            out += ' , message: \'';
	            if (it.opts._errorDataPathProperty) {
	              out += 'is a required property';
	            } else {
	              out += 'should have required property \\\'' + ($missingProperty) + '\\\'';
	            }
	            out += '\' ';
	          }
	          if (it.opts.verbose) {
	            out += ' , schema: validate.schema' + ($schemaPath) + ' , data: ' + ($data) + ' ';
	          }
	          out += ' }]; return false; ';
	        } else {
	          out += '  var err =   { keyword: \'' + ('required') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: "' + ($schemaPath) + '" , params: { missingProperty: \'' + ($missingProperty) + '\' } ';
	          if (it.opts.messages !== false) {
	            out += ' , message: \'';
	            if (it.opts._errorDataPathProperty) {
	              out += 'is a required property';
	            } else {
	              out += 'should have required property \\\'' + ($missingProperty) + '\\\'';
	            }
	            out += '\' ';
	          }
	          if (it.opts.verbose) {
	            out += ' , schema: validate.schema' + ($schemaPath) + ' , data: ' + ($data) + ' ';
	          }
	          out += ' }; if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
	        }
	        out += ' } else { ';
	      }
	    } else {
	      if ($required.length <= 20) {
	        var arr3 = $required;
	        if (arr3) {
	          var $property, $i = -1,
	            l3 = arr3.length - 1;
	          while ($i < l3) {
	            $property = arr3[$i += 1];
	            var $prop = it.util.getProperty($property),
	              $missingProperty = it.util.escapeQuotes($property);
	            if (it.opts._errorDataPathProperty) {
	              it.errorPath = it.util.getPath($currentErrorPath, $property, it.opts.jsonPointers);
	            }
	            out += ' if (' + ($data) + ($prop) + ' === undefined) {  var err =   { keyword: \'' + ('required') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: "' + ($schemaPath) + '" , params: { missingProperty: \'' + ($missingProperty) + '\' } ';
	            if (it.opts.messages !== false) {
	              out += ' , message: \'';
	              if (it.opts._errorDataPathProperty) {
	                out += 'is a required property';
	              } else {
	                out += 'should have required property \\\'' + ($missingProperty) + '\\\'';
	              }
	              out += '\' ';
	            }
	            if (it.opts.verbose) {
	              out += ' , schema: validate.schema' + ($schemaPath) + ' , data: ' + ($data) + ' ';
	            }
	            out += ' }; if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } ';
	          }
	        }
	      } else {
	        out += '  var schema' + ($lvl) + ' = validate.schema' + ($schemaPath) + '; ';
	        var $i = 'i' + $lvl,
	          $propertyPath = 'schema' + $lvl + '[' + $i + ']',
	          $missingProperty = '\' + ' + $propertyPath + ' + \'';
	        if (it.opts._errorDataPathProperty) {
	          it.errorPath = it.util.getPathExpr($currentErrorPath, $propertyPath, it.opts.jsonPointers);
	        }
	        out += ' for (var ' + ($i) + ' = 0; ' + ($i) + ' < schema' + ($lvl) + '.length; ' + ($i) + '++) { if (' + ($data) + '[schema' + ($lvl) + '[' + ($i) + ']] === undefined) {  var err =   { keyword: \'' + ('required') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: "' + ($schemaPath) + '" , params: { missingProperty: \'' + ($missingProperty) + '\' } ';
	        if (it.opts.messages !== false) {
	          out += ' , message: \'';
	          if (it.opts._errorDataPathProperty) {
	            out += 'is a required property';
	          } else {
	            out += 'should have required property \\\'' + ($missingProperty) + '\\\'';
	          }
	          out += '\' ';
	        }
	        if (it.opts.verbose) {
	          out += ' , schema: validate.schema' + ($schemaPath) + ' , data: ' + ($data) + ' ';
	        }
	        out += ' }; if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } } ';
	      }
	    }
	    it.errorPath = $currentErrorPath;
	  } else if ($breakOnError) {
	    out += ' if (true) {';
	  }
	  return out;
	}


/***/ },
/* 50 */
/***/ function(module, exports) {

	'use strict';
	module.exports = function generate_dependencies(it) {
	  var out = ' ';
	  var $lvl = it.level,
	    $dataLvl = it.dataLevel,
	    $schema = it.schema['dependencies'],
	    $schemaPath = it.schemaPath + '.' + 'dependencies',
	    $breakOnError = !it.opts.allErrors;
	  var $data = 'data' + ($dataLvl || ''),
	    $valid = 'valid' + $lvl,
	    $errs = 'errs' + $lvl;
	  var $it = it.util.copy(it),
	    $closingBraces = '';
	  $it.level++;
	  var $schemaDeps = {},
	    $propertyDeps = {};
	  for ($property in $schema) {
	    var $sch = $schema[$property];
	    var $deps = Array.isArray($sch) ? $propertyDeps : $schemaDeps;
	    $deps[$property] = $sch;
	  }
	  out += 'var ' + ($errs) + ' = errors;';
	  var $currentErrorPath = it.errorPath;
	  out += 'var missing' + ($lvl) + ';';
	  for (var $property in $propertyDeps) {
	    out += ' if (' + ($data) + (it.util.getProperty($property)) + ' !== undefined) { ';
	    $deps = $propertyDeps[$property];
	    out += ' if ( ';
	    var arr1 = $deps;
	    if (arr1) {
	      var _$property, $i = -1,
	        l1 = arr1.length - 1;
	      while ($i < l1) {
	        _$property = arr1[$i += 1];
	        if ($i) {
	          out += ' || ';
	        }
	        var $prop = it.util.getProperty(_$property);
	        out += ' ( ' + ($data) + ($prop) + ' === undefined && (missing' + ($lvl) + ' = ' + (it.util.toQuotedString(it.opts.jsonPointers ? _$property : $prop)) + ') ) ';
	      }
	    }
	    out += ') {  ';
	    var $propertyPath = 'missing' + $lvl,
	      $missingProperty = '\' + ' + $propertyPath + ' + \'';
	    if (it.opts._errorDataPathProperty) {
	      it.errorPath = it.opts.jsonPointers ? it.util.getPathExpr($currentErrorPath, $propertyPath, true) : $currentErrorPath + ' + ' + $propertyPath;
	    }
	    if (!it.compositeRule && $breakOnError) {
	      out += ' validate.errors = [ { keyword: \'' + ('dependencies') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: "' + ($schemaPath) + '" , params: { property: \'' + (it.util.escapeQuotes($property)) + '\', missingProperty: \'' + ($missingProperty) + '\', depsCount: ' + ($deps.length) + ', deps: \'';
	      if ($deps.length == 1) {
	        out += '' + (it.util.escapeQuotes($deps[0]));
	      } else {
	        out += '' + (it.util.escapeQuotes($deps.join(", ")));
	      }
	      out += '\' } ';
	      if (it.opts.messages !== false) {
	        out += ' , message: \'should have ';
	        if ($deps.length == 1) {
	          out += 'property ' + (it.util.escapeQuotes($deps[0]));
	        } else {
	          out += 'properties ' + (it.util.escapeQuotes($deps.join(", ")));
	        }
	        out += ' when property ' + (it.util.escapeQuotes($property)) + ' is present\' ';
	      }
	      if (it.opts.verbose) {
	        out += ' , schema: validate.schema' + ($schemaPath) + ' , data: ' + ($data) + ' ';
	      }
	      out += ' }]; return false; ';
	    } else {
	      out += '  var err =   { keyword: \'' + ('dependencies') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: "' + ($schemaPath) + '" , params: { property: \'' + (it.util.escapeQuotes($property)) + '\', missingProperty: \'' + ($missingProperty) + '\', depsCount: ' + ($deps.length) + ', deps: \'';
	      if ($deps.length == 1) {
	        out += '' + (it.util.escapeQuotes($deps[0]));
	      } else {
	        out += '' + (it.util.escapeQuotes($deps.join(", ")));
	      }
	      out += '\' } ';
	      if (it.opts.messages !== false) {
	        out += ' , message: \'should have ';
	        if ($deps.length == 1) {
	          out += 'property ' + (it.util.escapeQuotes($deps[0]));
	        } else {
	          out += 'properties ' + (it.util.escapeQuotes($deps.join(", ")));
	        }
	        out += ' when property ' + (it.util.escapeQuotes($property)) + ' is present\' ';
	      }
	      if (it.opts.verbose) {
	        out += ' , schema: validate.schema' + ($schemaPath) + ' , data: ' + ($data) + ' ';
	      }
	      out += ' }; if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
	    }
	    out += ' }   ';
	    if ($breakOnError) {
	      $closingBraces += '}';
	      out += ' else { ';
	    }
	    out += ' }';
	  }
	  it.errorPath = $currentErrorPath;
	  for (var $property in $schemaDeps) {
	    var $sch = $schemaDeps[$property];
	    if (it.util.schemaHasRules($sch, it.RULES.all)) {
	      out += ' valid' + ($it.level) + ' = true; if (' + ($data) + '[\'' + ($property) + '\'] !== undefined) { ';
	      $it.schema = $sch;
	      $it.schemaPath = $schemaPath + it.util.getProperty($property);
	      out += ' ' + (it.validate($it)) + ' }  ';
	      if ($breakOnError) {
	        out += ' if (valid' + ($it.level) + ') { ';
	        $closingBraces += '}';
	      }
	    }
	  }
	  if ($breakOnError) {
	    out += '   ' + ($closingBraces) + ' if (' + ($errs) + ' == errors) {';
	  }
	  out = it.util.cleanUpCode(out);
	  return out;
	}


/***/ },
/* 51 */
/***/ function(module, exports) {

	'use strict';
	module.exports = function generate_items(it) {
	  var out = ' ';
	  var $lvl = it.level,
	    $dataLvl = it.dataLevel,
	    $schema = it.schema['items'],
	    $schemaPath = it.schemaPath + '.' + 'items',
	    $breakOnError = !it.opts.allErrors;
	  var $data = 'data' + ($dataLvl || ''),
	    $valid = 'valid' + $lvl,
	    $errs = 'errs' + $lvl;
	  var $it = it.util.copy(it),
	    $closingBraces = '';
	  $it.level++;
	  var $dataNxt = $it.dataLevel = it.dataLevel + 1,
	    $nextData = 'data' + $dataNxt;
	  out += 'var ' + ($errs) + ' = errors;var ' + ($valid) + ';';
	  if (Array.isArray($schema)) {
	    var $additionalItems = it.schema.additionalItems;
	    if ($additionalItems === false) {
	      out += ' ' + ($valid) + ' = ' + ($data) + '.length <= ' + ($schema.length) + ';  if (!' + ($valid) + ') {  ';
	      if (!it.compositeRule && $breakOnError) {
	        out += ' validate.errors = [ { keyword: \'' + ('additionalItems') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: "' + ($schemaPath) + '" , params: { limit: ' + ($schema.length) + ' } ';
	        if (it.opts.messages !== false) {
	          out += ' , message: \'should NOT have more than ' + ($schema.length) + ' items\' ';
	        }
	        if (it.opts.verbose) {
	          out += ' , schema: false , data: ' + ($data) + ' ';
	        }
	        out += ' }]; return false; ';
	      } else {
	        out += '  var err =   { keyword: \'' + ('additionalItems') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: "' + ($schemaPath) + '" , params: { limit: ' + ($schema.length) + ' } ';
	        if (it.opts.messages !== false) {
	          out += ' , message: \'should NOT have more than ' + ($schema.length) + ' items\' ';
	        }
	        if (it.opts.verbose) {
	          out += ' , schema: false , data: ' + ($data) + ' ';
	        }
	        out += ' }; if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
	      }
	      out += ' }  ';
	      if ($breakOnError) {
	        $closingBraces += '}';
	        out += ' else { ';
	      }
	    }
	    var arr1 = $schema;
	    if (arr1) {
	      var $sch, $i = -1,
	        l1 = arr1.length - 1;
	      while ($i < l1) {
	        $sch = arr1[$i += 1];
	        if (it.util.schemaHasRules($sch, it.RULES.all)) {
	          out += ' valid' + ($it.level) + ' = true; if (' + ($data) + '.length > ' + ($i) + ') { ';
	          $it.schema = $sch;
	          $it.schemaPath = $schemaPath + '[' + $i + ']';
	          $it.errorPath = it.util.getPathExpr(it.errorPath, $i, it.opts.jsonPointers, true);
	          var $passData = $data + '[' + $i + ']';
	          var $code = it.validate($it);
	          if (it.util.varOccurences($code, $nextData) < 2) {
	            out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';
	          } else {
	            out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';
	          }
	          out += ' }  ';
	          if ($breakOnError) {
	            out += ' if (valid' + ($it.level) + ') { ';
	            $closingBraces += '}';
	          }
	        }
	      }
	    }
	    if (typeof $additionalItems == 'object' && it.util.schemaHasRules($additionalItems, it.RULES.all)) {
	      $it.schema = $additionalItems;
	      $it.schemaPath = it.schemaPath + '.additionalItems';
	      out += ' valid' + ($it.level) + ' = true; if (' + ($data) + '.length > ' + ($schema.length) + ') {  for (var i' + ($lvl) + ' = ' + ($schema.length) + '; i' + ($lvl) + ' < ' + ($data) + '.length; i' + ($lvl) + '++) { ';
	      $it.errorPath = it.util.getPathExpr(it.errorPath, 'i' + $lvl, it.opts.jsonPointers, true);
	      var $passData = $data + '[i' + $lvl + ']';
	      var $code = it.validate($it);
	      if (it.util.varOccurences($code, $nextData) < 2) {
	        out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';
	      } else {
	        out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';
	      }
	      if ($breakOnError) {
	        out += ' if (!valid' + ($it.level) + ') break; ';
	      }
	      out += ' } }  ';
	      if ($breakOnError) {
	        out += ' if (valid' + ($it.level) + ') { ';
	        $closingBraces += '}';
	      }
	    }
	  } else if (it.util.schemaHasRules($schema, it.RULES.all)) {
	    $it.schema = $schema;
	    $it.schemaPath = $schemaPath;
	    out += '  for (var i' + ($lvl) + ' = ' + (0) + '; i' + ($lvl) + ' < ' + ($data) + '.length; i' + ($lvl) + '++) { ';
	    $it.errorPath = it.util.getPathExpr(it.errorPath, 'i' + $lvl, it.opts.jsonPointers, true);
	    var $passData = $data + '[i' + $lvl + ']';
	    var $code = it.validate($it);
	    if (it.util.varOccurences($code, $nextData) < 2) {
	      out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';
	    } else {
	      out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';
	    }
	    if ($breakOnError) {
	      out += ' if (!valid' + ($it.level) + ') break; ';
	    }
	    out += ' }  ';
	    if ($breakOnError) {
	      out += ' if (valid' + ($it.level) + ') { ';
	      $closingBraces += '}';
	    }
	  }
	  if ($breakOnError) {
	    out += ' ' + ($closingBraces) + ' if (' + ($errs) + ' == errors) {';
	  }
	  out = it.util.cleanUpCode(out);
	  return out;
	}


/***/ },
/* 52 */
/***/ function(module, exports) {

	'use strict';
	module.exports = function generate_maxProperties(it) {
	  var out = ' ';
	  var $lvl = it.level,
	    $dataLvl = it.dataLevel,
	    $schema = it.schema['maxProperties'],
	    $schemaPath = it.schemaPath + '.' + 'maxProperties',
	    $breakOnError = !it.opts.allErrors;
	  var $data = 'data' + ($dataLvl || ''),
	    $valid = 'valid' + $lvl,
	    $errs = 'errs' + $lvl;
	  out += 'if (Object.keys(' + ($data) + ').length > ' + ($schema) + ') {  ';
	  if (!it.compositeRule && $breakOnError) {
	    out += ' validate.errors = [ { keyword: \'' + ('maxProperties') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: "' + ($schemaPath) + '" , params: { limit: ' + ($schema) + ' } ';
	    if (it.opts.messages !== false) {
	      out += ' , message: \'should NOT have more than ' + ($schema) + ' properties\' ';
	    }
	    if (it.opts.verbose) {
	      out += ' , schema: ' + ($schema) + ' , data: ' + ($data) + ' ';
	    }
	    out += ' }]; return false; ';
	  } else {
	    out += '  var err =   { keyword: \'' + ('maxProperties') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: "' + ($schemaPath) + '" , params: { limit: ' + ($schema) + ' } ';
	    if (it.opts.messages !== false) {
	      out += ' , message: \'should NOT have more than ' + ($schema) + ' properties\' ';
	    }
	    if (it.opts.verbose) {
	      out += ' , schema: ' + ($schema) + ' , data: ' + ($data) + ' ';
	    }
	    out += ' }; if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
	  }
	  out += '} ';
	  if ($breakOnError) {
	    out += ' else { ';
	  }
	  return out;
	}


/***/ },
/* 53 */
/***/ function(module, exports) {

	'use strict';
	module.exports = function generate_minLength(it) {
	  var out = ' ';
	  var $lvl = it.level,
	    $dataLvl = it.dataLevel,
	    $schema = it.schema['minLength'],
	    $schemaPath = it.schemaPath + '.' + 'minLength',
	    $breakOnError = !it.opts.allErrors;
	  var $data = 'data' + ($dataLvl || ''),
	    $valid = 'valid' + $lvl,
	    $errs = 'errs' + $lvl;
	  out += 'if ( ';
	  if (it.opts.unicode === false) {
	    out += ' ' + ($data) + '.length ';
	  } else {
	    out += ' ucs2length(' + ($data) + ') ';
	  }
	  out += ' < ' + ($schema) + ') {  ';
	  if (!it.compositeRule && $breakOnError) {
	    out += ' validate.errors = [ { keyword: \'' + ('minLength') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: "' + ($schemaPath) + '" , params: { limit: ' + ($schema) + ' } ';
	    if (it.opts.messages !== false) {
	      out += ' , message: \'should NOT be shorter than ' + ($schema) + ' characters\' ';
	    }
	    if (it.opts.verbose) {
	      out += ' , schema: ' + ($schema) + ' , data: ' + ($data) + ' ';
	    }
	    out += ' }]; return false; ';
	  } else {
	    out += '  var err =   { keyword: \'' + ('minLength') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: "' + ($schemaPath) + '" , params: { limit: ' + ($schema) + ' } ';
	    if (it.opts.messages !== false) {
	      out += ' , message: \'should NOT be shorter than ' + ($schema) + ' characters\' ';
	    }
	    if (it.opts.verbose) {
	      out += ' , schema: ' + ($schema) + ' , data: ' + ($data) + ' ';
	    }
	    out += ' }; if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
	  }
	  out += '} ';
	  if ($breakOnError) {
	    out += ' else { ';
	  }
	  return out;
	}


/***/ },
/* 54 */
/***/ function(module, exports) {

	'use strict';
	module.exports = function generate_multipleOf(it) {
	  var out = ' ';
	  var $lvl = it.level,
	    $dataLvl = it.dataLevel,
	    $schema = it.schema['multipleOf'],
	    $schemaPath = it.schemaPath + '.' + 'multipleOf',
	    $breakOnError = !it.opts.allErrors;
	  var $data = 'data' + ($dataLvl || ''),
	    $valid = 'valid' + $lvl,
	    $errs = 'errs' + $lvl;
	  out += 'var division' + ($lvl) + ' = ' + ($data) + ' / ' + ($schema) + ';if (' + ($data) + ' / ' + ($schema) + ' !== parseInt(division' + ($lvl) + ')) {  ';
	  if (!it.compositeRule && $breakOnError) {
	    out += ' validate.errors = [ { keyword: \'' + ('multipleOf') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: "' + ($schemaPath) + '" , params: { multipleOf: ' + ($schema) + ' } ';
	    if (it.opts.messages !== false) {
	      out += ' , message: \'should be multiple of ' + ($schema) + '\' ';
	    }
	    if (it.opts.verbose) {
	      out += ' , schema: ' + ($schema) + ' , data: ' + ($data) + ' ';
	    }
	    out += ' }]; return false; ';
	  } else {
	    out += '  var err =   { keyword: \'' + ('multipleOf') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: "' + ($schemaPath) + '" , params: { multipleOf: ' + ($schema) + ' } ';
	    if (it.opts.messages !== false) {
	      out += ' , message: \'should be multiple of ' + ($schema) + '\' ';
	    }
	    if (it.opts.verbose) {
	      out += ' , schema: ' + ($schema) + ' , data: ' + ($data) + ' ';
	    }
	    out += ' }; if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
	  }
	  out += '} ';
	  if ($breakOnError) {
	    out += ' else { ';
	  }
	  return out;
	}


/***/ },
/* 55 */
/***/ function(module, exports) {

	'use strict';
	module.exports = function generate_pattern(it) {
	  var out = ' ';
	  var $lvl = it.level,
	    $dataLvl = it.dataLevel,
	    $schema = it.schema['pattern'],
	    $schemaPath = it.schemaPath + '.' + 'pattern',
	    $breakOnError = !it.opts.allErrors;
	  var $data = 'data' + ($dataLvl || ''),
	    $valid = 'valid' + $lvl,
	    $errs = 'errs' + $lvl;
	  new RegExp($schema);
	  out += 'if (! ' + (it.usePattern($schema)) + '.test(' + ($data) + ') ) {  ';
	  if (!it.compositeRule && $breakOnError) {
	    out += ' validate.errors = [ { keyword: \'' + ('pattern') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: "' + ($schemaPath) + '" , params: { pattern: \'' + (it.util.escapeQuotes($schema)) + '\' } ';
	    if (it.opts.messages !== false) {
	      out += ' , message: \'should match pattern "' + (it.util.escapeQuotes($schema)) + '"\' ';
	    }
	    if (it.opts.verbose) {
	      out += ' , schema: ' + (it.util.toQuotedString($schema)) + ' , data: ' + ($data) + ' ';
	    }
	    out += ' }]; return false; ';
	  } else {
	    out += '  var err =   { keyword: \'' + ('pattern') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: "' + ($schemaPath) + '" , params: { pattern: \'' + (it.util.escapeQuotes($schema)) + '\' } ';
	    if (it.opts.messages !== false) {
	      out += ' , message: \'should match pattern "' + (it.util.escapeQuotes($schema)) + '"\' ';
	    }
	    if (it.opts.verbose) {
	      out += ' , schema: ' + (it.util.toQuotedString($schema)) + ' , data: ' + ($data) + ' ';
	    }
	    out += ' }; if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
	  }
	  out += '} ';
	  if ($breakOnError) {
	    out += ' else { ';
	  }
	  return out;
	}


/***/ },
/* 56 */
/***/ function(module, exports) {

	'use strict';
	module.exports = function generate_uniqueItems(it) {
	  var out = ' ';
	  var $lvl = it.level,
	    $dataLvl = it.dataLevel,
	    $schema = it.schema['uniqueItems'],
	    $schemaPath = it.schemaPath + '.' + 'uniqueItems',
	    $breakOnError = !it.opts.allErrors;
	  var $data = 'data' + ($dataLvl || ''),
	    $valid = 'valid' + $lvl,
	    $errs = 'errs' + $lvl;
	  if ($schema && it.opts.uniqueItems !== false) {
	    out += ' var ' + ($valid) + ' = true; if (' + ($data) + '.length > 1) { var i = ' + ($data) + '.length, j; outer: for (;i--;) { for (j = i; j--;) { if (equal(' + ($data) + '[i], ' + ($data) + '[j])) { ' + ($valid) + ' = false; break outer; } } } } if (!' + ($valid) + ') {  ';
	    if (!it.compositeRule && $breakOnError) {
	      out += ' validate.errors = [ { keyword: \'' + ('uniqueItems') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: "' + ($schemaPath) + '" , params: { i: i, j: j } ';
	      if (it.opts.messages !== false) {
	        out += ' , message: \'should NOT have duplicate items (items ## \' + j + \' and \' + i + \' are identical)\' ';
	      }
	      if (it.opts.verbose) {
	        out += ' , schema: ' + ($schema) + ' , data: ' + ($data) + ' ';
	      }
	      out += ' }]; return false; ';
	    } else {
	      out += '  var err =   { keyword: \'' + ('uniqueItems') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: "' + ($schemaPath) + '" , params: { i: i, j: j } ';
	      if (it.opts.messages !== false) {
	        out += ' , message: \'should NOT have duplicate items (items ## \' + j + \' and \' + i + \' are identical)\' ';
	      }
	      if (it.opts.verbose) {
	        out += ' , schema: ' + ($schema) + ' , data: ' + ($data) + ' ';
	      }
	      out += ' }; if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
	    }
	    out += ' } ';
	    if ($breakOnError) {
	      out += ' else { ';
	    }
	  } else {
	    if ($breakOnError) {
	      out += ' if (true) { ';
	    }
	  }
	  return out;
	}


/***/ },
/* 57 */
/***/ function(module, exports) {

	'use strict';
	module.exports = function generate_allOf(it) {
	  var out = ' ';
	  var $lvl = it.level,
	    $dataLvl = it.dataLevel,
	    $schema = it.schema['allOf'],
	    $schemaPath = it.schemaPath + '.' + 'allOf',
	    $breakOnError = !it.opts.allErrors;
	  var $data = 'data' + ($dataLvl || ''),
	    $valid = 'valid' + $lvl,
	    $errs = 'errs' + $lvl;
	  var $it = it.util.copy(it),
	    $closingBraces = '';
	  $it.level++;
	  var arr1 = $schema;
	  if (arr1) {
	    var $sch, $i = -1,
	      l1 = arr1.length - 1;
	    while ($i < l1) {
	      $sch = arr1[$i += 1];
	      if (it.util.schemaHasRules($sch, it.RULES.all)) {
	        $it.schema = $sch;
	        $it.schemaPath = $schemaPath + '[' + $i + ']';
	        out += ' ' + (it.validate($it)) + ' ';
	        if ($breakOnError) {
	          out += ' if (valid' + ($it.level) + ') { ';
	          $closingBraces += '}';
	        }
	      }
	    }
	  }
	  if ($breakOnError) {
	    out += ' ' + ($closingBraces.slice(0, -1));
	  }
	  out = it.util.cleanUpCode(out);
	  return out;
	}


/***/ },
/* 58 */
/***/ function(module, exports) {

	'use strict';
	module.exports = function generate_enum(it) {
	  var out = ' ';
	  var $lvl = it.level,
	    $dataLvl = it.dataLevel,
	    $schema = it.schema['enum'],
	    $schemaPath = it.schemaPath + '.' + 'enum',
	    $breakOnError = !it.opts.allErrors;
	  var $data = 'data' + ($dataLvl || ''),
	    $valid = 'valid' + $lvl,
	    $errs = 'errs' + $lvl;
	  var $i = 'i' + $lvl;
	  out += 'var enumSchema' + ($lvl) + ' = validate.schema' + ($schemaPath) + ' , ' + ($valid) + ' = false;for (var ' + ($i) + '=0; ' + ($i) + '<enumSchema' + ($lvl) + '.length; ' + ($i) + '++) if (equal(' + ($data) + ', enumSchema' + ($lvl) + '[' + ($i) + '])) { ' + ($valid) + ' = true; break; } if (!' + ($valid) + ') {  ';
	  if (!it.compositeRule && $breakOnError) {
	    out += ' validate.errors = [ { keyword: \'' + ('enum') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: "' + ($schemaPath) + '" , params: undefined ';
	    if (it.opts.messages !== false) {
	      out += ' , message: \'should be equal to one of values\' ';
	    }
	    if (it.opts.verbose) {
	      out += ' , schema: validate.schema' + ($schemaPath) + ' , data: ' + ($data) + ' ';
	    }
	    out += ' }]; return false; ';
	  } else {
	    out += '  var err =   { keyword: \'' + ('enum') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: "' + ($schemaPath) + '" , params: undefined ';
	    if (it.opts.messages !== false) {
	      out += ' , message: \'should be equal to one of values\' ';
	    }
	    if (it.opts.verbose) {
	      out += ' , schema: validate.schema' + ($schemaPath) + ' , data: ' + ($data) + ' ';
	    }
	    out += ' }; if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
	  }
	  out += ' }';
	  if ($breakOnError) {
	    out += ' else { ';
	  }
	  return out;
	}


/***/ },
/* 59 */
/***/ function(module, exports) {

	'use strict';
	module.exports = function generate_maxItems(it) {
	  var out = ' ';
	  var $lvl = it.level,
	    $dataLvl = it.dataLevel,
	    $schema = it.schema['maxItems'],
	    $schemaPath = it.schemaPath + '.' + 'maxItems',
	    $breakOnError = !it.opts.allErrors;
	  var $data = 'data' + ($dataLvl || ''),
	    $valid = 'valid' + $lvl,
	    $errs = 'errs' + $lvl;
	  out += 'if (' + ($data) + '.length > ' + ($schema) + ') {  ';
	  if (!it.compositeRule && $breakOnError) {
	    out += ' validate.errors = [ { keyword: \'' + ('maxItems') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: "' + ($schemaPath) + '" , params: { limit: ' + ($schema) + ' } ';
	    if (it.opts.messages !== false) {
	      out += ' , message: \'should NOT have more than ' + ($schema) + ' items\' ';
	    }
	    if (it.opts.verbose) {
	      out += ' , schema: ' + ($schema) + ' , data: ' + ($data) + ' ';
	    }
	    out += ' }]; return false; ';
	  } else {
	    out += '  var err =   { keyword: \'' + ('maxItems') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: "' + ($schemaPath) + '" , params: { limit: ' + ($schema) + ' } ';
	    if (it.opts.messages !== false) {
	      out += ' , message: \'should NOT have more than ' + ($schema) + ' items\' ';
	    }
	    if (it.opts.verbose) {
	      out += ' , schema: ' + ($schema) + ' , data: ' + ($data) + ' ';
	    }
	    out += ' }; if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
	  }
	  out += '} ';
	  if ($breakOnError) {
	    out += ' else { ';
	  }
	  return out;
	}


/***/ },
/* 60 */
/***/ function(module, exports) {

	'use strict';
	module.exports = function generate_maximum(it) {
	  var out = ' ';
	  var $lvl = it.level,
	    $dataLvl = it.dataLevel,
	    $schema = it.schema['maximum'],
	    $schemaPath = it.schemaPath + '.' + 'maximum',
	    $breakOnError = !it.opts.allErrors;
	  var $data = 'data' + ($dataLvl || ''),
	    $valid = 'valid' + $lvl,
	    $errs = 'errs' + $lvl;
	  var $exclusive = it.schema.exclusiveMaximum === true,
	    $op = $exclusive ? '<' : '<=',
	    $notOp = $exclusive ? '>=' : '>';
	  out += 'if (' + ($data) + ' ' + ($notOp) + ' ' + ($schema) + ') {  ';
	  if (!it.compositeRule && $breakOnError) {
	    out += ' validate.errors = [ { keyword: \'' + ('maximum') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: "' + ($schemaPath) + '" , params: { comparison: \'' + ($op) + '\', limit: ' + ($schema) + ', exclusive: ' + ($exclusive) + ' } ';
	    if (it.opts.messages !== false) {
	      out += ' , message: \'should be ' + ($op) + ' ' + ($schema) + '\' ';
	    }
	    if (it.opts.verbose) {
	      out += ' , schema: ' + ($schema) + ' , data: ' + ($data) + ' ';
	    }
	    out += ' }]; return false; ';
	  } else {
	    out += '  var err =   { keyword: \'' + ('maximum') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: "' + ($schemaPath) + '" , params: { comparison: \'' + ($op) + '\', limit: ' + ($schema) + ', exclusive: ' + ($exclusive) + ' } ';
	    if (it.opts.messages !== false) {
	      out += ' , message: \'should be ' + ($op) + ' ' + ($schema) + '\' ';
	    }
	    if (it.opts.verbose) {
	      out += ' , schema: ' + ($schema) + ' , data: ' + ($data) + ' ';
	    }
	    out += ' }; if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
	  }
	  out += '} ';
	  if ($breakOnError) {
	    out += ' else { ';
	  }
	  return out;
	}


/***/ },
/* 61 */
/***/ function(module, exports) {

	'use strict';
	module.exports = function generate_minProperties(it) {
	  var out = ' ';
	  var $lvl = it.level,
	    $dataLvl = it.dataLevel,
	    $schema = it.schema['minProperties'],
	    $schemaPath = it.schemaPath + '.' + 'minProperties',
	    $breakOnError = !it.opts.allErrors;
	  var $data = 'data' + ($dataLvl || ''),
	    $valid = 'valid' + $lvl,
	    $errs = 'errs' + $lvl;
	  out += 'if (Object.keys(' + ($data) + ').length < ' + ($schema) + ') {  ';
	  if (!it.compositeRule && $breakOnError) {
	    out += ' validate.errors = [ { keyword: \'' + ('minProperties') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: "' + ($schemaPath) + '" , params: { limit: ' + ($schema) + ' } ';
	    if (it.opts.messages !== false) {
	      out += ' , message: \'should NOT have less than ' + ($schema) + ' properties\' ';
	    }
	    if (it.opts.verbose) {
	      out += ' , schema: ' + ($schema) + ' , data: ' + ($data) + ' ';
	    }
	    out += ' }]; return false; ';
	  } else {
	    out += '  var err =   { keyword: \'' + ('minProperties') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: "' + ($schemaPath) + '" , params: { limit: ' + ($schema) + ' } ';
	    if (it.opts.messages !== false) {
	      out += ' , message: \'should NOT have less than ' + ($schema) + ' properties\' ';
	    }
	    if (it.opts.verbose) {
	      out += ' , schema: ' + ($schema) + ' , data: ' + ($data) + ' ';
	    }
	    out += ' }; if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
	  }
	  out += '} ';
	  if ($breakOnError) {
	    out += ' else { ';
	  }
	  return out;
	}


/***/ },
/* 62 */
/***/ function(module, exports) {

	'use strict';
	module.exports = function generate_not(it) {
	  var out = ' ';
	  var $lvl = it.level,
	    $dataLvl = it.dataLevel,
	    $schema = it.schema['not'],
	    $schemaPath = it.schemaPath + '.' + 'not',
	    $breakOnError = !it.opts.allErrors;
	  var $data = 'data' + ($dataLvl || ''),
	    $valid = 'valid' + $lvl,
	    $errs = 'errs' + $lvl;
	  var $it = it.util.copy(it),
	    $closingBraces = '';
	  $it.level++;
	  if (it.util.schemaHasRules($schema, it.RULES.all)) {
	    $it.schema = $schema;
	    $it.schemaPath = $schemaPath;
	    out += ' var ' + ($errs) + ' = errors;  ';
	    var $wasComposite = it.compositeRule;
	    it.compositeRule = $it.compositeRule = true;
	    out += ' ' + (it.validate($it)) + '  ';
	    it.compositeRule = $it.compositeRule = $wasComposite;
	    out += ' if (valid' + ($it.level) + ') {  ';
	    if (!it.compositeRule && $breakOnError) {
	      out += ' validate.errors = [ { keyword: \'' + ('not') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: "' + ($schemaPath) + '" , params: {} ';
	      if (it.opts.messages !== false) {
	        out += ' , message: \'should NOT be valid\' ';
	      }
	      if (it.opts.verbose) {
	        out += ' , schema: validate.schema' + ($schemaPath) + ' , data: ' + ($data) + ' ';
	      }
	      out += ' }]; return false; ';
	    } else {
	      out += '  var err =   { keyword: \'' + ('not') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: "' + ($schemaPath) + '" , params: {} ';
	      if (it.opts.messages !== false) {
	        out += ' , message: \'should NOT be valid\' ';
	      }
	      if (it.opts.verbose) {
	        out += ' , schema: validate.schema' + ($schemaPath) + ' , data: ' + ($data) + ' ';
	      }
	      out += ' }; if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
	    }
	    out += ' } else { errors = ' + ($errs) + '; if (vErrors !== null) { if (' + ($errs) + ') vErrors.length = ' + ($errs) + '; else vErrors = null; } ';
	    if (it.opts.allErrors) {
	      out += ' } ';
	    }
	  } else {
	    out += '  var err =   { keyword: \'' + ('not') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: "' + ($schemaPath) + '" , params: {} ';
	    if (it.opts.messages !== false) {
	      out += ' , message: \'should NOT be valid\' ';
	    }
	    if (it.opts.verbose) {
	      out += ' , schema: validate.schema' + ($schemaPath) + ' , data: ' + ($data) + ' ';
	    }
	    out += ' }; if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
	    if ($breakOnError) {
	      out += ' if (false) { ';
	    }
	  }
	  return out;
	}


/***/ },
/* 63 */
/***/ function(module, exports) {

	'use strict';
	module.exports = function generate_properties(it) {
	  var out = ' ';
	  var $lvl = it.level,
	    $dataLvl = it.dataLevel,
	    $schema = it.schema['properties'],
	    $schemaPath = it.schemaPath + '.' + 'properties',
	    $breakOnError = !it.opts.allErrors;
	  var $data = 'data' + ($dataLvl || ''),
	    $valid = 'valid' + $lvl,
	    $errs = 'errs' + $lvl;
	  var $it = it.util.copy(it),
	    $closingBraces = '';
	  $it.level++;
	  var $dataNxt = $it.dataLevel = it.dataLevel + 1,
	    $nextData = 'data' + $dataNxt;
	  var $schemaKeys = Object.keys($schema || {}),
	    $pProperties = it.schema.patternProperties || {},
	    $pPropertyKeys = Object.keys($pProperties),
	    $aProperties = it.schema.additionalProperties,
	    $someProperties = $schemaKeys.length || $pPropertyKeys.length,
	    $noAdditional = $aProperties === false,
	    $additionalIsSchema = typeof $aProperties == 'object' && Object.keys($aProperties).length,
	    $removeAdditional = it.opts.removeAdditional,
	    $checkAdditional = $noAdditional || $additionalIsSchema || $removeAdditional,
	    $requiredProperties = it.util.toHash(it.schema.required || []);
	  out += 'var ' + ($errs) + ' = errors;var valid' + ($it.level) + ' = true;';
	  if ($checkAdditional) {
	    out += ' for (var key' + ($lvl) + ' in ' + ($data) + ') { ';
	    if ($someProperties) {
	      out += ' var isAdditional' + ($lvl) + ' = !(false ';
	      if ($schemaKeys.length) {
	        if ($schemaKeys.length > 5) {
	          out += ' || validate.schema' + ($schemaPath) + '[key' + ($lvl) + '] ';
	        } else {
	          var arr1 = $schemaKeys;
	          if (arr1) {
	            var $propertyKey, i1 = -1,
	              l1 = arr1.length - 1;
	            while (i1 < l1) {
	              $propertyKey = arr1[i1 += 1];
	              out += ' || key' + ($lvl) + ' == ' + (it.util.toQuotedString($propertyKey)) + ' ';
	            }
	          }
	        }
	      }
	      if ($pPropertyKeys.length) {
	        var arr2 = $pPropertyKeys;
	        if (arr2) {
	          var $pProperty, $i = -1,
	            l2 = arr2.length - 1;
	          while ($i < l2) {
	            $pProperty = arr2[$i += 1];
	            out += ' || ' + (it.usePattern($pProperty)) + '.test(key' + ($lvl) + ') ';
	          }
	        }
	      }
	      out += ' ); if (isAdditional' + ($lvl) + ') { ';
	    }
	    if ($removeAdditional == 'all') {
	      out += ' delete ' + ($data) + '[key' + ($lvl) + ']; ';
	    } else {
	      var $currentErrorPath = it.errorPath;
	      var $additionalProperty = '\' + key' + $lvl + ' + \'';
	      if (it.opts._errorDataPathProperty) {
	        it.errorPath = it.util.getPathExpr(it.errorPath, 'key' + $lvl, it.opts.jsonPointers);
	      }
	      if ($noAdditional) {
	        if ($removeAdditional) {
	          out += ' delete ' + ($data) + '[key' + ($lvl) + ']; ';
	        } else {
	          out += ' valid' + ($it.level) + ' = false;  ';
	          if (!it.compositeRule && $breakOnError) {
	            out += ' validate.errors = [ { keyword: \'' + ('additionalProperties') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: "' + ($schemaPath) + '" , params: { additionalProperty: \'' + ($additionalProperty) + '\' } ';
	            if (it.opts.messages !== false) {
	              out += ' , message: \'should NOT have additional properties\' ';
	            }
	            if (it.opts.verbose) {
	              out += ' , schema: false , data: ' + ($data) + ' ';
	            }
	            out += ' }]; return false; ';
	          } else {
	            out += '  var err =   { keyword: \'' + ('additionalProperties') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: "' + ($schemaPath) + '" , params: { additionalProperty: \'' + ($additionalProperty) + '\' } ';
	            if (it.opts.messages !== false) {
	              out += ' , message: \'should NOT have additional properties\' ';
	            }
	            if (it.opts.verbose) {
	              out += ' , schema: false , data: ' + ($data) + ' ';
	            }
	            out += ' }; if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
	          }
	          if ($breakOnError) {
	            out += ' break; ';
	          }
	        }
	      } else if ($additionalIsSchema) {
	        if ($removeAdditional == 'failing') {
	          out += ' var ' + ($errs) + ' = errors;  ';
	          var $wasComposite = it.compositeRule;
	          it.compositeRule = $it.compositeRule = true;
	          $it.schema = $aProperties;
	          $it.schemaPath = it.schemaPath + '.additionalProperties';
	          $it.errorPath = it.opts._errorDataPathProperty ? it.errorPath : it.util.getPathExpr(it.errorPath, 'key' + $lvl, it.opts.jsonPointers);
	          var $passData = $data + '[key' + $lvl + ']';
	          var $code = it.validate($it);
	          if (it.util.varOccurences($code, $nextData) < 2) {
	            out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';
	          } else {
	            out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';
	          }
	          out += ' if (!valid' + ($it.level) + ') { errors = ' + ($errs) + '; if (validate.errors !== null) { if (errors) validate.errors.length = errors; else validate.errors = null; } delete ' + ($data) + '[key' + ($lvl) + ']; }  ';
	          it.compositeRule = $it.compositeRule = $wasComposite;
	        } else {
	          $it.schema = $aProperties;
	          $it.schemaPath = it.schemaPath + '.additionalProperties';
	          $it.errorPath = it.opts._errorDataPathProperty ? it.errorPath : it.util.getPathExpr(it.errorPath, 'key' + $lvl, it.opts.jsonPointers);
	          var $passData = $data + '[key' + $lvl + ']';
	          var $code = it.validate($it);
	          if (it.util.varOccurences($code, $nextData) < 2) {
	            out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';
	          } else {
	            out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';
	          }
	          if ($breakOnError) {
	            out += ' if (!valid' + ($it.level) + ') break; ';
	          }
	        }
	      }
	      it.errorPath = $currentErrorPath;
	    }
	    if ($someProperties) {
	      out += ' } ';
	    }
	    out += ' }  ';
	    if ($breakOnError) {
	      out += ' if (valid' + ($it.level) + ') { ';
	      $closingBraces += '}';
	    }
	  }
	  if ($schemaKeys.length) {
	    var arr3 = $schemaKeys;
	    if (arr3) {
	      var $propertyKey, i3 = -1,
	        l3 = arr3.length - 1;
	      while (i3 < l3) {
	        $propertyKey = arr3[i3 += 1];
	        var $sch = $schema[$propertyKey];
	        if (it.util.schemaHasRules($sch, it.RULES.all)) {
	          $it.schema = $sch;
	          var $prop = it.util.getProperty($propertyKey),
	            $passData = $data + $prop;
	          $it.schemaPath = $schemaPath + $prop;
	          $it.errorPath = it.util.getPath(it.errorPath, $propertyKey, it.opts.jsonPointers);
	          var $code = it.validate($it);
	          if (it.util.varOccurences($code, $nextData) < 2) {
	            $code = it.util.varReplace($code, $nextData, $passData);
	            var $useData = $passData;
	          } else {
	            var $useData = $nextData;
	            out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ';
	          }
	          if ($requiredProperties[$propertyKey]) {
	            out += ' if (' + ($useData) + ' === undefined) { valid' + ($it.level) + ' = false; ';
	            var $currentErrorPath = it.errorPath,
	              $missingProperty = it.util.escapeQuotes($propertyKey);
	            if (it.opts._errorDataPathProperty) {
	              it.errorPath = it.util.getPath($currentErrorPath, $propertyKey, it.opts.jsonPointers);
	            }
	            if (!it.compositeRule && $breakOnError) {
	              out += ' validate.errors = [ { keyword: \'' + ('required') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: "' + ($schemaPath) + '" , params: { missingProperty: \'' + ($missingProperty) + '\' } ';
	              if (it.opts.messages !== false) {
	                out += ' , message: \'';
	                if (it.opts._errorDataPathProperty) {
	                  out += 'is a required property';
	                } else {
	                  out += 'should have required property \\\'' + ($missingProperty) + '\\\'';
	                }
	                out += '\' ';
	              }
	              if (it.opts.verbose) {
	                out += ' , schema: validate.schema' + ($schemaPath) + ' , data: ' + ($data) + ' ';
	              }
	              out += ' }]; return false; ';
	            } else {
	              out += '  var err =   { keyword: \'' + ('required') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: "' + ($schemaPath) + '" , params: { missingProperty: \'' + ($missingProperty) + '\' } ';
	              if (it.opts.messages !== false) {
	                out += ' , message: \'';
	                if (it.opts._errorDataPathProperty) {
	                  out += 'is a required property';
	                } else {
	                  out += 'should have required property \\\'' + ($missingProperty) + '\\\'';
	                }
	                out += '\' ';
	              }
	              if (it.opts.verbose) {
	                out += ' , schema: validate.schema' + ($schemaPath) + ' , data: ' + ($data) + ' ';
	              }
	              out += ' }; if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
	            }
	            it.errorPath = $currentErrorPath;
	            out += ' } else { ';
	          } else {
	            if ($breakOnError) {
	              out += ' if (' + ($useData) + ' === undefined) { valid' + ($it.level) + ' = true; } else { ';
	            } else {
	              out += ' if (' + ($useData) + ' !== undefined) { ';
	            }
	          }
	          out += ' ' + ($code) + ' } ';
	        }
	        if ($breakOnError) {
	          out += ' if (valid' + ($it.level) + ') { ';
	          $closingBraces += '}';
	        }
	      }
	    }
	  }
	  var arr4 = $pPropertyKeys;
	  if (arr4) {
	    var $pProperty, i4 = -1,
	      l4 = arr4.length - 1;
	    while (i4 < l4) {
	      $pProperty = arr4[i4 += 1];
	      var $sch = $pProperties[$pProperty];
	      if (it.util.schemaHasRules($sch, it.RULES.all)) {
	        $it.schema = $sch;
	        $it.schemaPath = it.schemaPath + '.patternProperties' + it.util.getProperty($pProperty);
	        out += ' for (var key' + ($lvl) + ' in ' + ($data) + ') { if (' + (it.usePattern($pProperty)) + '.test(key' + ($lvl) + ')) { ';
	        $it.errorPath = it.util.getPathExpr(it.errorPath, 'key' + $lvl, it.opts.jsonPointers);
	        var $passData = $data + '[key' + $lvl + ']';
	        var $code = it.validate($it);
	        if (it.util.varOccurences($code, $nextData) < 2) {
	          out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';
	        } else {
	          out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';
	        }
	        if ($breakOnError) {
	          out += ' if (!valid' + ($it.level) + ') break; ';
	        }
	        out += ' } ';
	        if ($breakOnError) {
	          out += ' else valid' + ($it.level) + ' = true; ';
	        }
	        out += ' }  ';
	        if ($breakOnError) {
	          out += ' if (valid' + ($it.level) + ') { ';
	          $closingBraces += '}';
	        }
	      }
	    }
	  }
	  if ($breakOnError) {
	    out += ' ' + ($closingBraces) + ' if (' + ($errs) + ' == errors) {';
	  }
	  out = it.util.cleanUpCode(out);
	  return out;
	}


/***/ },
/* 64 */
/***/ function(module, exports) {

	'use strict';


	module.exports = {
	  enable: enableV5
	};


	function enableV5(ajv) {
	  ajv.addKeyword('constant', { macro: constantMacro });
	  ajv.addKeyword('contains', { macro: containsMacro });
	}

	function constantMacro(schema) {
	  return { enum: [schema] };
	}

	function containsMacro(schema) {
	  return { not: { items: { not: schema } } };
	}


/***/ },
/* 65 */
/***/ function(module, exports) {

	'use strict';

	/**
	 * Create validating function for passed schema with asynchronous loading of missing schemas.
	 * `loadSchema` option should be a function that accepts schema uri and node-style callback.
	 * @param  {String|Object} schema
	 * @param  {Function} callback node-style callback, it is always called with 2 parameters: error (or null) and validating function.
	 */
	module.exports = function compileAsync(schema, callback) {
	  var schemaObj;
	  var self = this;
	  try {
	    schemaObj = this._addSchema(schema);
	  } catch(e) {
	    setTimeout(function() { callback(e); });
	    return;
	  }
	  if (schemaObj.validate)
	    setTimeout(function() { callback(null, schemaObj.validate); });
	  else {
	    if (typeof this.opts.loadSchema != 'function')
	      throw new Error('options.loadSchema should be a function');
	    _compileAsync(schema, callback, true);
	  }


	  function _compileAsync(schema, callback, firstCall) {
	    var validate;
	    try { validate = self.compile(schema); }
	    catch(e) {
	      if (e.missingSchema) loadMissingSchema(e);
	      else deferCallback(e);
	      return;
	    }
	    deferCallback(null, validate);

	    function loadMissingSchema(e) {
	      var ref = e.missingSchema;
	      if (self._refs[ref] || self._schemas[ref])
	        return callback(new Error('Schema ' + ref + ' is loaded but' + e.missingRef + 'cannot be resolved'));
	      var _callbacks = self._loadingSchemas[ref];
	      if (_callbacks) {
	        if (typeof _callbacks == 'function')
	          self._loadingSchemas[ref] = [_callbacks, schemaLoaded];
	        else
	          _callbacks[_callbacks.length] = schemaLoaded;
	      } else {
	        self._loadingSchemas[ref] = schemaLoaded;
	        self.opts.loadSchema(ref, function (err, sch) {
	          var _callbacks = self._loadingSchemas[ref];
	          delete self._loadingSchemas[ref];
	          if (typeof _callbacks == 'function')
	            _callbacks(err, sch);
	          else
	            for (var i=0; i<_callbacks.length; i++)
	              _callbacks[i](err, sch);
	        });
	      }

	      function schemaLoaded(err, sch) {
	        if (err) callback(err);
	        else {
	          if (!(self._refs[ref] || self._schemas[ref])) {
	            try {
	              self.addSchema(sch, ref);
	            } catch(e) {
	              callback(e);
	              return;
	            }
	          }
	          _compileAsync(schema, callback);
	        }
	      }
	    }

	    function deferCallback(err, validate) {
	      if (firstCall) setTimeout(function() { callback(err, validate); });
	      else callback(err, validate);
	    }
	  }
	};


/***/ },
/* 66 */
/***/ function(module, exports) {

	'use strict';

	/**
	 * Define custom keyword
	 * @param {String} keyword custom keyword, should be a valid identifier, should be different from all standard, custom and macro keywords.
	 * @param {Object} definition keyword definition object with properties `type` (type(s) which the keyword applies to), `validate` or `compile`.
	 */
	module.exports = function addKeyword(keyword, definition) {
	  var self = this;
	  if (this.RULES.keywords[keyword])
	    throw new Error('Keyword ' + keyword + ' is already defined');

	  if (definition.macro) {
	    if (definition.type) throw new Error('type cannot be defined for macro keywords');
	    _addMacro(keyword, definition.macro);
	  } else {
	    var dataType = definition.type;
	    if (Array.isArray(dataType)) {
	      var i, len = dataType.length;
	      for (i=0; i<len; i++) checkDataType(dataType[i]);
	      for (i=0; i<len; i++) _addRule(keyword, dataType[i], definition);
	    } else {
	      if (dataType) checkDataType(dataType);
	      _addRule(keyword, dataType, definition);
	    }
	  }

	  this.RULES.keywords[keyword] = true;
	  this.RULES.all[keyword] = true;


	  function _addRule(keyword, dataType, definition) {
	    var ruleGroup;
	    for (var i=0; i<self.RULES.length; i++) {
	      var rg = self.RULES[i];
	      if (rg.type == dataType) {
	        ruleGroup = rg;
	        break;
	      }
	    }

	    if (!ruleGroup) {
	      ruleGroup = { type: dataType, rules: [] };
	      self.RULES.push(ruleGroup);
	    }

	    var rule = { keyword: keyword, definition: definition, custom: true };
	    ruleGroup.rules.push(rule);
	  }


	  function _addMacro(keyword, macro) {
	    var macros = self.RULES.macros;
	    var rule = { keyword: keyword, macro: macro };
	    if (macros) macros[macros.length] = rule;
	    else self.RULES.macros = [rule];
	    self.RULES.allMacros = self.RULES.allMacros || {};
	    self.RULES.allMacros[keyword] = true;
	  }


	  function checkDataType(dataType) {
	    if (!self.RULES.types[dataType]) throw new Error('Unknown type ' + dataType);
	  }
	};


/***/ },
/* 67 */
/***/ function(module, exports) {

	module.exports = {
		"id": "http://json-schema.org/draft-04/schema#",
		"$schema": "http://json-schema.org/draft-04/schema#",
		"description": "Core schema meta-schema",
		"definitions": {
			"schemaArray": {
				"type": "array",
				"minItems": 1,
				"items": {
					"$ref": "#"
				}
			},
			"positiveInteger": {
				"type": "integer",
				"minimum": 0
			},
			"positiveIntegerDefault0": {
				"allOf": [
					{
						"$ref": "#/definitions/positiveInteger"
					},
					{
						"default": 0
					}
				]
			},
			"simpleTypes": {
				"enum": [
					"array",
					"boolean",
					"integer",
					"null",
					"number",
					"object",
					"string"
				]
			},
			"stringArray": {
				"type": "array",
				"items": {
					"type": "string"
				},
				"minItems": 1,
				"uniqueItems": true
			}
		},
		"type": "object",
		"properties": {
			"id": {
				"type": "string",
				"format": "uri"
			},
			"$schema": {
				"type": "string",
				"format": "uri"
			},
			"title": {
				"type": "string"
			},
			"description": {
				"type": "string"
			},
			"default": {},
			"multipleOf": {
				"type": "number",
				"minimum": 0,
				"exclusiveMinimum": true
			},
			"maximum": {
				"type": "number"
			},
			"exclusiveMaximum": {
				"type": "boolean",
				"default": false
			},
			"minimum": {
				"type": "number"
			},
			"exclusiveMinimum": {
				"type": "boolean",
				"default": false
			},
			"maxLength": {
				"$ref": "#/definitions/positiveInteger"
			},
			"minLength": {
				"$ref": "#/definitions/positiveIntegerDefault0"
			},
			"pattern": {
				"type": "string",
				"format": "regex"
			},
			"additionalItems": {
				"anyOf": [
					{
						"type": "boolean"
					},
					{
						"$ref": "#"
					}
				],
				"default": {}
			},
			"items": {
				"anyOf": [
					{
						"$ref": "#"
					},
					{
						"$ref": "#/definitions/schemaArray"
					}
				],
				"default": {}
			},
			"maxItems": {
				"$ref": "#/definitions/positiveInteger"
			},
			"minItems": {
				"$ref": "#/definitions/positiveIntegerDefault0"
			},
			"uniqueItems": {
				"type": "boolean",
				"default": false
			},
			"maxProperties": {
				"$ref": "#/definitions/positiveInteger"
			},
			"minProperties": {
				"$ref": "#/definitions/positiveIntegerDefault0"
			},
			"required": {
				"$ref": "#/definitions/stringArray"
			},
			"additionalProperties": {
				"anyOf": [
					{
						"type": "boolean"
					},
					{
						"$ref": "#"
					}
				],
				"default": {}
			},
			"definitions": {
				"type": "object",
				"additionalProperties": {
					"$ref": "#"
				},
				"default": {}
			},
			"properties": {
				"type": "object",
				"additionalProperties": {
					"$ref": "#"
				},
				"default": {}
			},
			"patternProperties": {
				"type": "object",
				"additionalProperties": {
					"$ref": "#"
				},
				"default": {}
			},
			"dependencies": {
				"type": "object",
				"additionalProperties": {
					"anyOf": [
						{
							"$ref": "#"
						},
						{
							"$ref": "#/definitions/stringArray"
						}
					]
				}
			},
			"enum": {
				"type": "array",
				"minItems": 1,
				"uniqueItems": true
			},
			"type": {
				"anyOf": [
					{
						"$ref": "#/definitions/simpleTypes"
					},
					{
						"type": "array",
						"items": {
							"$ref": "#/definitions/simpleTypes"
						},
						"minItems": 1,
						"uniqueItems": true
					}
				]
			},
			"allOf": {
				"$ref": "#/definitions/schemaArray"
			},
			"anyOf": {
				"$ref": "#/definitions/schemaArray"
			},
			"oneOf": {
				"$ref": "#/definitions/schemaArray"
			},
			"not": {
				"$ref": "#"
			}
		},
		"dependencies": {
			"exclusiveMaximum": [
				"maximum"
			],
			"exclusiveMinimum": [
				"minimum"
			]
		},
		"default": {}
	};

/***/ },
/* 68 */
/***/ function(module, exports) {

	module.exports = {
		"type": "object",
		"definitions": {
			"ValueSet": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"url": {
						"$ref": "#/definitions/uri"
					},
					"_url": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"identifier": {
						"$ref": "#/definitions/Identifier"
					},
					"version": {
						"type": "string"
					},
					"_version": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"name": {
						"type": "string"
					},
					"_name": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"status": {
						"$ref": "#/definitions/code"
					},
					"_status": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"experimental": {
						"type": "boolean"
					},
					"_experimental": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"publisher": {
						"type": "string"
					},
					"_publisher": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"contact": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"name": {
									"type": "string"
								},
								"_name": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"telecom": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/ContactPoint"
									}
								}
							}
						}
					},
					"date": {
						"$ref": "#/definitions/dateTime"
					},
					"_date": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"lockedDate": {
						"$ref": "#/definitions/date"
					},
					"_lockedDate": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"description": {
						"type": "string"
					},
					"_description": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"useContext": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/CodeableConcept"
						}
					},
					"immutable": {
						"type": "boolean"
					},
					"_immutable": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"requirements": {
						"type": "string"
					},
					"_requirements": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"copyright": {
						"type": "string"
					},
					"_copyright": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"extensible": {
						"type": "boolean"
					},
					"_extensible": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"codeSystem": {
						"type": "object",
						"additionalProperties": false,
						"properties": {
							"fhir_comments": {
								"type": "array",
								"items": {
									"type": "string"
								}
							},
							"id": {
								"$ref": "#/definitions/fhir_id"
							},
							"_id": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							},
							"extension": {
								"type": "array",
								"minItems": 0,
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							},
							"modifierExtension": {
								"type": "array",
								"minItems": 0,
								"items": {
									"$ref": "#/definitions/Extension"
								}
							},
							"system": {
								"$ref": "#/definitions/uri"
							},
							"_system": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							},
							"version": {
								"type": "string"
							},
							"_version": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							},
							"caseSensitive": {
								"type": "boolean"
							},
							"_caseSensitive": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							},
							"concept": {
								"type": "array",
								"minItems": 1,
								"items": {
									"type": "object",
									"properties": {
										"id": {
											"$ref": "#/definitions/fhir_id"
										},
										"_id": {
											"type": "object",
											"properties": {
												"extension": {
													"type": "array",
													"items": {
														"oneOf": [
															{
																"$ref": "#/definitions/Extension"
															},
															{
																"type": "null"
															}
														]
													}
												}
											}
										},
										"extension": {
											"type": "array",
											"minItems": 0,
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										},
										"modifierExtension": {
											"type": "array",
											"minItems": 0,
											"items": {
												"$ref": "#/definitions/Extension"
											}
										},
										"code": {
											"$ref": "#/definitions/code"
										},
										"_code": {
											"type": "object",
											"properties": {
												"extension": {
													"type": "array",
													"items": {
														"oneOf": [
															{
																"$ref": "#/definitions/Extension"
															},
															{
																"type": "null"
															}
														]
													}
												}
											}
										},
										"abstract": {
											"type": "boolean"
										},
										"_abstract": {
											"type": "object",
											"properties": {
												"extension": {
													"type": "array",
													"items": {
														"oneOf": [
															{
																"$ref": "#/definitions/Extension"
															},
															{
																"type": "null"
															}
														]
													}
												}
											}
										},
										"display": {
											"type": "string"
										},
										"_display": {
											"type": "object",
											"properties": {
												"extension": {
													"type": "array",
													"items": {
														"oneOf": [
															{
																"$ref": "#/definitions/Extension"
															},
															{
																"type": "null"
															}
														]
													}
												}
											}
										},
										"definition": {
											"type": "string"
										},
										"_definition": {
											"type": "object",
											"properties": {
												"extension": {
													"type": "array",
													"items": {
														"oneOf": [
															{
																"$ref": "#/definitions/Extension"
															},
															{
																"type": "null"
															}
														]
													}
												}
											}
										},
										"designation": {
											"type": "array",
											"minItems": 0,
											"items": {
												"type": "object",
												"properties": {
													"id": {
														"$ref": "#/definitions/fhir_id"
													},
													"_id": {
														"type": "object",
														"properties": {
															"extension": {
																"type": "array",
																"items": {
																	"oneOf": [
																		{
																			"$ref": "#/definitions/Extension"
																		},
																		{
																			"type": "null"
																		}
																	]
																}
															}
														}
													},
													"extension": {
														"type": "array",
														"minItems": 0,
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													},
													"modifierExtension": {
														"type": "array",
														"minItems": 0,
														"items": {
															"$ref": "#/definitions/Extension"
														}
													},
													"language": {
														"$ref": "#/definitions/code"
													},
													"_language": {
														"type": "object",
														"properties": {
															"extension": {
																"type": "array",
																"items": {
																	"oneOf": [
																		{
																			"$ref": "#/definitions/Extension"
																		},
																		{
																			"type": "null"
																		}
																	]
																}
															}
														}
													},
													"use": {
														"$ref": "#/definitions/Coding"
													},
													"value": {
														"type": "string"
													},
													"_value": {
														"type": "object",
														"properties": {
															"extension": {
																"type": "array",
																"items": {
																	"oneOf": [
																		{
																			"$ref": "#/definitions/Extension"
																		},
																		{
																			"type": "null"
																		}
																	]
																}
															}
														}
													}
												}
											}
										},
										"concept": {
											"type": "array",
											"minItems": 0,
											"items": {
												"type": "object"
											}
										}
									}
								}
							}
						}
					},
					"compose": {
						"type": "object",
						"additionalProperties": false,
						"properties": {
							"fhir_comments": {
								"type": "array",
								"items": {
									"type": "string"
								}
							},
							"id": {
								"$ref": "#/definitions/fhir_id"
							},
							"_id": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							},
							"extension": {
								"type": "array",
								"minItems": 0,
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							},
							"modifierExtension": {
								"type": "array",
								"minItems": 0,
								"items": {
									"$ref": "#/definitions/Extension"
								}
							},
							"import": {
								"type": "array",
								"minItems": 0,
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/uri"
										},
										{
											"type": "null"
										}
									]
								}
							},
							"_import": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"type": "object",
											"properties": {
												"extension": {
													"type": "array",
													"items": {
														"oneOf": [
															{
																"$ref": "#/definitions/Extension"
															},
															{
																"type": "null"
															}
														]
													}
												}
											}
										},
										{
											"type": "null"
										}
									]
								}
							},
							"include": {
								"type": "array",
								"minItems": 0,
								"items": {
									"type": "object",
									"properties": {
										"id": {
											"$ref": "#/definitions/fhir_id"
										},
										"_id": {
											"type": "object",
											"properties": {
												"extension": {
													"type": "array",
													"items": {
														"oneOf": [
															{
																"$ref": "#/definitions/Extension"
															},
															{
																"type": "null"
															}
														]
													}
												}
											}
										},
										"extension": {
											"type": "array",
											"minItems": 0,
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										},
										"modifierExtension": {
											"type": "array",
											"minItems": 0,
											"items": {
												"$ref": "#/definitions/Extension"
											}
										},
										"system": {
											"$ref": "#/definitions/uri"
										},
										"_system": {
											"type": "object",
											"properties": {
												"extension": {
													"type": "array",
													"items": {
														"oneOf": [
															{
																"$ref": "#/definitions/Extension"
															},
															{
																"type": "null"
															}
														]
													}
												}
											}
										},
										"version": {
											"type": "string"
										},
										"_version": {
											"type": "object",
											"properties": {
												"extension": {
													"type": "array",
													"items": {
														"oneOf": [
															{
																"$ref": "#/definitions/Extension"
															},
															{
																"type": "null"
															}
														]
													}
												}
											}
										},
										"concept": {
											"type": "array",
											"minItems": 0,
											"items": {
												"type": "object",
												"properties": {
													"id": {
														"$ref": "#/definitions/fhir_id"
													},
													"_id": {
														"type": "object",
														"properties": {
															"extension": {
																"type": "array",
																"items": {
																	"oneOf": [
																		{
																			"$ref": "#/definitions/Extension"
																		},
																		{
																			"type": "null"
																		}
																	]
																}
															}
														}
													},
													"extension": {
														"type": "array",
														"minItems": 0,
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													},
													"modifierExtension": {
														"type": "array",
														"minItems": 0,
														"items": {
															"$ref": "#/definitions/Extension"
														}
													},
													"code": {
														"$ref": "#/definitions/code"
													},
													"_code": {
														"type": "object",
														"properties": {
															"extension": {
																"type": "array",
																"items": {
																	"oneOf": [
																		{
																			"$ref": "#/definitions/Extension"
																		},
																		{
																			"type": "null"
																		}
																	]
																}
															}
														}
													},
													"display": {
														"type": "string"
													},
													"_display": {
														"type": "object",
														"properties": {
															"extension": {
																"type": "array",
																"items": {
																	"oneOf": [
																		{
																			"$ref": "#/definitions/Extension"
																		},
																		{
																			"type": "null"
																		}
																	]
																}
															}
														}
													},
													"designation": {
														"type": "array",
														"minItems": 0,
														"items": {
															"type": "object"
														}
													}
												}
											}
										},
										"filter": {
											"type": "array",
											"minItems": 0,
											"items": {
												"type": "object",
												"properties": {
													"id": {
														"$ref": "#/definitions/fhir_id"
													},
													"_id": {
														"type": "object",
														"properties": {
															"extension": {
																"type": "array",
																"items": {
																	"oneOf": [
																		{
																			"$ref": "#/definitions/Extension"
																		},
																		{
																			"type": "null"
																		}
																	]
																}
															}
														}
													},
													"extension": {
														"type": "array",
														"minItems": 0,
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													},
													"modifierExtension": {
														"type": "array",
														"minItems": 0,
														"items": {
															"$ref": "#/definitions/Extension"
														}
													},
													"property": {
														"$ref": "#/definitions/code"
													},
													"_property": {
														"type": "object",
														"properties": {
															"extension": {
																"type": "array",
																"items": {
																	"oneOf": [
																		{
																			"$ref": "#/definitions/Extension"
																		},
																		{
																			"type": "null"
																		}
																	]
																}
															}
														}
													},
													"op": {
														"$ref": "#/definitions/code"
													},
													"_op": {
														"type": "object",
														"properties": {
															"extension": {
																"type": "array",
																"items": {
																	"oneOf": [
																		{
																			"$ref": "#/definitions/Extension"
																		},
																		{
																			"type": "null"
																		}
																	]
																}
															}
														}
													},
													"value": {
														"$ref": "#/definitions/code"
													},
													"_value": {
														"type": "object",
														"properties": {
															"extension": {
																"type": "array",
																"items": {
																	"oneOf": [
																		{
																			"$ref": "#/definitions/Extension"
																		},
																		{
																			"type": "null"
																		}
																	]
																}
															}
														}
													}
												}
											}
										}
									}
								}
							},
							"exclude": {
								"type": "array",
								"minItems": 0,
								"items": {
									"type": "object"
								}
							}
						}
					},
					"expansion": {
						"type": "object",
						"additionalProperties": false,
						"properties": {
							"fhir_comments": {
								"type": "array",
								"items": {
									"type": "string"
								}
							},
							"id": {
								"$ref": "#/definitions/fhir_id"
							},
							"_id": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							},
							"extension": {
								"type": "array",
								"minItems": 0,
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							},
							"modifierExtension": {
								"type": "array",
								"minItems": 0,
								"items": {
									"$ref": "#/definitions/Extension"
								}
							},
							"identifier": {
								"$ref": "#/definitions/uri"
							},
							"_identifier": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							},
							"timestamp": {
								"$ref": "#/definitions/dateTime"
							},
							"_timestamp": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							},
							"total": {
								"type": "integer"
							},
							"_total": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							},
							"offset": {
								"type": "integer"
							},
							"_offset": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							},
							"parameter": {
								"type": "array",
								"minItems": 0,
								"items": {
									"type": "object",
									"properties": {
										"id": {
											"$ref": "#/definitions/fhir_id"
										},
										"_id": {
											"type": "object",
											"properties": {
												"extension": {
													"type": "array",
													"items": {
														"oneOf": [
															{
																"$ref": "#/definitions/Extension"
															},
															{
																"type": "null"
															}
														]
													}
												}
											}
										},
										"extension": {
											"type": "array",
											"minItems": 0,
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										},
										"modifierExtension": {
											"type": "array",
											"minItems": 0,
											"items": {
												"$ref": "#/definitions/Extension"
											}
										},
										"name": {
											"type": "string"
										},
										"_name": {
											"type": "object",
											"properties": {
												"extension": {
													"type": "array",
													"items": {
														"oneOf": [
															{
																"$ref": "#/definitions/Extension"
															},
															{
																"type": "null"
															}
														]
													}
												}
											}
										},
										"valueString": {
											"type": "string"
										},
										"_valueString": {
											"type": "object",
											"properties": {
												"extension": {
													"type": "array",
													"items": {
														"oneOf": [
															{
																"$ref": "#/definitions/Extension"
															},
															{
																"type": "null"
															}
														]
													}
												}
											}
										},
										"valueBoolean": {
											"type": "boolean"
										},
										"_valueBoolean": {
											"type": "object",
											"properties": {
												"extension": {
													"type": "array",
													"items": {
														"oneOf": [
															{
																"$ref": "#/definitions/Extension"
															},
															{
																"type": "null"
															}
														]
													}
												}
											}
										},
										"valueInteger": {
											"type": "integer"
										},
										"_valueInteger": {
											"type": "object",
											"properties": {
												"extension": {
													"type": "array",
													"items": {
														"oneOf": [
															{
																"$ref": "#/definitions/Extension"
															},
															{
																"type": "null"
															}
														]
													}
												}
											}
										},
										"valueDecimal": {
											"$ref": "#/definitions/decimal"
										},
										"_valueDecimal": {
											"type": "object",
											"properties": {
												"extension": {
													"type": "array",
													"items": {
														"oneOf": [
															{
																"$ref": "#/definitions/Extension"
															},
															{
																"type": "null"
															}
														]
													}
												}
											}
										},
										"valueUri": {
											"$ref": "#/definitions/uri"
										},
										"_valueUri": {
											"type": "object",
											"properties": {
												"extension": {
													"type": "array",
													"items": {
														"oneOf": [
															{
																"$ref": "#/definitions/Extension"
															},
															{
																"type": "null"
															}
														]
													}
												}
											}
										},
										"valueCode": {
											"$ref": "#/definitions/code"
										},
										"_valueCode": {
											"type": "object",
											"properties": {
												"extension": {
													"type": "array",
													"items": {
														"oneOf": [
															{
																"$ref": "#/definitions/Extension"
															},
															{
																"type": "null"
															}
														]
													}
												}
											}
										}
									}
								}
							},
							"contains": {
								"type": "array",
								"minItems": 0,
								"items": {
									"type": "object",
									"properties": {
										"id": {
											"$ref": "#/definitions/fhir_id"
										},
										"_id": {
											"type": "object",
											"properties": {
												"extension": {
													"type": "array",
													"items": {
														"oneOf": [
															{
																"$ref": "#/definitions/Extension"
															},
															{
																"type": "null"
															}
														]
													}
												}
											}
										},
										"extension": {
											"type": "array",
											"minItems": 0,
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										},
										"modifierExtension": {
											"type": "array",
											"minItems": 0,
											"items": {
												"$ref": "#/definitions/Extension"
											}
										},
										"system": {
											"$ref": "#/definitions/uri"
										},
										"_system": {
											"type": "object",
											"properties": {
												"extension": {
													"type": "array",
													"items": {
														"oneOf": [
															{
																"$ref": "#/definitions/Extension"
															},
															{
																"type": "null"
															}
														]
													}
												}
											}
										},
										"abstract": {
											"type": "boolean"
										},
										"_abstract": {
											"type": "object",
											"properties": {
												"extension": {
													"type": "array",
													"items": {
														"oneOf": [
															{
																"$ref": "#/definitions/Extension"
															},
															{
																"type": "null"
															}
														]
													}
												}
											}
										},
										"version": {
											"type": "string"
										},
										"_version": {
											"type": "object",
											"properties": {
												"extension": {
													"type": "array",
													"items": {
														"oneOf": [
															{
																"$ref": "#/definitions/Extension"
															},
															{
																"type": "null"
															}
														]
													}
												}
											}
										},
										"code": {
											"$ref": "#/definitions/code"
										},
										"_code": {
											"type": "object",
											"properties": {
												"extension": {
													"type": "array",
													"items": {
														"oneOf": [
															{
																"$ref": "#/definitions/Extension"
															},
															{
																"type": "null"
															}
														]
													}
												}
											}
										},
										"display": {
											"type": "string"
										},
										"_display": {
											"type": "object",
											"properties": {
												"extension": {
													"type": "array",
													"items": {
														"oneOf": [
															{
																"$ref": "#/definitions/Extension"
															},
															{
																"type": "null"
															}
														]
													}
												}
											}
										},
										"contains": {
											"type": "array",
											"minItems": 0,
											"items": {
												"type": "object"
											}
										}
									}
								}
							}
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"DomainResource": {
				"type": "object",
				"additionalProperties": true,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"Parameters": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"parameter": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"name": {
									"type": "string"
								},
								"_name": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"valueBoolean": {
									"type": "boolean"
								},
								"_valueBoolean": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"valueInteger": {
									"type": "integer"
								},
								"_valueInteger": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"valueDecimal": {
									"$ref": "#/definitions/decimal"
								},
								"_valueDecimal": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"valueBase64Binary": {
									"$ref": "#/definitions/base64Binary"
								},
								"_valueBase64Binary": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"valueInstant": {
									"$ref": "#/definitions/instant"
								},
								"_valueInstant": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"valueString": {
									"type": "string"
								},
								"_valueString": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"valueUri": {
									"$ref": "#/definitions/uri"
								},
								"_valueUri": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"valueDate": {
									"$ref": "#/definitions/date"
								},
								"_valueDate": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"valueDateTime": {
									"$ref": "#/definitions/dateTime"
								},
								"_valueDateTime": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"valueTime": {
									"$ref": "#/definitions/time"
								},
								"_valueTime": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"valueCode": {
									"$ref": "#/definitions/code"
								},
								"_valueCode": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"valueOid": {
									"$ref": "#/definitions/oid"
								},
								"_valueOid": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"valueId": {
									"$ref": "#/definitions/fhir_id"
								},
								"_valueId": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"valueUnsignedInt": {
									"$ref": "#/definitions/unsignedInt"
								},
								"_valueUnsignedInt": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"valuePositiveInt": {
									"$ref": "#/definitions/positiveInt"
								},
								"_valuePositiveInt": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"valueMarkdown": {
									"$ref": "#/definitions/markdown"
								},
								"_valueMarkdown": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"valueAnnotation": {
									"$ref": "#/definitions/Annotation"
								},
								"valueAttachment": {
									"$ref": "#/definitions/Attachment"
								},
								"valueIdentifier": {
									"$ref": "#/definitions/Identifier"
								},
								"valueCodeableConcept": {
									"$ref": "#/definitions/CodeableConcept"
								},
								"valueCoding": {
									"$ref": "#/definitions/Coding"
								},
								"valueQuantity": {
									"$ref": "#/definitions/Quantity"
								},
								"valueRange": {
									"$ref": "#/definitions/Range"
								},
								"valuePeriod": {
									"$ref": "#/definitions/Period"
								},
								"valueRatio": {
									"$ref": "#/definitions/Ratio"
								},
								"valueSampledData": {
									"$ref": "#/definitions/SampledData"
								},
								"valueSignature": {
									"$ref": "#/definitions/Signature"
								},
								"valueHumanName": {
									"$ref": "#/definitions/HumanName"
								},
								"valueAddress": {
									"$ref": "#/definitions/Address"
								},
								"valueContactPoint": {
									"$ref": "#/definitions/ContactPoint"
								},
								"valueTiming": {
									"$ref": "#/definitions/Timing"
								},
								"valueReference": {
									"$ref": "#/definitions/Reference"
								},
								"valueMeta": {
									"$ref": "#/definitions/Meta"
								},
								"resource": {
									"$ref": "#/definitions/Resource"
								},
								"part": {
									"type": "array",
									"minItems": 0,
									"items": {
										"type": "object"
									}
								}
							}
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"Resource": {
				"type": "object",
				"additionalProperties": true,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"Account": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"identifier": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Identifier"
						}
					},
					"name": {
						"type": "string"
					},
					"_name": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"type": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"status": {
						"$ref": "#/definitions/code"
					},
					"_status": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"activePeriod": {
						"$ref": "#/definitions/Period"
					},
					"currency": {
						"$ref": "#/definitions/Coding"
					},
					"balance": {
						"$ref": "#/definitions/Quantity"
					},
					"coveragePeriod": {
						"$ref": "#/definitions/Period"
					},
					"subject": {
						"$ref": "#/definitions/Reference"
					},
					"owner": {
						"$ref": "#/definitions/Reference"
					},
					"description": {
						"type": "string"
					},
					"_description": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"AllergyIntolerance": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"identifier": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Identifier"
						}
					},
					"onset": {
						"$ref": "#/definitions/dateTime"
					},
					"_onset": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"recordedDate": {
						"$ref": "#/definitions/dateTime"
					},
					"_recordedDate": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"recorder": {
						"$ref": "#/definitions/Reference"
					},
					"patient": {
						"$ref": "#/definitions/Reference"
					},
					"reporter": {
						"$ref": "#/definitions/Reference"
					},
					"substance": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"status": {
						"$ref": "#/definitions/code"
					},
					"_status": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"criticality": {
						"$ref": "#/definitions/code"
					},
					"_criticality": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"type": {
						"$ref": "#/definitions/code"
					},
					"_type": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"category": {
						"$ref": "#/definitions/code"
					},
					"_category": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"lastOccurence": {
						"$ref": "#/definitions/dateTime"
					},
					"_lastOccurence": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"note": {
						"$ref": "#/definitions/Annotation"
					},
					"reaction": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"substance": {
									"$ref": "#/definitions/CodeableConcept"
								},
								"certainty": {
									"$ref": "#/definitions/code"
								},
								"_certainty": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"manifestation": {
									"type": "array",
									"minItems": 1,
									"items": {
										"$ref": "#/definitions/CodeableConcept"
									}
								},
								"description": {
									"type": "string"
								},
								"_description": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"onset": {
									"$ref": "#/definitions/dateTime"
								},
								"_onset": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"severity": {
									"$ref": "#/definitions/code"
								},
								"_severity": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"exposureRoute": {
									"$ref": "#/definitions/CodeableConcept"
								},
								"note": {
									"$ref": "#/definitions/Annotation"
								}
							}
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"Appointment": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"identifier": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Identifier"
						}
					},
					"status": {
						"$ref": "#/definitions/code"
					},
					"_status": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"type": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"reason": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"priority": {
						"$ref": "#/definitions/unsignedInt"
					},
					"_priority": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"description": {
						"type": "string"
					},
					"_description": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"start": {
						"$ref": "#/definitions/instant"
					},
					"_start": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"end": {
						"$ref": "#/definitions/instant"
					},
					"_end": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"minutesDuration": {
						"$ref": "#/definitions/positiveInt"
					},
					"_minutesDuration": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"slot": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Reference"
						}
					},
					"comment": {
						"type": "string"
					},
					"_comment": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"participant": {
						"type": "array",
						"minItems": 1,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"type": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/CodeableConcept"
									}
								},
								"actor": {
									"$ref": "#/definitions/Reference"
								},
								"required": {
									"$ref": "#/definitions/code"
								},
								"_required": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"status": {
									"$ref": "#/definitions/code"
								},
								"_status": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								}
							}
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"AppointmentResponse": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"identifier": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Identifier"
						}
					},
					"appointment": {
						"$ref": "#/definitions/Reference"
					},
					"start": {
						"$ref": "#/definitions/instant"
					},
					"_start": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"end": {
						"$ref": "#/definitions/instant"
					},
					"_end": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"participantType": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/CodeableConcept"
						}
					},
					"actor": {
						"$ref": "#/definitions/Reference"
					},
					"participantStatus": {
						"$ref": "#/definitions/code"
					},
					"_participantStatus": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"comment": {
						"type": "string"
					},
					"_comment": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"AuditEvent": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"event": {
						"type": "object",
						"additionalProperties": false,
						"properties": {
							"fhir_comments": {
								"type": "array",
								"items": {
									"type": "string"
								}
							},
							"id": {
								"$ref": "#/definitions/fhir_id"
							},
							"_id": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							},
							"extension": {
								"type": "array",
								"minItems": 0,
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							},
							"modifierExtension": {
								"type": "array",
								"minItems": 0,
								"items": {
									"$ref": "#/definitions/Extension"
								}
							},
							"type": {
								"$ref": "#/definitions/Coding"
							},
							"subtype": {
								"type": "array",
								"minItems": 0,
								"items": {
									"$ref": "#/definitions/Coding"
								}
							},
							"action": {
								"$ref": "#/definitions/code"
							},
							"_action": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							},
							"dateTime": {
								"$ref": "#/definitions/instant"
							},
							"_dateTime": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							},
							"outcome": {
								"$ref": "#/definitions/code"
							},
							"_outcome": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							},
							"outcomeDesc": {
								"type": "string"
							},
							"_outcomeDesc": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							},
							"purposeOfEvent": {
								"type": "array",
								"minItems": 0,
								"items": {
									"$ref": "#/definitions/Coding"
								}
							}
						}
					},
					"participant": {
						"type": "array",
						"minItems": 1,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"role": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/CodeableConcept"
									}
								},
								"reference": {
									"$ref": "#/definitions/Reference"
								},
								"userId": {
									"$ref": "#/definitions/Identifier"
								},
								"altId": {
									"type": "string"
								},
								"_altId": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"name": {
									"type": "string"
								},
								"_name": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"requestor": {
									"type": "boolean"
								},
								"_requestor": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"location": {
									"$ref": "#/definitions/Reference"
								},
								"policy": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/uri"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"_policy": {
									"type": "array",
									"items": {
										"oneOf": [
											{
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											},
											{
												"type": "null"
											}
										]
									}
								},
								"media": {
									"$ref": "#/definitions/Coding"
								},
								"network": {
									"type": "object",
									"additionalProperties": false,
									"properties": {
										"fhir_comments": {
											"type": "array",
											"items": {
												"type": "string"
											}
										},
										"id": {
											"$ref": "#/definitions/fhir_id"
										},
										"_id": {
											"type": "object",
											"properties": {
												"extension": {
													"type": "array",
													"items": {
														"oneOf": [
															{
																"$ref": "#/definitions/Extension"
															},
															{
																"type": "null"
															}
														]
													}
												}
											}
										},
										"extension": {
											"type": "array",
											"minItems": 0,
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										},
										"modifierExtension": {
											"type": "array",
											"minItems": 0,
											"items": {
												"$ref": "#/definitions/Extension"
											}
										},
										"address": {
											"type": "string"
										},
										"_address": {
											"type": "object",
											"properties": {
												"extension": {
													"type": "array",
													"items": {
														"oneOf": [
															{
																"$ref": "#/definitions/Extension"
															},
															{
																"type": "null"
															}
														]
													}
												}
											}
										},
										"type": {
											"$ref": "#/definitions/code"
										},
										"_type": {
											"type": "object",
											"properties": {
												"extension": {
													"type": "array",
													"items": {
														"oneOf": [
															{
																"$ref": "#/definitions/Extension"
															},
															{
																"type": "null"
															}
														]
													}
												}
											}
										}
									}
								},
								"purposeOfUse": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Coding"
									}
								}
							}
						}
					},
					"source": {
						"type": "object",
						"additionalProperties": false,
						"properties": {
							"fhir_comments": {
								"type": "array",
								"items": {
									"type": "string"
								}
							},
							"id": {
								"$ref": "#/definitions/fhir_id"
							},
							"_id": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							},
							"extension": {
								"type": "array",
								"minItems": 0,
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							},
							"modifierExtension": {
								"type": "array",
								"minItems": 0,
								"items": {
									"$ref": "#/definitions/Extension"
								}
							},
							"site": {
								"type": "string"
							},
							"_site": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							},
							"identifier": {
								"$ref": "#/definitions/Identifier"
							},
							"type": {
								"type": "array",
								"minItems": 0,
								"items": {
									"$ref": "#/definitions/Coding"
								}
							}
						}
					},
					"object": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"identifier": {
									"$ref": "#/definitions/Identifier"
								},
								"reference": {
									"$ref": "#/definitions/Reference"
								},
								"type": {
									"$ref": "#/definitions/Coding"
								},
								"role": {
									"$ref": "#/definitions/Coding"
								},
								"lifecycle": {
									"$ref": "#/definitions/Coding"
								},
								"securityLabel": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Coding"
									}
								},
								"name": {
									"type": "string"
								},
								"_name": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"description": {
									"type": "string"
								},
								"_description": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"query": {
									"$ref": "#/definitions/base64Binary"
								},
								"_query": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"detail": {
									"type": "array",
									"minItems": 0,
									"items": {
										"type": "object",
										"properties": {
											"id": {
												"$ref": "#/definitions/fhir_id"
											},
											"_id": {
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											},
											"extension": {
												"type": "array",
												"minItems": 0,
												"items": {
													"oneOf": [
														{
															"$ref": "#/definitions/Extension"
														},
														{
															"type": "null"
														}
													]
												}
											},
											"modifierExtension": {
												"type": "array",
												"minItems": 0,
												"items": {
													"$ref": "#/definitions/Extension"
												}
											},
											"type": {
												"type": "string"
											},
											"_type": {
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											},
											"value": {
												"$ref": "#/definitions/base64Binary"
											},
											"_value": {
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											}
										}
									}
								}
							}
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"Basic": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"identifier": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Identifier"
						}
					},
					"code": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"subject": {
						"$ref": "#/definitions/Reference"
					},
					"author": {
						"$ref": "#/definitions/Reference"
					},
					"created": {
						"$ref": "#/definitions/date"
					},
					"_created": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"Binary": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"contentType": {
						"$ref": "#/definitions/code"
					},
					"_contentType": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"content": {
						"$ref": "#/definitions/base64Binary"
					},
					"_content": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"BodySite": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"patient": {
						"$ref": "#/definitions/Reference"
					},
					"identifier": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Identifier"
						}
					},
					"code": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"modifier": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/CodeableConcept"
						}
					},
					"description": {
						"type": "string"
					},
					"_description": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"image": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Attachment"
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"Bundle": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"type": {
						"$ref": "#/definitions/code"
					},
					"_type": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"total": {
						"$ref": "#/definitions/unsignedInt"
					},
					"_total": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"link": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"relation": {
									"type": "string"
								},
								"_relation": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"url": {
									"$ref": "#/definitions/uri"
								},
								"_url": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								}
							}
						}
					},
					"entry": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"link": {
									"type": "array",
									"minItems": 0,
									"items": {
										"type": "object"
									}
								},
								"fullUrl": {
									"$ref": "#/definitions/uri"
								},
								"_fullUrl": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"resource": {
									"$ref": "#/definitions/Resource"
								},
								"search": {
									"type": "object",
									"additionalProperties": false,
									"properties": {
										"fhir_comments": {
											"type": "array",
											"items": {
												"type": "string"
											}
										},
										"id": {
											"$ref": "#/definitions/fhir_id"
										},
										"_id": {
											"type": "object",
											"properties": {
												"extension": {
													"type": "array",
													"items": {
														"oneOf": [
															{
																"$ref": "#/definitions/Extension"
															},
															{
																"type": "null"
															}
														]
													}
												}
											}
										},
										"extension": {
											"type": "array",
											"minItems": 0,
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										},
										"modifierExtension": {
											"type": "array",
											"minItems": 0,
											"items": {
												"$ref": "#/definitions/Extension"
											}
										},
										"mode": {
											"$ref": "#/definitions/code"
										},
										"_mode": {
											"type": "object",
											"properties": {
												"extension": {
													"type": "array",
													"items": {
														"oneOf": [
															{
																"$ref": "#/definitions/Extension"
															},
															{
																"type": "null"
															}
														]
													}
												}
											}
										},
										"score": {
											"$ref": "#/definitions/decimal"
										},
										"_score": {
											"type": "object",
											"properties": {
												"extension": {
													"type": "array",
													"items": {
														"oneOf": [
															{
																"$ref": "#/definitions/Extension"
															},
															{
																"type": "null"
															}
														]
													}
												}
											}
										}
									}
								},
								"request": {
									"type": "object",
									"additionalProperties": false,
									"properties": {
										"fhir_comments": {
											"type": "array",
											"items": {
												"type": "string"
											}
										},
										"id": {
											"$ref": "#/definitions/fhir_id"
										},
										"_id": {
											"type": "object",
											"properties": {
												"extension": {
													"type": "array",
													"items": {
														"oneOf": [
															{
																"$ref": "#/definitions/Extension"
															},
															{
																"type": "null"
															}
														]
													}
												}
											}
										},
										"extension": {
											"type": "array",
											"minItems": 0,
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										},
										"modifierExtension": {
											"type": "array",
											"minItems": 0,
											"items": {
												"$ref": "#/definitions/Extension"
											}
										},
										"method": {
											"$ref": "#/definitions/code"
										},
										"_method": {
											"type": "object",
											"properties": {
												"extension": {
													"type": "array",
													"items": {
														"oneOf": [
															{
																"$ref": "#/definitions/Extension"
															},
															{
																"type": "null"
															}
														]
													}
												}
											}
										},
										"url": {
											"$ref": "#/definitions/uri"
										},
										"_url": {
											"type": "object",
											"properties": {
												"extension": {
													"type": "array",
													"items": {
														"oneOf": [
															{
																"$ref": "#/definitions/Extension"
															},
															{
																"type": "null"
															}
														]
													}
												}
											}
										},
										"ifNoneMatch": {
											"type": "string"
										},
										"_ifNoneMatch": {
											"type": "object",
											"properties": {
												"extension": {
													"type": "array",
													"items": {
														"oneOf": [
															{
																"$ref": "#/definitions/Extension"
															},
															{
																"type": "null"
															}
														]
													}
												}
											}
										},
										"ifModifiedSince": {
											"$ref": "#/definitions/instant"
										},
										"_ifModifiedSince": {
											"type": "object",
											"properties": {
												"extension": {
													"type": "array",
													"items": {
														"oneOf": [
															{
																"$ref": "#/definitions/Extension"
															},
															{
																"type": "null"
															}
														]
													}
												}
											}
										},
										"ifMatch": {
											"type": "string"
										},
										"_ifMatch": {
											"type": "object",
											"properties": {
												"extension": {
													"type": "array",
													"items": {
														"oneOf": [
															{
																"$ref": "#/definitions/Extension"
															},
															{
																"type": "null"
															}
														]
													}
												}
											}
										},
										"ifNoneExist": {
											"type": "string"
										},
										"_ifNoneExist": {
											"type": "object",
											"properties": {
												"extension": {
													"type": "array",
													"items": {
														"oneOf": [
															{
																"$ref": "#/definitions/Extension"
															},
															{
																"type": "null"
															}
														]
													}
												}
											}
										}
									}
								},
								"response": {
									"type": "object",
									"additionalProperties": false,
									"properties": {
										"fhir_comments": {
											"type": "array",
											"items": {
												"type": "string"
											}
										},
										"id": {
											"$ref": "#/definitions/fhir_id"
										},
										"_id": {
											"type": "object",
											"properties": {
												"extension": {
													"type": "array",
													"items": {
														"oneOf": [
															{
																"$ref": "#/definitions/Extension"
															},
															{
																"type": "null"
															}
														]
													}
												}
											}
										},
										"extension": {
											"type": "array",
											"minItems": 0,
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										},
										"modifierExtension": {
											"type": "array",
											"minItems": 0,
											"items": {
												"$ref": "#/definitions/Extension"
											}
										},
										"status": {
											"type": "string"
										},
										"_status": {
											"type": "object",
											"properties": {
												"extension": {
													"type": "array",
													"items": {
														"oneOf": [
															{
																"$ref": "#/definitions/Extension"
															},
															{
																"type": "null"
															}
														]
													}
												}
											}
										},
										"location": {
											"$ref": "#/definitions/uri"
										},
										"_location": {
											"type": "object",
											"properties": {
												"extension": {
													"type": "array",
													"items": {
														"oneOf": [
															{
																"$ref": "#/definitions/Extension"
															},
															{
																"type": "null"
															}
														]
													}
												}
											}
										},
										"etag": {
											"type": "string"
										},
										"_etag": {
											"type": "object",
											"properties": {
												"extension": {
													"type": "array",
													"items": {
														"oneOf": [
															{
																"$ref": "#/definitions/Extension"
															},
															{
																"type": "null"
															}
														]
													}
												}
											}
										},
										"lastModified": {
											"$ref": "#/definitions/instant"
										},
										"_lastModified": {
											"type": "object",
											"properties": {
												"extension": {
													"type": "array",
													"items": {
														"oneOf": [
															{
																"$ref": "#/definitions/Extension"
															},
															{
																"type": "null"
															}
														]
													}
												}
											}
										}
									}
								}
							}
						}
					},
					"signature": {
						"$ref": "#/definitions/Signature"
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"CarePlan": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"identifier": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Identifier"
						}
					},
					"subject": {
						"$ref": "#/definitions/Reference"
					},
					"status": {
						"$ref": "#/definitions/code"
					},
					"_status": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"context": {
						"$ref": "#/definitions/Reference"
					},
					"period": {
						"$ref": "#/definitions/Period"
					},
					"author": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Reference"
						}
					},
					"modified": {
						"$ref": "#/definitions/dateTime"
					},
					"_modified": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"category": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/CodeableConcept"
						}
					},
					"description": {
						"type": "string"
					},
					"_description": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"addresses": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Reference"
						}
					},
					"support": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Reference"
						}
					},
					"relatedPlan": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"code": {
									"$ref": "#/definitions/code"
								},
								"_code": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"plan": {
									"$ref": "#/definitions/Reference"
								}
							}
						}
					},
					"participant": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"role": {
									"$ref": "#/definitions/CodeableConcept"
								},
								"member": {
									"$ref": "#/definitions/Reference"
								}
							}
						}
					},
					"goal": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Reference"
						}
					},
					"activity": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"actionResulting": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Reference"
									}
								},
								"progress": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Annotation"
									}
								},
								"reference": {
									"$ref": "#/definitions/Reference"
								},
								"detail": {
									"type": "object",
									"additionalProperties": false,
									"properties": {
										"fhir_comments": {
											"type": "array",
											"items": {
												"type": "string"
											}
										},
										"id": {
											"$ref": "#/definitions/fhir_id"
										},
										"_id": {
											"type": "object",
											"properties": {
												"extension": {
													"type": "array",
													"items": {
														"oneOf": [
															{
																"$ref": "#/definitions/Extension"
															},
															{
																"type": "null"
															}
														]
													}
												}
											}
										},
										"extension": {
											"type": "array",
											"minItems": 0,
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										},
										"modifierExtension": {
											"type": "array",
											"minItems": 0,
											"items": {
												"$ref": "#/definitions/Extension"
											}
										},
										"category": {
											"$ref": "#/definitions/CodeableConcept"
										},
										"code": {
											"$ref": "#/definitions/CodeableConcept"
										},
										"reasonCode": {
											"type": "array",
											"minItems": 0,
											"items": {
												"$ref": "#/definitions/CodeableConcept"
											}
										},
										"reasonReference": {
											"type": "array",
											"minItems": 0,
											"items": {
												"$ref": "#/definitions/Reference"
											}
										},
										"goal": {
											"type": "array",
											"minItems": 0,
											"items": {
												"$ref": "#/definitions/Reference"
											}
										},
										"status": {
											"$ref": "#/definitions/code"
										},
										"_status": {
											"type": "object",
											"properties": {
												"extension": {
													"type": "array",
													"items": {
														"oneOf": [
															{
																"$ref": "#/definitions/Extension"
															},
															{
																"type": "null"
															}
														]
													}
												}
											}
										},
										"statusReason": {
											"$ref": "#/definitions/CodeableConcept"
										},
										"prohibited": {
											"type": "boolean"
										},
										"_prohibited": {
											"type": "object",
											"properties": {
												"extension": {
													"type": "array",
													"items": {
														"oneOf": [
															{
																"$ref": "#/definitions/Extension"
															},
															{
																"type": "null"
															}
														]
													}
												}
											}
										},
										"scheduledTiming": {
											"$ref": "#/definitions/Timing"
										},
										"scheduledPeriod": {
											"$ref": "#/definitions/Period"
										},
										"scheduledString": {
											"type": "string"
										},
										"_scheduledString": {
											"type": "object",
											"properties": {
												"extension": {
													"type": "array",
													"items": {
														"oneOf": [
															{
																"$ref": "#/definitions/Extension"
															},
															{
																"type": "null"
															}
														]
													}
												}
											}
										},
										"location": {
											"$ref": "#/definitions/Reference"
										},
										"performer": {
											"type": "array",
											"minItems": 0,
											"items": {
												"$ref": "#/definitions/Reference"
											}
										},
										"productCodeableConcept": {
											"$ref": "#/definitions/CodeableConcept"
										},
										"productReference": {
											"$ref": "#/definitions/Reference"
										},
										"dailyAmount": {
											"$ref": "#/definitions/Quantity"
										},
										"quantity": {
											"$ref": "#/definitions/Quantity"
										},
										"description": {
											"type": "string"
										},
										"_description": {
											"type": "object",
											"properties": {
												"extension": {
													"type": "array",
													"items": {
														"oneOf": [
															{
																"$ref": "#/definitions/Extension"
															},
															{
																"type": "null"
															}
														]
													}
												}
											}
										}
									}
								}
							}
						}
					},
					"note": {
						"$ref": "#/definitions/Annotation"
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"Claim": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"type": {
						"$ref": "#/definitions/code"
					},
					"_type": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"identifier": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Identifier"
						}
					},
					"ruleset": {
						"$ref": "#/definitions/Coding"
					},
					"originalRuleset": {
						"$ref": "#/definitions/Coding"
					},
					"created": {
						"$ref": "#/definitions/dateTime"
					},
					"_created": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"target": {
						"$ref": "#/definitions/Reference"
					},
					"provider": {
						"$ref": "#/definitions/Reference"
					},
					"organization": {
						"$ref": "#/definitions/Reference"
					},
					"use": {
						"$ref": "#/definitions/code"
					},
					"_use": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"priority": {
						"$ref": "#/definitions/Coding"
					},
					"fundsReserve": {
						"$ref": "#/definitions/Coding"
					},
					"enterer": {
						"$ref": "#/definitions/Reference"
					},
					"facility": {
						"$ref": "#/definitions/Reference"
					},
					"prescription": {
						"$ref": "#/definitions/Reference"
					},
					"originalPrescription": {
						"$ref": "#/definitions/Reference"
					},
					"payee": {
						"type": "object",
						"additionalProperties": false,
						"properties": {
							"fhir_comments": {
								"type": "array",
								"items": {
									"type": "string"
								}
							},
							"id": {
								"$ref": "#/definitions/fhir_id"
							},
							"_id": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							},
							"extension": {
								"type": "array",
								"minItems": 0,
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							},
							"modifierExtension": {
								"type": "array",
								"minItems": 0,
								"items": {
									"$ref": "#/definitions/Extension"
								}
							},
							"type": {
								"$ref": "#/definitions/Coding"
							},
							"provider": {
								"$ref": "#/definitions/Reference"
							},
							"organization": {
								"$ref": "#/definitions/Reference"
							},
							"person": {
								"$ref": "#/definitions/Reference"
							}
						}
					},
					"referral": {
						"$ref": "#/definitions/Reference"
					},
					"diagnosis": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"sequence": {
									"$ref": "#/definitions/positiveInt"
								},
								"_sequence": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"diagnosis": {
									"$ref": "#/definitions/Coding"
								}
							}
						}
					},
					"condition": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Coding"
						}
					},
					"patient": {
						"$ref": "#/definitions/Reference"
					},
					"coverage": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"sequence": {
									"$ref": "#/definitions/positiveInt"
								},
								"_sequence": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"focal": {
									"type": "boolean"
								},
								"_focal": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"coverage": {
									"$ref": "#/definitions/Reference"
								},
								"businessArrangement": {
									"type": "string"
								},
								"_businessArrangement": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"relationship": {
									"$ref": "#/definitions/Coding"
								},
								"preAuthRef": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"type": "string"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"_preAuthRef": {
									"type": "array",
									"items": {
										"oneOf": [
											{
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											},
											{
												"type": "null"
											}
										]
									}
								},
								"claimResponse": {
									"$ref": "#/definitions/Reference"
								},
								"originalRuleset": {
									"$ref": "#/definitions/Coding"
								}
							}
						}
					},
					"exception": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Coding"
						}
					},
					"school": {
						"type": "string"
					},
					"_school": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"accident": {
						"$ref": "#/definitions/date"
					},
					"_accident": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"accidentType": {
						"$ref": "#/definitions/Coding"
					},
					"interventionException": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Coding"
						}
					},
					"item": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"sequence": {
									"$ref": "#/definitions/positiveInt"
								},
								"_sequence": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"type": {
									"$ref": "#/definitions/Coding"
								},
								"provider": {
									"$ref": "#/definitions/Reference"
								},
								"diagnosisLinkId": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/positiveInt"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"_diagnosisLinkId": {
									"type": "array",
									"items": {
										"oneOf": [
											{
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											},
											{
												"type": "null"
											}
										]
									}
								},
								"service": {
									"$ref": "#/definitions/Coding"
								},
								"serviceDate": {
									"$ref": "#/definitions/date"
								},
								"_serviceDate": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"quantity": {
									"$ref": "#/definitions/Quantity"
								},
								"unitPrice": {
									"$ref": "#/definitions/Quantity"
								},
								"factor": {
									"$ref": "#/definitions/decimal"
								},
								"_factor": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"points": {
									"$ref": "#/definitions/decimal"
								},
								"_points": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"net": {
									"$ref": "#/definitions/Quantity"
								},
								"udi": {
									"$ref": "#/definitions/Coding"
								},
								"bodySite": {
									"$ref": "#/definitions/Coding"
								},
								"subSite": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Coding"
									}
								},
								"modifier": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Coding"
									}
								},
								"detail": {
									"type": "array",
									"minItems": 0,
									"items": {
										"type": "object",
										"properties": {
											"id": {
												"$ref": "#/definitions/fhir_id"
											},
											"_id": {
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											},
											"extension": {
												"type": "array",
												"minItems": 0,
												"items": {
													"oneOf": [
														{
															"$ref": "#/definitions/Extension"
														},
														{
															"type": "null"
														}
													]
												}
											},
											"modifierExtension": {
												"type": "array",
												"minItems": 0,
												"items": {
													"$ref": "#/definitions/Extension"
												}
											},
											"sequence": {
												"$ref": "#/definitions/positiveInt"
											},
											"_sequence": {
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											},
											"type": {
												"$ref": "#/definitions/Coding"
											},
											"service": {
												"$ref": "#/definitions/Coding"
											},
											"quantity": {
												"$ref": "#/definitions/Quantity"
											},
											"unitPrice": {
												"$ref": "#/definitions/Quantity"
											},
											"factor": {
												"$ref": "#/definitions/decimal"
											},
											"_factor": {
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											},
											"points": {
												"$ref": "#/definitions/decimal"
											},
											"_points": {
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											},
											"net": {
												"$ref": "#/definitions/Quantity"
											},
											"udi": {
												"$ref": "#/definitions/Coding"
											},
											"subDetail": {
												"type": "array",
												"minItems": 0,
												"items": {
													"type": "object",
													"properties": {
														"id": {
															"$ref": "#/definitions/fhir_id"
														},
														"_id": {
															"type": "object",
															"properties": {
																"extension": {
																	"type": "array",
																	"items": {
																		"oneOf": [
																			{
																				"$ref": "#/definitions/Extension"
																			},
																			{
																				"type": "null"
																			}
																		]
																	}
																}
															}
														},
														"extension": {
															"type": "array",
															"minItems": 0,
															"items": {
																"oneOf": [
																	{
																		"$ref": "#/definitions/Extension"
																	},
																	{
																		"type": "null"
																	}
																]
															}
														},
														"modifierExtension": {
															"type": "array",
															"minItems": 0,
															"items": {
																"$ref": "#/definitions/Extension"
															}
														},
														"sequence": {
															"$ref": "#/definitions/positiveInt"
														},
														"_sequence": {
															"type": "object",
															"properties": {
																"extension": {
																	"type": "array",
																	"items": {
																		"oneOf": [
																			{
																				"$ref": "#/definitions/Extension"
																			},
																			{
																				"type": "null"
																			}
																		]
																	}
																}
															}
														},
														"type": {
															"$ref": "#/definitions/Coding"
														},
														"service": {
															"$ref": "#/definitions/Coding"
														},
														"quantity": {
															"$ref": "#/definitions/Quantity"
														},
														"unitPrice": {
															"$ref": "#/definitions/Quantity"
														},
														"factor": {
															"$ref": "#/definitions/decimal"
														},
														"_factor": {
															"type": "object",
															"properties": {
																"extension": {
																	"type": "array",
																	"items": {
																		"oneOf": [
																			{
																				"$ref": "#/definitions/Extension"
																			},
																			{
																				"type": "null"
																			}
																		]
																	}
																}
															}
														},
														"points": {
															"$ref": "#/definitions/decimal"
														},
														"_points": {
															"type": "object",
															"properties": {
																"extension": {
																	"type": "array",
																	"items": {
																		"oneOf": [
																			{
																				"$ref": "#/definitions/Extension"
																			},
																			{
																				"type": "null"
																			}
																		]
																	}
																}
															}
														},
														"net": {
															"$ref": "#/definitions/Quantity"
														},
														"udi": {
															"$ref": "#/definitions/Coding"
														}
													}
												}
											}
										}
									}
								},
								"prosthesis": {
									"type": "object",
									"additionalProperties": false,
									"properties": {
										"fhir_comments": {
											"type": "array",
											"items": {
												"type": "string"
											}
										},
										"id": {
											"$ref": "#/definitions/fhir_id"
										},
										"_id": {
											"type": "object",
											"properties": {
												"extension": {
													"type": "array",
													"items": {
														"oneOf": [
															{
																"$ref": "#/definitions/Extension"
															},
															{
																"type": "null"
															}
														]
													}
												}
											}
										},
										"extension": {
											"type": "array",
											"minItems": 0,
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										},
										"modifierExtension": {
											"type": "array",
											"minItems": 0,
											"items": {
												"$ref": "#/definitions/Extension"
											}
										},
										"initial": {
											"type": "boolean"
										},
										"_initial": {
											"type": "object",
											"properties": {
												"extension": {
													"type": "array",
													"items": {
														"oneOf": [
															{
																"$ref": "#/definitions/Extension"
															},
															{
																"type": "null"
															}
														]
													}
												}
											}
										},
										"priorDate": {
											"$ref": "#/definitions/date"
										},
										"_priorDate": {
											"type": "object",
											"properties": {
												"extension": {
													"type": "array",
													"items": {
														"oneOf": [
															{
																"$ref": "#/definitions/Extension"
															},
															{
																"type": "null"
															}
														]
													}
												}
											}
										},
										"priorMaterial": {
											"$ref": "#/definitions/Coding"
										}
									}
								}
							}
						}
					},
					"additionalMaterials": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Coding"
						}
					},
					"missingTeeth": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"tooth": {
									"$ref": "#/definitions/Coding"
								},
								"reason": {
									"$ref": "#/definitions/Coding"
								},
								"extractionDate": {
									"$ref": "#/definitions/date"
								},
								"_extractionDate": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								}
							}
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"ClaimResponse": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"identifier": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Identifier"
						}
					},
					"request": {
						"$ref": "#/definitions/Reference"
					},
					"ruleset": {
						"$ref": "#/definitions/Coding"
					},
					"originalRuleset": {
						"$ref": "#/definitions/Coding"
					},
					"created": {
						"$ref": "#/definitions/dateTime"
					},
					"_created": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"organization": {
						"$ref": "#/definitions/Reference"
					},
					"requestProvider": {
						"$ref": "#/definitions/Reference"
					},
					"requestOrganization": {
						"$ref": "#/definitions/Reference"
					},
					"outcome": {
						"$ref": "#/definitions/code"
					},
					"_outcome": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"disposition": {
						"type": "string"
					},
					"_disposition": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"payeeType": {
						"$ref": "#/definitions/Coding"
					},
					"item": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"sequenceLinkId": {
									"$ref": "#/definitions/positiveInt"
								},
								"_sequenceLinkId": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"noteNumber": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/positiveInt"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"_noteNumber": {
									"type": "array",
									"items": {
										"oneOf": [
											{
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											},
											{
												"type": "null"
											}
										]
									}
								},
								"adjudication": {
									"type": "array",
									"minItems": 0,
									"items": {
										"type": "object",
										"properties": {
											"id": {
												"$ref": "#/definitions/fhir_id"
											},
											"_id": {
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											},
											"extension": {
												"type": "array",
												"minItems": 0,
												"items": {
													"oneOf": [
														{
															"$ref": "#/definitions/Extension"
														},
														{
															"type": "null"
														}
													]
												}
											},
											"modifierExtension": {
												"type": "array",
												"minItems": 0,
												"items": {
													"$ref": "#/definitions/Extension"
												}
											},
											"code": {
												"$ref": "#/definitions/Coding"
											},
											"amount": {
												"$ref": "#/definitions/Quantity"
											},
											"value": {
												"$ref": "#/definitions/decimal"
											},
											"_value": {
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											}
										}
									}
								},
								"detail": {
									"type": "array",
									"minItems": 0,
									"items": {
										"type": "object",
										"properties": {
											"id": {
												"$ref": "#/definitions/fhir_id"
											},
											"_id": {
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											},
											"extension": {
												"type": "array",
												"minItems": 0,
												"items": {
													"oneOf": [
														{
															"$ref": "#/definitions/Extension"
														},
														{
															"type": "null"
														}
													]
												}
											},
											"modifierExtension": {
												"type": "array",
												"minItems": 0,
												"items": {
													"$ref": "#/definitions/Extension"
												}
											},
											"sequenceLinkId": {
												"$ref": "#/definitions/positiveInt"
											},
											"_sequenceLinkId": {
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											},
											"adjudication": {
												"type": "array",
												"minItems": 0,
												"items": {
													"type": "object",
													"properties": {
														"id": {
															"$ref": "#/definitions/fhir_id"
														},
														"_id": {
															"type": "object",
															"properties": {
																"extension": {
																	"type": "array",
																	"items": {
																		"oneOf": [
																			{
																				"$ref": "#/definitions/Extension"
																			},
																			{
																				"type": "null"
																			}
																		]
																	}
																}
															}
														},
														"extension": {
															"type": "array",
															"minItems": 0,
															"items": {
																"oneOf": [
																	{
																		"$ref": "#/definitions/Extension"
																	},
																	{
																		"type": "null"
																	}
																]
															}
														},
														"modifierExtension": {
															"type": "array",
															"minItems": 0,
															"items": {
																"$ref": "#/definitions/Extension"
															}
														},
														"code": {
															"$ref": "#/definitions/Coding"
														},
														"amount": {
															"$ref": "#/definitions/Quantity"
														},
														"value": {
															"$ref": "#/definitions/decimal"
														},
														"_value": {
															"type": "object",
															"properties": {
																"extension": {
																	"type": "array",
																	"items": {
																		"oneOf": [
																			{
																				"$ref": "#/definitions/Extension"
																			},
																			{
																				"type": "null"
																			}
																		]
																	}
																}
															}
														}
													}
												}
											},
											"subDetail": {
												"type": "array",
												"minItems": 0,
												"items": {
													"type": "object",
													"properties": {
														"id": {
															"$ref": "#/definitions/fhir_id"
														},
														"_id": {
															"type": "object",
															"properties": {
																"extension": {
																	"type": "array",
																	"items": {
																		"oneOf": [
																			{
																				"$ref": "#/definitions/Extension"
																			},
																			{
																				"type": "null"
																			}
																		]
																	}
																}
															}
														},
														"extension": {
															"type": "array",
															"minItems": 0,
															"items": {
																"oneOf": [
																	{
																		"$ref": "#/definitions/Extension"
																	},
																	{
																		"type": "null"
																	}
																]
															}
														},
														"modifierExtension": {
															"type": "array",
															"minItems": 0,
															"items": {
																"$ref": "#/definitions/Extension"
															}
														},
														"sequenceLinkId": {
															"$ref": "#/definitions/positiveInt"
														},
														"_sequenceLinkId": {
															"type": "object",
															"properties": {
																"extension": {
																	"type": "array",
																	"items": {
																		"oneOf": [
																			{
																				"$ref": "#/definitions/Extension"
																			},
																			{
																				"type": "null"
																			}
																		]
																	}
																}
															}
														},
														"adjudication": {
															"type": "array",
															"minItems": 0,
															"items": {
																"type": "object",
																"properties": {
																	"id": {
																		"$ref": "#/definitions/fhir_id"
																	},
																	"_id": {
																		"type": "object",
																		"properties": {
																			"extension": {
																				"type": "array",
																				"items": {
																					"oneOf": [
																						{
																							"$ref": "#/definitions/Extension"
																						},
																						{
																							"type": "null"
																						}
																					]
																				}
																			}
																		}
																	},
																	"extension": {
																		"type": "array",
																		"minItems": 0,
																		"items": {
																			"oneOf": [
																				{
																					"$ref": "#/definitions/Extension"
																				},
																				{
																					"type": "null"
																				}
																			]
																		}
																	},
																	"modifierExtension": {
																		"type": "array",
																		"minItems": 0,
																		"items": {
																			"$ref": "#/definitions/Extension"
																		}
																	},
																	"code": {
																		"$ref": "#/definitions/Coding"
																	},
																	"amount": {
																		"$ref": "#/definitions/Quantity"
																	},
																	"value": {
																		"$ref": "#/definitions/decimal"
																	},
																	"_value": {
																		"type": "object",
																		"properties": {
																			"extension": {
																				"type": "array",
																				"items": {
																					"oneOf": [
																						{
																							"$ref": "#/definitions/Extension"
																						},
																						{
																							"type": "null"
																						}
																					]
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					},
					"addItem": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"sequenceLinkId": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/positiveInt"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"_sequenceLinkId": {
									"type": "array",
									"items": {
										"oneOf": [
											{
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											},
											{
												"type": "null"
											}
										]
									}
								},
								"service": {
									"$ref": "#/definitions/Coding"
								},
								"fee": {
									"$ref": "#/definitions/Quantity"
								},
								"noteNumberLinkId": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/positiveInt"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"_noteNumberLinkId": {
									"type": "array",
									"items": {
										"oneOf": [
											{
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											},
											{
												"type": "null"
											}
										]
									}
								},
								"adjudication": {
									"type": "array",
									"minItems": 0,
									"items": {
										"type": "object",
										"properties": {
											"id": {
												"$ref": "#/definitions/fhir_id"
											},
											"_id": {
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											},
											"extension": {
												"type": "array",
												"minItems": 0,
												"items": {
													"oneOf": [
														{
															"$ref": "#/definitions/Extension"
														},
														{
															"type": "null"
														}
													]
												}
											},
											"modifierExtension": {
												"type": "array",
												"minItems": 0,
												"items": {
													"$ref": "#/definitions/Extension"
												}
											},
											"code": {
												"$ref": "#/definitions/Coding"
											},
											"amount": {
												"$ref": "#/definitions/Quantity"
											},
											"value": {
												"$ref": "#/definitions/decimal"
											},
											"_value": {
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											}
										}
									}
								},
								"detail": {
									"type": "array",
									"minItems": 0,
									"items": {
										"type": "object",
										"properties": {
											"id": {
												"$ref": "#/definitions/fhir_id"
											},
											"_id": {
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											},
											"extension": {
												"type": "array",
												"minItems": 0,
												"items": {
													"oneOf": [
														{
															"$ref": "#/definitions/Extension"
														},
														{
															"type": "null"
														}
													]
												}
											},
											"modifierExtension": {
												"type": "array",
												"minItems": 0,
												"items": {
													"$ref": "#/definitions/Extension"
												}
											},
											"service": {
												"$ref": "#/definitions/Coding"
											},
											"fee": {
												"$ref": "#/definitions/Quantity"
											},
											"adjudication": {
												"type": "array",
												"minItems": 0,
												"items": {
													"type": "object",
													"properties": {
														"id": {
															"$ref": "#/definitions/fhir_id"
														},
														"_id": {
															"type": "object",
															"properties": {
																"extension": {
																	"type": "array",
																	"items": {
																		"oneOf": [
																			{
																				"$ref": "#/definitions/Extension"
																			},
																			{
																				"type": "null"
																			}
																		]
																	}
																}
															}
														},
														"extension": {
															"type": "array",
															"minItems": 0,
															"items": {
																"oneOf": [
																	{
																		"$ref": "#/definitions/Extension"
																	},
																	{
																		"type": "null"
																	}
																]
															}
														},
														"modifierExtension": {
															"type": "array",
															"minItems": 0,
															"items": {
																"$ref": "#/definitions/Extension"
															}
														},
														"code": {
															"$ref": "#/definitions/Coding"
														},
														"amount": {
															"$ref": "#/definitions/Quantity"
														},
														"value": {
															"$ref": "#/definitions/decimal"
														},
														"_value": {
															"type": "object",
															"properties": {
																"extension": {
																	"type": "array",
																	"items": {
																		"oneOf": [
																			{
																				"$ref": "#/definitions/Extension"
																			},
																			{
																				"type": "null"
																			}
																		]
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					},
					"error": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"sequenceLinkId": {
									"$ref": "#/definitions/positiveInt"
								},
								"_sequenceLinkId": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"detailSequenceLinkId": {
									"$ref": "#/definitions/positiveInt"
								},
								"_detailSequenceLinkId": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"subdetailSequenceLinkId": {
									"$ref": "#/definitions/positiveInt"
								},
								"_subdetailSequenceLinkId": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"code": {
									"$ref": "#/definitions/Coding"
								}
							}
						}
					},
					"totalCost": {
						"$ref": "#/definitions/Quantity"
					},
					"unallocDeductable": {
						"$ref": "#/definitions/Quantity"
					},
					"totalBenefit": {
						"$ref": "#/definitions/Quantity"
					},
					"paymentAdjustment": {
						"$ref": "#/definitions/Quantity"
					},
					"paymentAdjustmentReason": {
						"$ref": "#/definitions/Coding"
					},
					"paymentDate": {
						"$ref": "#/definitions/date"
					},
					"_paymentDate": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"paymentAmount": {
						"$ref": "#/definitions/Quantity"
					},
					"paymentRef": {
						"$ref": "#/definitions/Identifier"
					},
					"reserved": {
						"$ref": "#/definitions/Coding"
					},
					"form": {
						"$ref": "#/definitions/Coding"
					},
					"note": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"number": {
									"$ref": "#/definitions/positiveInt"
								},
								"_number": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"type": {
									"$ref": "#/definitions/Coding"
								},
								"text": {
									"type": "string"
								},
								"_text": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								}
							}
						}
					},
					"coverage": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"sequence": {
									"$ref": "#/definitions/positiveInt"
								},
								"_sequence": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"focal": {
									"type": "boolean"
								},
								"_focal": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"coverage": {
									"$ref": "#/definitions/Reference"
								},
								"businessArrangement": {
									"type": "string"
								},
								"_businessArrangement": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"relationship": {
									"$ref": "#/definitions/Coding"
								},
								"preAuthRef": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"type": "string"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"_preAuthRef": {
									"type": "array",
									"items": {
										"oneOf": [
											{
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											},
											{
												"type": "null"
											}
										]
									}
								},
								"claimResponse": {
									"$ref": "#/definitions/Reference"
								},
								"originalRuleset": {
									"$ref": "#/definitions/Coding"
								}
							}
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"ClinicalImpression": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"patient": {
						"$ref": "#/definitions/Reference"
					},
					"assessor": {
						"$ref": "#/definitions/Reference"
					},
					"status": {
						"$ref": "#/definitions/code"
					},
					"_status": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"date": {
						"$ref": "#/definitions/dateTime"
					},
					"_date": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"description": {
						"type": "string"
					},
					"_description": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"previous": {
						"$ref": "#/definitions/Reference"
					},
					"problem": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Reference"
						}
					},
					"triggerCodeableConcept": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"triggerReference": {
						"$ref": "#/definitions/Reference"
					},
					"investigations": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"code": {
									"$ref": "#/definitions/CodeableConcept"
								},
								"item": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Reference"
									}
								}
							}
						}
					},
					"protocol": {
						"$ref": "#/definitions/uri"
					},
					"_protocol": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"summary": {
						"type": "string"
					},
					"_summary": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"finding": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"item": {
									"$ref": "#/definitions/CodeableConcept"
								},
								"cause": {
									"type": "string"
								},
								"_cause": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								}
							}
						}
					},
					"resolved": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/CodeableConcept"
						}
					},
					"ruledOut": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"item": {
									"$ref": "#/definitions/CodeableConcept"
								},
								"reason": {
									"type": "string"
								},
								"_reason": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								}
							}
						}
					},
					"prognosis": {
						"type": "string"
					},
					"_prognosis": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"plan": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Reference"
						}
					},
					"action": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Reference"
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"Communication": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"identifier": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Identifier"
						}
					},
					"category": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"sender": {
						"$ref": "#/definitions/Reference"
					},
					"recipient": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Reference"
						}
					},
					"payload": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"contentString": {
									"type": "string"
								},
								"_contentString": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"contentAttachment": {
									"$ref": "#/definitions/Attachment"
								},
								"contentReference": {
									"$ref": "#/definitions/Reference"
								}
							}
						}
					},
					"medium": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/CodeableConcept"
						}
					},
					"status": {
						"$ref": "#/definitions/code"
					},
					"_status": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"encounter": {
						"$ref": "#/definitions/Reference"
					},
					"sent": {
						"$ref": "#/definitions/dateTime"
					},
					"_sent": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"received": {
						"$ref": "#/definitions/dateTime"
					},
					"_received": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"reason": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/CodeableConcept"
						}
					},
					"subject": {
						"$ref": "#/definitions/Reference"
					},
					"requestDetail": {
						"$ref": "#/definitions/Reference"
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"CommunicationRequest": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"identifier": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Identifier"
						}
					},
					"category": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"sender": {
						"$ref": "#/definitions/Reference"
					},
					"recipient": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Reference"
						}
					},
					"payload": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"contentString": {
									"type": "string"
								},
								"_contentString": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"contentAttachment": {
									"$ref": "#/definitions/Attachment"
								},
								"contentReference": {
									"$ref": "#/definitions/Reference"
								}
							}
						}
					},
					"medium": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/CodeableConcept"
						}
					},
					"requester": {
						"$ref": "#/definitions/Reference"
					},
					"status": {
						"$ref": "#/definitions/code"
					},
					"_status": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"encounter": {
						"$ref": "#/definitions/Reference"
					},
					"scheduledDateTime": {
						"$ref": "#/definitions/dateTime"
					},
					"_scheduledDateTime": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"scheduledPeriod": {
						"$ref": "#/definitions/Period"
					},
					"reason": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/CodeableConcept"
						}
					},
					"requestedOn": {
						"$ref": "#/definitions/dateTime"
					},
					"_requestedOn": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"subject": {
						"$ref": "#/definitions/Reference"
					},
					"priority": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"Composition": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"identifier": {
						"$ref": "#/definitions/Identifier"
					},
					"date": {
						"$ref": "#/definitions/dateTime"
					},
					"_date": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"type": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"class": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"title": {
						"type": "string"
					},
					"_title": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"status": {
						"$ref": "#/definitions/code"
					},
					"_status": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"confidentiality": {
						"$ref": "#/definitions/code"
					},
					"_confidentiality": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"subject": {
						"$ref": "#/definitions/Reference"
					},
					"author": {
						"type": "array",
						"minItems": 1,
						"items": {
							"$ref": "#/definitions/Reference"
						}
					},
					"attester": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"mode": {
									"type": "array",
									"minItems": 1,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/code"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"_mode": {
									"type": "array",
									"items": {
										"oneOf": [
											{
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											},
											{
												"type": "null"
											}
										]
									}
								},
								"time": {
									"$ref": "#/definitions/dateTime"
								},
								"_time": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"party": {
									"$ref": "#/definitions/Reference"
								}
							}
						}
					},
					"custodian": {
						"$ref": "#/definitions/Reference"
					},
					"event": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"code": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/CodeableConcept"
									}
								},
								"period": {
									"$ref": "#/definitions/Period"
								},
								"detail": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Reference"
									}
								}
							}
						}
					},
					"encounter": {
						"$ref": "#/definitions/Reference"
					},
					"section": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"title": {
									"type": "string"
								},
								"_title": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"code": {
									"$ref": "#/definitions/CodeableConcept"
								},
								"text": {
									"$ref": "#/definitions/Narrative"
								},
								"mode": {
									"$ref": "#/definitions/code"
								},
								"_mode": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"orderedBy": {
									"$ref": "#/definitions/CodeableConcept"
								},
								"entry": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Reference"
									}
								},
								"emptyReason": {
									"$ref": "#/definitions/CodeableConcept"
								},
								"section": {
									"type": "array",
									"minItems": 0,
									"items": {
										"type": "object"
									}
								}
							}
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"ConceptMap": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"url": {
						"$ref": "#/definitions/uri"
					},
					"_url": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"identifier": {
						"$ref": "#/definitions/Identifier"
					},
					"version": {
						"type": "string"
					},
					"_version": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"name": {
						"type": "string"
					},
					"_name": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"status": {
						"$ref": "#/definitions/code"
					},
					"_status": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"experimental": {
						"type": "boolean"
					},
					"_experimental": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"publisher": {
						"type": "string"
					},
					"_publisher": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"contact": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"name": {
									"type": "string"
								},
								"_name": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"telecom": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/ContactPoint"
									}
								}
							}
						}
					},
					"date": {
						"$ref": "#/definitions/dateTime"
					},
					"_date": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"description": {
						"type": "string"
					},
					"_description": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"useContext": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/CodeableConcept"
						}
					},
					"requirements": {
						"type": "string"
					},
					"_requirements": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"copyright": {
						"type": "string"
					},
					"_copyright": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"sourceUri": {
						"$ref": "#/definitions/uri"
					},
					"_sourceUri": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"sourceReference": {
						"$ref": "#/definitions/Reference"
					},
					"targetUri": {
						"$ref": "#/definitions/uri"
					},
					"_targetUri": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"targetReference": {
						"$ref": "#/definitions/Reference"
					},
					"element": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"codeSystem": {
									"$ref": "#/definitions/uri"
								},
								"_codeSystem": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"code": {
									"$ref": "#/definitions/code"
								},
								"_code": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"target": {
									"type": "array",
									"minItems": 0,
									"items": {
										"type": "object",
										"properties": {
											"id": {
												"$ref": "#/definitions/fhir_id"
											},
											"_id": {
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											},
											"extension": {
												"type": "array",
												"minItems": 0,
												"items": {
													"oneOf": [
														{
															"$ref": "#/definitions/Extension"
														},
														{
															"type": "null"
														}
													]
												}
											},
											"modifierExtension": {
												"type": "array",
												"minItems": 0,
												"items": {
													"$ref": "#/definitions/Extension"
												}
											},
											"codeSystem": {
												"$ref": "#/definitions/uri"
											},
											"_codeSystem": {
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											},
											"code": {
												"$ref": "#/definitions/code"
											},
											"_code": {
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											},
											"equivalence": {
												"$ref": "#/definitions/code"
											},
											"_equivalence": {
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											},
											"comments": {
												"type": "string"
											},
											"_comments": {
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											},
											"dependsOn": {
												"type": "array",
												"minItems": 0,
												"items": {
													"type": "object",
													"properties": {
														"id": {
															"$ref": "#/definitions/fhir_id"
														},
														"_id": {
															"type": "object",
															"properties": {
																"extension": {
																	"type": "array",
																	"items": {
																		"oneOf": [
																			{
																				"$ref": "#/definitions/Extension"
																			},
																			{
																				"type": "null"
																			}
																		]
																	}
																}
															}
														},
														"extension": {
															"type": "array",
															"minItems": 0,
															"items": {
																"oneOf": [
																	{
																		"$ref": "#/definitions/Extension"
																	},
																	{
																		"type": "null"
																	}
																]
															}
														},
														"modifierExtension": {
															"type": "array",
															"minItems": 0,
															"items": {
																"$ref": "#/definitions/Extension"
															}
														},
														"element": {
															"$ref": "#/definitions/uri"
														},
														"_element": {
															"type": "object",
															"properties": {
																"extension": {
																	"type": "array",
																	"items": {
																		"oneOf": [
																			{
																				"$ref": "#/definitions/Extension"
																			},
																			{
																				"type": "null"
																			}
																		]
																	}
																}
															}
														},
														"codeSystem": {
															"$ref": "#/definitions/uri"
														},
														"_codeSystem": {
															"type": "object",
															"properties": {
																"extension": {
																	"type": "array",
																	"items": {
																		"oneOf": [
																			{
																				"$ref": "#/definitions/Extension"
																			},
																			{
																				"type": "null"
																			}
																		]
																	}
																}
															}
														},
														"code": {
															"type": "string"
														},
														"_code": {
															"type": "object",
															"properties": {
																"extension": {
																	"type": "array",
																	"items": {
																		"oneOf": [
																			{
																				"$ref": "#/definitions/Extension"
																			},
																			{
																				"type": "null"
																			}
																		]
																	}
																}
															}
														}
													}
												}
											},
											"product": {
												"type": "array",
												"minItems": 0,
												"items": {
													"type": "object"
												}
											}
										}
									}
								}
							}
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"Condition": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"identifier": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Identifier"
						}
					},
					"patient": {
						"$ref": "#/definitions/Reference"
					},
					"encounter": {
						"$ref": "#/definitions/Reference"
					},
					"asserter": {
						"$ref": "#/definitions/Reference"
					},
					"dateRecorded": {
						"$ref": "#/definitions/date"
					},
					"_dateRecorded": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"code": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"category": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"clinicalStatus": {
						"$ref": "#/definitions/code"
					},
					"_clinicalStatus": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"verificationStatus": {
						"$ref": "#/definitions/code"
					},
					"_verificationStatus": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"severity": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"onsetDateTime": {
						"$ref": "#/definitions/dateTime"
					},
					"_onsetDateTime": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"onsetQuantity": {
						"$ref": "#/definitions/Quantity"
					},
					"onsetPeriod": {
						"$ref": "#/definitions/Period"
					},
					"onsetRange": {
						"$ref": "#/definitions/Range"
					},
					"onsetString": {
						"type": "string"
					},
					"_onsetString": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"abatementDateTime": {
						"$ref": "#/definitions/dateTime"
					},
					"_abatementDateTime": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"abatementQuantity": {
						"$ref": "#/definitions/Quantity"
					},
					"abatementBoolean": {
						"type": "boolean"
					},
					"_abatementBoolean": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"abatementPeriod": {
						"$ref": "#/definitions/Period"
					},
					"abatementRange": {
						"$ref": "#/definitions/Range"
					},
					"abatementString": {
						"type": "string"
					},
					"_abatementString": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"stage": {
						"type": "object",
						"additionalProperties": false,
						"properties": {
							"fhir_comments": {
								"type": "array",
								"items": {
									"type": "string"
								}
							},
							"id": {
								"$ref": "#/definitions/fhir_id"
							},
							"_id": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							},
							"extension": {
								"type": "array",
								"minItems": 0,
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							},
							"modifierExtension": {
								"type": "array",
								"minItems": 0,
								"items": {
									"$ref": "#/definitions/Extension"
								}
							},
							"summary": {
								"$ref": "#/definitions/CodeableConcept"
							},
							"assessment": {
								"type": "array",
								"minItems": 0,
								"items": {
									"$ref": "#/definitions/Reference"
								}
							}
						}
					},
					"evidence": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"code": {
									"$ref": "#/definitions/CodeableConcept"
								},
								"detail": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Reference"
									}
								}
							}
						}
					},
					"bodySite": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/CodeableConcept"
						}
					},
					"notes": {
						"type": "string"
					},
					"_notes": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"Conformance": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"url": {
						"$ref": "#/definitions/uri"
					},
					"_url": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"version": {
						"type": "string"
					},
					"_version": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"name": {
						"type": "string"
					},
					"_name": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"status": {
						"$ref": "#/definitions/code"
					},
					"_status": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"experimental": {
						"type": "boolean"
					},
					"_experimental": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"publisher": {
						"type": "string"
					},
					"_publisher": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"contact": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"name": {
									"type": "string"
								},
								"_name": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"telecom": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/ContactPoint"
									}
								}
							}
						}
					},
					"date": {
						"$ref": "#/definitions/dateTime"
					},
					"_date": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"description": {
						"type": "string"
					},
					"_description": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"requirements": {
						"type": "string"
					},
					"_requirements": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"copyright": {
						"type": "string"
					},
					"_copyright": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"kind": {
						"$ref": "#/definitions/code"
					},
					"_kind": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"software": {
						"type": "object",
						"additionalProperties": false,
						"properties": {
							"fhir_comments": {
								"type": "array",
								"items": {
									"type": "string"
								}
							},
							"id": {
								"$ref": "#/definitions/fhir_id"
							},
							"_id": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							},
							"extension": {
								"type": "array",
								"minItems": 0,
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							},
							"modifierExtension": {
								"type": "array",
								"minItems": 0,
								"items": {
									"$ref": "#/definitions/Extension"
								}
							},
							"name": {
								"type": "string"
							},
							"_name": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							},
							"version": {
								"type": "string"
							},
							"_version": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							},
							"releaseDate": {
								"$ref": "#/definitions/dateTime"
							},
							"_releaseDate": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							}
						}
					},
					"implementation": {
						"type": "object",
						"additionalProperties": false,
						"properties": {
							"fhir_comments": {
								"type": "array",
								"items": {
									"type": "string"
								}
							},
							"id": {
								"$ref": "#/definitions/fhir_id"
							},
							"_id": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							},
							"extension": {
								"type": "array",
								"minItems": 0,
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							},
							"modifierExtension": {
								"type": "array",
								"minItems": 0,
								"items": {
									"$ref": "#/definitions/Extension"
								}
							},
							"description": {
								"type": "string"
							},
							"_description": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							},
							"url": {
								"$ref": "#/definitions/uri"
							},
							"_url": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							}
						}
					},
					"fhirVersion": {
						"$ref": "#/definitions/fhir_id"
					},
					"_fhirVersion": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"acceptUnknown": {
						"$ref": "#/definitions/code"
					},
					"_acceptUnknown": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"format": {
						"type": "array",
						"minItems": 1,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/code"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"_format": {
						"type": "array",
						"items": {
							"oneOf": [
								{
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								{
									"type": "null"
								}
							]
						}
					},
					"profile": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Reference"
						}
					},
					"rest": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"mode": {
									"$ref": "#/definitions/code"
								},
								"_mode": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"documentation": {
									"type": "string"
								},
								"_documentation": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"security": {
									"type": "object",
									"additionalProperties": false,
									"properties": {
										"fhir_comments": {
											"type": "array",
											"items": {
												"type": "string"
											}
										},
										"id": {
											"$ref": "#/definitions/fhir_id"
										},
										"_id": {
											"type": "object",
											"properties": {
												"extension": {
													"type": "array",
													"items": {
														"oneOf": [
															{
																"$ref": "#/definitions/Extension"
															},
															{
																"type": "null"
															}
														]
													}
												}
											}
										},
										"extension": {
											"type": "array",
											"minItems": 0,
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										},
										"modifierExtension": {
											"type": "array",
											"minItems": 0,
											"items": {
												"$ref": "#/definitions/Extension"
											}
										},
										"cors": {
											"type": "boolean"
										},
										"_cors": {
											"type": "object",
											"properties": {
												"extension": {
													"type": "array",
													"items": {
														"oneOf": [
															{
																"$ref": "#/definitions/Extension"
															},
															{
																"type": "null"
															}
														]
													}
												}
											}
										},
										"service": {
											"type": "array",
											"minItems": 0,
											"items": {
												"$ref": "#/definitions/CodeableConcept"
											}
										},
										"description": {
											"type": "string"
										},
										"_description": {
											"type": "object",
											"properties": {
												"extension": {
													"type": "array",
													"items": {
														"oneOf": [
															{
																"$ref": "#/definitions/Extension"
															},
															{
																"type": "null"
															}
														]
													}
												}
											}
										},
										"certificate": {
											"type": "array",
											"minItems": 0,
											"items": {
												"type": "object",
												"properties": {
													"id": {
														"$ref": "#/definitions/fhir_id"
													},
													"_id": {
														"type": "object",
														"properties": {
															"extension": {
																"type": "array",
																"items": {
																	"oneOf": [
																		{
																			"$ref": "#/definitions/Extension"
																		},
																		{
																			"type": "null"
																		}
																	]
																}
															}
														}
													},
													"extension": {
														"type": "array",
														"minItems": 0,
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													},
													"modifierExtension": {
														"type": "array",
														"minItems": 0,
														"items": {
															"$ref": "#/definitions/Extension"
														}
													},
													"type": {
														"$ref": "#/definitions/code"
													},
													"_type": {
														"type": "object",
														"properties": {
															"extension": {
																"type": "array",
																"items": {
																	"oneOf": [
																		{
																			"$ref": "#/definitions/Extension"
																		},
																		{
																			"type": "null"
																		}
																	]
																}
															}
														}
													},
													"blob": {
														"$ref": "#/definitions/base64Binary"
													},
													"_blob": {
														"type": "object",
														"properties": {
															"extension": {
																"type": "array",
																"items": {
																	"oneOf": [
																		{
																			"$ref": "#/definitions/Extension"
																		},
																		{
																			"type": "null"
																		}
																	]
																}
															}
														}
													}
												}
											}
										}
									}
								},
								"resource": {
									"type": "array",
									"minItems": 1,
									"items": {
										"type": "object",
										"properties": {
											"id": {
												"$ref": "#/definitions/fhir_id"
											},
											"_id": {
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											},
											"extension": {
												"type": "array",
												"minItems": 0,
												"items": {
													"oneOf": [
														{
															"$ref": "#/definitions/Extension"
														},
														{
															"type": "null"
														}
													]
												}
											},
											"modifierExtension": {
												"type": "array",
												"minItems": 0,
												"items": {
													"$ref": "#/definitions/Extension"
												}
											},
											"type": {
												"$ref": "#/definitions/code"
											},
											"_type": {
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											},
											"profile": {
												"$ref": "#/definitions/Reference"
											},
											"interaction": {
												"type": "array",
												"minItems": 1,
												"items": {
													"type": "object",
													"properties": {
														"id": {
															"$ref": "#/definitions/fhir_id"
														},
														"_id": {
															"type": "object",
															"properties": {
																"extension": {
																	"type": "array",
																	"items": {
																		"oneOf": [
																			{
																				"$ref": "#/definitions/Extension"
																			},
																			{
																				"type": "null"
																			}
																		]
																	}
																}
															}
														},
														"extension": {
															"type": "array",
															"minItems": 0,
															"items": {
																"oneOf": [
																	{
																		"$ref": "#/definitions/Extension"
																	},
																	{
																		"type": "null"
																	}
																]
															}
														},
														"modifierExtension": {
															"type": "array",
															"minItems": 0,
															"items": {
																"$ref": "#/definitions/Extension"
															}
														},
														"code": {
															"$ref": "#/definitions/code"
														},
														"_code": {
															"type": "object",
															"properties": {
																"extension": {
																	"type": "array",
																	"items": {
																		"oneOf": [
																			{
																				"$ref": "#/definitions/Extension"
																			},
																			{
																				"type": "null"
																			}
																		]
																	}
																}
															}
														},
														"documentation": {
															"type": "string"
														},
														"_documentation": {
															"type": "object",
															"properties": {
																"extension": {
																	"type": "array",
																	"items": {
																		"oneOf": [
																			{
																				"$ref": "#/definitions/Extension"
																			},
																			{
																				"type": "null"
																			}
																		]
																	}
																}
															}
														}
													}
												}
											},
											"versioning": {
												"$ref": "#/definitions/code"
											},
											"_versioning": {
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											},
											"readHistory": {
												"type": "boolean"
											},
											"_readHistory": {
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											},
											"updateCreate": {
												"type": "boolean"
											},
											"_updateCreate": {
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											},
											"conditionalCreate": {
												"type": "boolean"
											},
											"_conditionalCreate": {
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											},
											"conditionalUpdate": {
												"type": "boolean"
											},
											"_conditionalUpdate": {
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											},
											"conditionalDelete": {
												"$ref": "#/definitions/code"
											},
											"_conditionalDelete": {
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											},
											"searchInclude": {
												"type": "array",
												"minItems": 0,
												"items": {
													"oneOf": [
														{
															"type": "string"
														},
														{
															"type": "null"
														}
													]
												}
											},
											"_searchInclude": {
												"type": "array",
												"items": {
													"oneOf": [
														{
															"type": "object",
															"properties": {
																"extension": {
																	"type": "array",
																	"items": {
																		"oneOf": [
																			{
																				"$ref": "#/definitions/Extension"
																			},
																			{
																				"type": "null"
																			}
																		]
																	}
																}
															}
														},
														{
															"type": "null"
														}
													]
												}
											},
											"searchRevInclude": {
												"type": "array",
												"minItems": 0,
												"items": {
													"oneOf": [
														{
															"type": "string"
														},
														{
															"type": "null"
														}
													]
												}
											},
											"_searchRevInclude": {
												"type": "array",
												"items": {
													"oneOf": [
														{
															"type": "object",
															"properties": {
																"extension": {
																	"type": "array",
																	"items": {
																		"oneOf": [
																			{
																				"$ref": "#/definitions/Extension"
																			},
																			{
																				"type": "null"
																			}
																		]
																	}
																}
															}
														},
														{
															"type": "null"
														}
													]
												}
											},
											"searchParam": {
												"type": "array",
												"minItems": 0,
												"items": {
													"type": "object",
													"properties": {
														"id": {
															"$ref": "#/definitions/fhir_id"
														},
														"_id": {
															"type": "object",
															"properties": {
																"extension": {
																	"type": "array",
																	"items": {
																		"oneOf": [
																			{
																				"$ref": "#/definitions/Extension"
																			},
																			{
																				"type": "null"
																			}
																		]
																	}
																}
															}
														},
														"extension": {
															"type": "array",
															"minItems": 0,
															"items": {
																"oneOf": [
																	{
																		"$ref": "#/definitions/Extension"
																	},
																	{
																		"type": "null"
																	}
																]
															}
														},
														"modifierExtension": {
															"type": "array",
															"minItems": 0,
															"items": {
																"$ref": "#/definitions/Extension"
															}
														},
														"name": {
															"type": "string"
														},
														"_name": {
															"type": "object",
															"properties": {
																"extension": {
																	"type": "array",
																	"items": {
																		"oneOf": [
																			{
																				"$ref": "#/definitions/Extension"
																			},
																			{
																				"type": "null"
																			}
																		]
																	}
																}
															}
														},
														"definition": {
															"$ref": "#/definitions/uri"
														},
														"_definition": {
															"type": "object",
															"properties": {
																"extension": {
																	"type": "array",
																	"items": {
																		"oneOf": [
																			{
																				"$ref": "#/definitions/Extension"
																			},
																			{
																				"type": "null"
																			}
																		]
																	}
																}
															}
														},
														"type": {
															"$ref": "#/definitions/code"
														},
														"_type": {
															"type": "object",
															"properties": {
																"extension": {
																	"type": "array",
																	"items": {
																		"oneOf": [
																			{
																				"$ref": "#/definitions/Extension"
																			},
																			{
																				"type": "null"
																			}
																		]
																	}
																}
															}
														},
														"documentation": {
															"type": "string"
														},
														"_documentation": {
															"type": "object",
															"properties": {
																"extension": {
																	"type": "array",
																	"items": {
																		"oneOf": [
																			{
																				"$ref": "#/definitions/Extension"
																			},
																			{
																				"type": "null"
																			}
																		]
																	}
																}
															}
														},
														"target": {
															"type": "array",
															"minItems": 0,
															"items": {
																"oneOf": [
																	{
																		"$ref": "#/definitions/code"
																	},
																	{
																		"type": "null"
																	}
																]
															}
														},
														"_target": {
															"type": "array",
															"items": {
																"oneOf": [
																	{
																		"type": "object",
																		"properties": {
																			"extension": {
																				"type": "array",
																				"items": {
																					"oneOf": [
																						{
																							"$ref": "#/definitions/Extension"
																						},
																						{
																							"type": "null"
																						}
																					]
																				}
																			}
																		}
																	},
																	{
																		"type": "null"
																	}
																]
															}
														},
														"modifier": {
															"type": "array",
															"minItems": 0,
															"items": {
																"oneOf": [
																	{
																		"$ref": "#/definitions/code"
																	},
																	{
																		"type": "null"
																	}
																]
															}
														},
														"_modifier": {
															"type": "array",
															"items": {
																"oneOf": [
																	{
																		"type": "object",
																		"properties": {
																			"extension": {
																				"type": "array",
																				"items": {
																					"oneOf": [
																						{
																							"$ref": "#/definitions/Extension"
																						},
																						{
																							"type": "null"
																						}
																					]
																				}
																			}
																		}
																	},
																	{
																		"type": "null"
																	}
																]
															}
														},
														"chain": {
															"type": "array",
															"minItems": 0,
															"items": {
																"oneOf": [
																	{
																		"type": "string"
																	},
																	{
																		"type": "null"
																	}
																]
															}
														},
														"_chain": {
															"type": "array",
															"items": {
																"oneOf": [
																	{
																		"type": "object",
																		"properties": {
																			"extension": {
																				"type": "array",
																				"items": {
																					"oneOf": [
																						{
																							"$ref": "#/definitions/Extension"
																						},
																						{
																							"type": "null"
																						}
																					]
																				}
																			}
																		}
																	},
																	{
																		"type": "null"
																	}
																]
															}
														}
													}
												}
											}
										}
									}
								},
								"interaction": {
									"type": "array",
									"minItems": 0,
									"items": {
										"type": "object",
										"properties": {
											"id": {
												"$ref": "#/definitions/fhir_id"
											},
											"_id": {
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											},
											"extension": {
												"type": "array",
												"minItems": 0,
												"items": {
													"oneOf": [
														{
															"$ref": "#/definitions/Extension"
														},
														{
															"type": "null"
														}
													]
												}
											},
											"modifierExtension": {
												"type": "array",
												"minItems": 0,
												"items": {
													"$ref": "#/definitions/Extension"
												}
											},
											"code": {
												"$ref": "#/definitions/code"
											},
											"_code": {
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											},
											"documentation": {
												"type": "string"
											},
											"_documentation": {
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											}
										}
									}
								},
								"transactionMode": {
									"$ref": "#/definitions/code"
								},
								"_transactionMode": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"searchParam": {
									"type": "array",
									"minItems": 0,
									"items": {
										"type": "object"
									}
								},
								"operation": {
									"type": "array",
									"minItems": 0,
									"items": {
										"type": "object",
										"properties": {
											"id": {
												"$ref": "#/definitions/fhir_id"
											},
											"_id": {
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											},
											"extension": {
												"type": "array",
												"minItems": 0,
												"items": {
													"oneOf": [
														{
															"$ref": "#/definitions/Extension"
														},
														{
															"type": "null"
														}
													]
												}
											},
											"modifierExtension": {
												"type": "array",
												"minItems": 0,
												"items": {
													"$ref": "#/definitions/Extension"
												}
											},
											"name": {
												"type": "string"
											},
											"_name": {
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											},
											"definition": {
												"$ref": "#/definitions/Reference"
											}
										}
									}
								},
								"compartment": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/uri"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"_compartment": {
									"type": "array",
									"items": {
										"oneOf": [
											{
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											},
											{
												"type": "null"
											}
										]
									}
								}
							}
						}
					},
					"messaging": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"endpoint": {
									"type": "array",
									"minItems": 0,
									"items": {
										"type": "object",
										"properties": {
											"id": {
												"$ref": "#/definitions/fhir_id"
											},
											"_id": {
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											},
											"extension": {
												"type": "array",
												"minItems": 0,
												"items": {
													"oneOf": [
														{
															"$ref": "#/definitions/Extension"
														},
														{
															"type": "null"
														}
													]
												}
											},
											"modifierExtension": {
												"type": "array",
												"minItems": 0,
												"items": {
													"$ref": "#/definitions/Extension"
												}
											},
											"protocol": {
												"$ref": "#/definitions/Coding"
											},
											"address": {
												"$ref": "#/definitions/uri"
											},
											"_address": {
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											}
										}
									}
								},
								"reliableCache": {
									"$ref": "#/definitions/unsignedInt"
								},
								"_reliableCache": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"documentation": {
									"type": "string"
								},
								"_documentation": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"event": {
									"type": "array",
									"minItems": 1,
									"items": {
										"type": "object",
										"properties": {
											"id": {
												"$ref": "#/definitions/fhir_id"
											},
											"_id": {
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											},
											"extension": {
												"type": "array",
												"minItems": 0,
												"items": {
													"oneOf": [
														{
															"$ref": "#/definitions/Extension"
														},
														{
															"type": "null"
														}
													]
												}
											},
											"modifierExtension": {
												"type": "array",
												"minItems": 0,
												"items": {
													"$ref": "#/definitions/Extension"
												}
											},
											"code": {
												"$ref": "#/definitions/Coding"
											},
											"category": {
												"$ref": "#/definitions/code"
											},
											"_category": {
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											},
											"mode": {
												"$ref": "#/definitions/code"
											},
											"_mode": {
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											},
											"focus": {
												"$ref": "#/definitions/code"
											},
											"_focus": {
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											},
											"request": {
												"$ref": "#/definitions/Reference"
											},
											"response": {
												"$ref": "#/definitions/Reference"
											},
											"documentation": {
												"type": "string"
											},
											"_documentation": {
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											}
										}
									}
								}
							}
						}
					},
					"document": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"mode": {
									"$ref": "#/definitions/code"
								},
								"_mode": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"documentation": {
									"type": "string"
								},
								"_documentation": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"profile": {
									"$ref": "#/definitions/Reference"
								}
							}
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"Contract": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"identifier": {
						"$ref": "#/definitions/Identifier"
					},
					"issued": {
						"$ref": "#/definitions/dateTime"
					},
					"_issued": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"applies": {
						"$ref": "#/definitions/Period"
					},
					"subject": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Reference"
						}
					},
					"authority": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Reference"
						}
					},
					"domain": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Reference"
						}
					},
					"type": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"subType": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/CodeableConcept"
						}
					},
					"action": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/CodeableConcept"
						}
					},
					"actionReason": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/CodeableConcept"
						}
					},
					"actor": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"entity": {
									"$ref": "#/definitions/Reference"
								},
								"role": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/CodeableConcept"
									}
								}
							}
						}
					},
					"valuedItem": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"entityCodeableConcept": {
									"$ref": "#/definitions/CodeableConcept"
								},
								"entityReference": {
									"$ref": "#/definitions/Reference"
								},
								"identifier": {
									"$ref": "#/definitions/Identifier"
								},
								"effectiveTime": {
									"$ref": "#/definitions/dateTime"
								},
								"_effectiveTime": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"quantity": {
									"$ref": "#/definitions/Quantity"
								},
								"unitPrice": {
									"$ref": "#/definitions/Quantity"
								},
								"factor": {
									"$ref": "#/definitions/decimal"
								},
								"_factor": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"points": {
									"$ref": "#/definitions/decimal"
								},
								"_points": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"net": {
									"$ref": "#/definitions/Quantity"
								}
							}
						}
					},
					"signer": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"type": {
									"$ref": "#/definitions/Coding"
								},
								"party": {
									"$ref": "#/definitions/Reference"
								},
								"signature": {
									"type": "string"
								},
								"_signature": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								}
							}
						}
					},
					"term": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"identifier": {
									"$ref": "#/definitions/Identifier"
								},
								"issued": {
									"$ref": "#/definitions/dateTime"
								},
								"_issued": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"applies": {
									"$ref": "#/definitions/Period"
								},
								"type": {
									"$ref": "#/definitions/CodeableConcept"
								},
								"subType": {
									"$ref": "#/definitions/CodeableConcept"
								},
								"subject": {
									"$ref": "#/definitions/Reference"
								},
								"action": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/CodeableConcept"
									}
								},
								"actionReason": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/CodeableConcept"
									}
								},
								"actor": {
									"type": "array",
									"minItems": 0,
									"items": {
										"type": "object",
										"properties": {
											"id": {
												"$ref": "#/definitions/fhir_id"
											},
											"_id": {
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											},
											"extension": {
												"type": "array",
												"minItems": 0,
												"items": {
													"oneOf": [
														{
															"$ref": "#/definitions/Extension"
														},
														{
															"type": "null"
														}
													]
												}
											},
											"modifierExtension": {
												"type": "array",
												"minItems": 0,
												"items": {
													"$ref": "#/definitions/Extension"
												}
											},
											"entity": {
												"$ref": "#/definitions/Reference"
											},
											"role": {
												"type": "array",
												"minItems": 0,
												"items": {
													"$ref": "#/definitions/CodeableConcept"
												}
											}
										}
									}
								},
								"text": {
									"type": "string"
								},
								"_text": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"valuedItem": {
									"type": "array",
									"minItems": 0,
									"items": {
										"type": "object",
										"properties": {
											"id": {
												"$ref": "#/definitions/fhir_id"
											},
											"_id": {
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											},
											"extension": {
												"type": "array",
												"minItems": 0,
												"items": {
													"oneOf": [
														{
															"$ref": "#/definitions/Extension"
														},
														{
															"type": "null"
														}
													]
												}
											},
											"modifierExtension": {
												"type": "array",
												"minItems": 0,
												"items": {
													"$ref": "#/definitions/Extension"
												}
											},
											"entityCodeableConcept": {
												"$ref": "#/definitions/CodeableConcept"
											},
											"entityReference": {
												"$ref": "#/definitions/Reference"
											},
											"identifier": {
												"$ref": "#/definitions/Identifier"
											},
											"effectiveTime": {
												"$ref": "#/definitions/dateTime"
											},
											"_effectiveTime": {
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											},
											"quantity": {
												"$ref": "#/definitions/Quantity"
											},
											"unitPrice": {
												"$ref": "#/definitions/Quantity"
											},
											"factor": {
												"$ref": "#/definitions/decimal"
											},
											"_factor": {
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											},
											"points": {
												"$ref": "#/definitions/decimal"
											},
											"_points": {
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											},
											"net": {
												"$ref": "#/definitions/Quantity"
											}
										}
									}
								},
								"group": {
									"type": "array",
									"minItems": 0,
									"items": {
										"type": "object"
									}
								}
							}
						}
					},
					"bindingAttachment": {
						"$ref": "#/definitions/Attachment"
					},
					"bindingReference": {
						"$ref": "#/definitions/Reference"
					},
					"friendly": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"contentAttachment": {
									"$ref": "#/definitions/Attachment"
								},
								"contentReference": {
									"$ref": "#/definitions/Reference"
								}
							}
						}
					},
					"legal": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"contentAttachment": {
									"$ref": "#/definitions/Attachment"
								},
								"contentReference": {
									"$ref": "#/definitions/Reference"
								}
							}
						}
					},
					"rule": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"contentAttachment": {
									"$ref": "#/definitions/Attachment"
								},
								"contentReference": {
									"$ref": "#/definitions/Reference"
								}
							}
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"Coverage": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"issuer": {
						"$ref": "#/definitions/Reference"
					},
					"bin": {
						"$ref": "#/definitions/Identifier"
					},
					"period": {
						"$ref": "#/definitions/Period"
					},
					"type": {
						"$ref": "#/definitions/Coding"
					},
					"subscriberId": {
						"$ref": "#/definitions/Identifier"
					},
					"identifier": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Identifier"
						}
					},
					"group": {
						"type": "string"
					},
					"_group": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"plan": {
						"type": "string"
					},
					"_plan": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"subPlan": {
						"type": "string"
					},
					"_subPlan": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"dependent": {
						"$ref": "#/definitions/positiveInt"
					},
					"_dependent": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"sequence": {
						"$ref": "#/definitions/positiveInt"
					},
					"_sequence": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"subscriber": {
						"$ref": "#/definitions/Reference"
					},
					"network": {
						"$ref": "#/definitions/Identifier"
					},
					"contract": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Reference"
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"DataElement": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"url": {
						"$ref": "#/definitions/uri"
					},
					"_url": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"identifier": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Identifier"
						}
					},
					"version": {
						"type": "string"
					},
					"_version": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"name": {
						"type": "string"
					},
					"_name": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"status": {
						"$ref": "#/definitions/code"
					},
					"_status": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"experimental": {
						"type": "boolean"
					},
					"_experimental": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"publisher": {
						"type": "string"
					},
					"_publisher": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"contact": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"name": {
									"type": "string"
								},
								"_name": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"telecom": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/ContactPoint"
									}
								}
							}
						}
					},
					"date": {
						"$ref": "#/definitions/dateTime"
					},
					"_date": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"useContext": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/CodeableConcept"
						}
					},
					"copyright": {
						"type": "string"
					},
					"_copyright": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"stringency": {
						"$ref": "#/definitions/code"
					},
					"_stringency": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"mapping": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"identity": {
									"$ref": "#/definitions/fhir_id"
								},
								"_identity": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"uri": {
									"$ref": "#/definitions/uri"
								},
								"_uri": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"name": {
									"type": "string"
								},
								"_name": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"comments": {
									"type": "string"
								},
								"_comments": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								}
							}
						}
					},
					"element": {
						"type": "array",
						"minItems": 1,
						"items": {
							"$ref": "#/definitions/ElementDefinition"
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"DecisionSupportRule": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"identifier": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Identifier"
						}
					},
					"version": {
						"type": "string"
					},
					"_version": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"moduleMetadata": {
						"$ref": "#/definitions/Reference"
					},
					"library": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Reference"
						}
					},
					"trigger": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"type": {
									"$ref": "#/definitions/code"
								},
								"_type": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"eventName": {
									"type": "string"
								},
								"_eventName": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"eventTimingTiming": {
									"$ref": "#/definitions/Timing"
								},
								"eventTimingReference": {
									"$ref": "#/definitions/Reference"
								},
								"eventTimingDate": {
									"$ref": "#/definitions/date"
								},
								"_eventTimingDate": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"eventTimingDateTime": {
									"$ref": "#/definitions/dateTime"
								},
								"_eventTimingDateTime": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								}
							}
						}
					},
					"condition": {
						"type": "string"
					},
					"_condition": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"action": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"actionIdentifier": {
									"$ref": "#/definitions/Identifier"
								},
								"number": {
									"type": "string"
								},
								"_number": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"supportingEvidence": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Attachment"
									}
								},
								"documentation": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Attachment"
									}
								},
								"participantType": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/code"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"_participantType": {
									"type": "array",
									"items": {
										"oneOf": [
											{
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											},
											{
												"type": "null"
											}
										]
									}
								},
								"title": {
									"type": "string"
								},
								"_title": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"description": {
									"type": "string"
								},
								"_description": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"textEquivalent": {
									"type": "string"
								},
								"_textEquivalent": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"concept": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/CodeableConcept"
									}
								},
								"type": {
									"$ref": "#/definitions/code"
								},
								"_type": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"resource": {
									"$ref": "#/definitions/Reference"
								},
								"customization": {
									"type": "array",
									"minItems": 0,
									"items": {
										"type": "object",
										"properties": {
											"id": {
												"$ref": "#/definitions/fhir_id"
											},
											"_id": {
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											},
											"extension": {
												"type": "array",
												"minItems": 0,
												"items": {
													"oneOf": [
														{
															"$ref": "#/definitions/Extension"
														},
														{
															"type": "null"
														}
													]
												}
											},
											"modifierExtension": {
												"type": "array",
												"minItems": 0,
												"items": {
													"$ref": "#/definitions/Extension"
												}
											},
											"path": {
												"type": "string"
											},
											"_path": {
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											},
											"expression": {
												"type": "string"
											},
											"_expression": {
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											}
										}
									}
								},
								"actions": {
									"type": "array",
									"minItems": 0,
									"items": {
										"type": "object"
									}
								}
							}
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"DecisionSupportServiceModule": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"identifier": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Identifier"
						}
					},
					"version": {
						"type": "string"
					},
					"_version": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"moduleMetadata": {
						"$ref": "#/definitions/Reference"
					},
					"moduleDefinition": {
						"$ref": "#/definitions/Reference"
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"DetectedIssue": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"patient": {
						"$ref": "#/definitions/Reference"
					},
					"category": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"severity": {
						"$ref": "#/definitions/code"
					},
					"_severity": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"implicated": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Reference"
						}
					},
					"detail": {
						"type": "string"
					},
					"_detail": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"date": {
						"$ref": "#/definitions/dateTime"
					},
					"_date": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"author": {
						"$ref": "#/definitions/Reference"
					},
					"identifier": {
						"$ref": "#/definitions/Identifier"
					},
					"reference": {
						"$ref": "#/definitions/uri"
					},
					"_reference": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"mitigation": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"action": {
									"$ref": "#/definitions/CodeableConcept"
								},
								"date": {
									"$ref": "#/definitions/dateTime"
								},
								"_date": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"author": {
									"$ref": "#/definitions/Reference"
								}
							}
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"Device": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"identifier": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Identifier"
						}
					},
					"type": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"note": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Annotation"
						}
					},
					"status": {
						"$ref": "#/definitions/code"
					},
					"_status": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"manufacturer": {
						"type": "string"
					},
					"_manufacturer": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"model": {
						"type": "string"
					},
					"_model": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"version": {
						"type": "string"
					},
					"_version": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"manufactureDate": {
						"$ref": "#/definitions/dateTime"
					},
					"_manufactureDate": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"expiry": {
						"$ref": "#/definitions/dateTime"
					},
					"_expiry": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"udi": {
						"type": "string"
					},
					"_udi": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"lotNumber": {
						"type": "string"
					},
					"_lotNumber": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"owner": {
						"$ref": "#/definitions/Reference"
					},
					"location": {
						"$ref": "#/definitions/Reference"
					},
					"patient": {
						"$ref": "#/definitions/Reference"
					},
					"contact": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/ContactPoint"
						}
					},
					"url": {
						"$ref": "#/definitions/uri"
					},
					"_url": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"DeviceComponent": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"type": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"identifier": {
						"$ref": "#/definitions/Identifier"
					},
					"lastSystemChange": {
						"$ref": "#/definitions/instant"
					},
					"_lastSystemChange": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"source": {
						"$ref": "#/definitions/Reference"
					},
					"parent": {
						"$ref": "#/definitions/Reference"
					},
					"operationalStatus": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/CodeableConcept"
						}
					},
					"parameterGroup": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"measurementPrinciple": {
						"$ref": "#/definitions/code"
					},
					"_measurementPrinciple": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"productionSpecification": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"specType": {
									"$ref": "#/definitions/CodeableConcept"
								},
								"componentId": {
									"$ref": "#/definitions/Identifier"
								},
								"productionSpec": {
									"type": "string"
								},
								"_productionSpec": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								}
							}
						}
					},
					"languageCode": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"DeviceMetric": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"type": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"identifier": {
						"$ref": "#/definitions/Identifier"
					},
					"unit": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"source": {
						"$ref": "#/definitions/Reference"
					},
					"parent": {
						"$ref": "#/definitions/Reference"
					},
					"operationalStatus": {
						"$ref": "#/definitions/code"
					},
					"_operationalStatus": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"color": {
						"$ref": "#/definitions/code"
					},
					"_color": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"category": {
						"$ref": "#/definitions/code"
					},
					"_category": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"measurementPeriod": {
						"$ref": "#/definitions/Timing"
					},
					"calibration": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"type": {
									"$ref": "#/definitions/code"
								},
								"_type": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"state": {
									"$ref": "#/definitions/code"
								},
								"_state": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"time": {
									"$ref": "#/definitions/instant"
								},
								"_time": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								}
							}
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"DeviceUseRequest": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"bodySiteCodeableConcept": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"bodySiteReference": {
						"$ref": "#/definitions/Reference"
					},
					"status": {
						"$ref": "#/definitions/code"
					},
					"_status": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"device": {
						"$ref": "#/definitions/Reference"
					},
					"encounter": {
						"$ref": "#/definitions/Reference"
					},
					"identifier": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Identifier"
						}
					},
					"indication": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/CodeableConcept"
						}
					},
					"notes": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"type": "string"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"_notes": {
						"type": "array",
						"items": {
							"oneOf": [
								{
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								{
									"type": "null"
								}
							]
						}
					},
					"prnReason": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/CodeableConcept"
						}
					},
					"orderedOn": {
						"$ref": "#/definitions/dateTime"
					},
					"_orderedOn": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"recordedOn": {
						"$ref": "#/definitions/dateTime"
					},
					"_recordedOn": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"subject": {
						"$ref": "#/definitions/Reference"
					},
					"timingTiming": {
						"$ref": "#/definitions/Timing"
					},
					"timingPeriod": {
						"$ref": "#/definitions/Period"
					},
					"timingDateTime": {
						"$ref": "#/definitions/dateTime"
					},
					"_timingDateTime": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"priority": {
						"$ref": "#/definitions/code"
					},
					"_priority": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"DeviceUseStatement": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"bodySiteCodeableConcept": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"bodySiteReference": {
						"$ref": "#/definitions/Reference"
					},
					"whenUsed": {
						"$ref": "#/definitions/Period"
					},
					"device": {
						"$ref": "#/definitions/Reference"
					},
					"identifier": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Identifier"
						}
					},
					"indication": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/CodeableConcept"
						}
					},
					"notes": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"type": "string"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"_notes": {
						"type": "array",
						"items": {
							"oneOf": [
								{
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								{
									"type": "null"
								}
							]
						}
					},
					"recordedOn": {
						"$ref": "#/definitions/dateTime"
					},
					"_recordedOn": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"subject": {
						"$ref": "#/definitions/Reference"
					},
					"timingTiming": {
						"$ref": "#/definitions/Timing"
					},
					"timingPeriod": {
						"$ref": "#/definitions/Period"
					},
					"timingDateTime": {
						"$ref": "#/definitions/dateTime"
					},
					"_timingDateTime": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"DiagnosticOrder": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"subject": {
						"$ref": "#/definitions/Reference"
					},
					"orderer": {
						"$ref": "#/definitions/Reference"
					},
					"identifier": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Identifier"
						}
					},
					"encounter": {
						"$ref": "#/definitions/Reference"
					},
					"reason": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/CodeableConcept"
						}
					},
					"supportingInformation": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Reference"
						}
					},
					"specimen": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Reference"
						}
					},
					"status": {
						"$ref": "#/definitions/code"
					},
					"_status": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"priority": {
						"$ref": "#/definitions/code"
					},
					"_priority": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"event": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"status": {
									"$ref": "#/definitions/code"
								},
								"_status": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"description": {
									"$ref": "#/definitions/CodeableConcept"
								},
								"dateTime": {
									"$ref": "#/definitions/dateTime"
								},
								"_dateTime": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"actor": {
									"$ref": "#/definitions/Reference"
								}
							}
						}
					},
					"item": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"code": {
									"$ref": "#/definitions/CodeableConcept"
								},
								"specimen": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Reference"
									}
								},
								"bodySite": {
									"$ref": "#/definitions/CodeableConcept"
								},
								"status": {
									"$ref": "#/definitions/code"
								},
								"_status": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"event": {
									"type": "array",
									"minItems": 0,
									"items": {
										"type": "object"
									}
								}
							}
						}
					},
					"note": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Annotation"
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"DiagnosticReport": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"identifier": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Identifier"
						}
					},
					"status": {
						"$ref": "#/definitions/code"
					},
					"_status": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"category": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"code": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"subject": {
						"$ref": "#/definitions/Reference"
					},
					"encounter": {
						"$ref": "#/definitions/Reference"
					},
					"effectiveDateTime": {
						"$ref": "#/definitions/dateTime"
					},
					"_effectiveDateTime": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"effectivePeriod": {
						"$ref": "#/definitions/Period"
					},
					"issued": {
						"$ref": "#/definitions/instant"
					},
					"_issued": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"performer": {
						"$ref": "#/definitions/Reference"
					},
					"request": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Reference"
						}
					},
					"specimen": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Reference"
						}
					},
					"result": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Reference"
						}
					},
					"imagingStudy": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Reference"
						}
					},
					"image": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"comment": {
									"type": "string"
								},
								"_comment": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"link": {
									"$ref": "#/definitions/Reference"
								}
							}
						}
					},
					"conclusion": {
						"type": "string"
					},
					"_conclusion": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"codedDiagnosis": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/CodeableConcept"
						}
					},
					"presentedForm": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Attachment"
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"DocumentManifest": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"masterIdentifier": {
						"$ref": "#/definitions/Identifier"
					},
					"identifier": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Identifier"
						}
					},
					"subject": {
						"$ref": "#/definitions/Reference"
					},
					"recipient": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Reference"
						}
					},
					"type": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"author": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Reference"
						}
					},
					"created": {
						"$ref": "#/definitions/dateTime"
					},
					"_created": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"source": {
						"$ref": "#/definitions/uri"
					},
					"_source": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"status": {
						"$ref": "#/definitions/code"
					},
					"_status": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"description": {
						"type": "string"
					},
					"_description": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"content": {
						"type": "array",
						"minItems": 1,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"pAttachment": {
									"$ref": "#/definitions/Attachment"
								},
								"pReference": {
									"$ref": "#/definitions/Reference"
								}
							}
						}
					},
					"related": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"identifier": {
									"$ref": "#/definitions/Identifier"
								},
								"ref": {
									"$ref": "#/definitions/Reference"
								}
							}
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"DocumentReference": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"masterIdentifier": {
						"$ref": "#/definitions/Identifier"
					},
					"identifier": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Identifier"
						}
					},
					"subject": {
						"$ref": "#/definitions/Reference"
					},
					"type": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"class": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"author": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Reference"
						}
					},
					"custodian": {
						"$ref": "#/definitions/Reference"
					},
					"authenticator": {
						"$ref": "#/definitions/Reference"
					},
					"created": {
						"$ref": "#/definitions/dateTime"
					},
					"_created": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"indexed": {
						"$ref": "#/definitions/instant"
					},
					"_indexed": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"status": {
						"$ref": "#/definitions/code"
					},
					"_status": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"docStatus": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"relatesTo": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"code": {
									"$ref": "#/definitions/code"
								},
								"_code": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"target": {
									"$ref": "#/definitions/Reference"
								}
							}
						}
					},
					"description": {
						"type": "string"
					},
					"_description": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"securityLabel": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/CodeableConcept"
						}
					},
					"content": {
						"type": "array",
						"minItems": 1,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"attachment": {
									"$ref": "#/definitions/Attachment"
								},
								"format": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Coding"
									}
								}
							}
						}
					},
					"context": {
						"type": "object",
						"additionalProperties": false,
						"properties": {
							"fhir_comments": {
								"type": "array",
								"items": {
									"type": "string"
								}
							},
							"id": {
								"$ref": "#/definitions/fhir_id"
							},
							"_id": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							},
							"extension": {
								"type": "array",
								"minItems": 0,
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							},
							"modifierExtension": {
								"type": "array",
								"minItems": 0,
								"items": {
									"$ref": "#/definitions/Extension"
								}
							},
							"encounter": {
								"$ref": "#/definitions/Reference"
							},
							"event": {
								"type": "array",
								"minItems": 0,
								"items": {
									"$ref": "#/definitions/CodeableConcept"
								}
							},
							"period": {
								"$ref": "#/definitions/Period"
							},
							"facilityType": {
								"$ref": "#/definitions/CodeableConcept"
							},
							"practiceSetting": {
								"$ref": "#/definitions/CodeableConcept"
							},
							"sourcePatientInfo": {
								"$ref": "#/definitions/Reference"
							},
							"related": {
								"type": "array",
								"minItems": 0,
								"items": {
									"type": "object",
									"properties": {
										"id": {
											"$ref": "#/definitions/fhir_id"
										},
										"_id": {
											"type": "object",
											"properties": {
												"extension": {
													"type": "array",
													"items": {
														"oneOf": [
															{
																"$ref": "#/definitions/Extension"
															},
															{
																"type": "null"
															}
														]
													}
												}
											}
										},
										"extension": {
											"type": "array",
											"minItems": 0,
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										},
										"modifierExtension": {
											"type": "array",
											"minItems": 0,
											"items": {
												"$ref": "#/definitions/Extension"
											}
										},
										"identifier": {
											"$ref": "#/definitions/Identifier"
										},
										"ref": {
											"$ref": "#/definitions/Reference"
										}
									}
								}
							}
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"EligibilityRequest": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"identifier": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Identifier"
						}
					},
					"ruleset": {
						"$ref": "#/definitions/Coding"
					},
					"originalRuleset": {
						"$ref": "#/definitions/Coding"
					},
					"created": {
						"$ref": "#/definitions/dateTime"
					},
					"_created": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"target": {
						"$ref": "#/definitions/Reference"
					},
					"provider": {
						"$ref": "#/definitions/Reference"
					},
					"organization": {
						"$ref": "#/definitions/Reference"
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"EligibilityResponse": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"identifier": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Identifier"
						}
					},
					"request": {
						"$ref": "#/definitions/Reference"
					},
					"outcome": {
						"$ref": "#/definitions/code"
					},
					"_outcome": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"disposition": {
						"type": "string"
					},
					"_disposition": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"ruleset": {
						"$ref": "#/definitions/Coding"
					},
					"originalRuleset": {
						"$ref": "#/definitions/Coding"
					},
					"created": {
						"$ref": "#/definitions/dateTime"
					},
					"_created": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"organization": {
						"$ref": "#/definitions/Reference"
					},
					"requestProvider": {
						"$ref": "#/definitions/Reference"
					},
					"requestOrganization": {
						"$ref": "#/definitions/Reference"
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"Encounter": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"identifier": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Identifier"
						}
					},
					"status": {
						"$ref": "#/definitions/code"
					},
					"_status": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"statusHistory": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"status": {
									"$ref": "#/definitions/code"
								},
								"_status": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"period": {
									"$ref": "#/definitions/Period"
								}
							}
						}
					},
					"class": {
						"$ref": "#/definitions/code"
					},
					"_class": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"type": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/CodeableConcept"
						}
					},
					"priority": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"patient": {
						"$ref": "#/definitions/Reference"
					},
					"episodeOfCare": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Reference"
						}
					},
					"incomingReferral": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Reference"
						}
					},
					"participant": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"type": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/CodeableConcept"
									}
								},
								"period": {
									"$ref": "#/definitions/Period"
								},
								"individual": {
									"$ref": "#/definitions/Reference"
								}
							}
						}
					},
					"appointment": {
						"$ref": "#/definitions/Reference"
					},
					"period": {
						"$ref": "#/definitions/Period"
					},
					"length": {
						"$ref": "#/definitions/Quantity"
					},
					"reason": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/CodeableConcept"
						}
					},
					"indication": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Reference"
						}
					},
					"hospitalization": {
						"type": "object",
						"additionalProperties": false,
						"properties": {
							"fhir_comments": {
								"type": "array",
								"items": {
									"type": "string"
								}
							},
							"id": {
								"$ref": "#/definitions/fhir_id"
							},
							"_id": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							},
							"extension": {
								"type": "array",
								"minItems": 0,
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							},
							"modifierExtension": {
								"type": "array",
								"minItems": 0,
								"items": {
									"$ref": "#/definitions/Extension"
								}
							},
							"preAdmissionIdentifier": {
								"$ref": "#/definitions/Identifier"
							},
							"origin": {
								"$ref": "#/definitions/Reference"
							},
							"admitSource": {
								"$ref": "#/definitions/CodeableConcept"
							},
							"admittingDiagnosis": {
								"type": "array",
								"minItems": 0,
								"items": {
									"$ref": "#/definitions/Reference"
								}
							},
							"reAdmission": {
								"$ref": "#/definitions/CodeableConcept"
							},
							"dietPreference": {
								"type": "array",
								"minItems": 0,
								"items": {
									"$ref": "#/definitions/CodeableConcept"
								}
							},
							"specialCourtesy": {
								"type": "array",
								"minItems": 0,
								"items": {
									"$ref": "#/definitions/CodeableConcept"
								}
							},
							"specialArrangement": {
								"type": "array",
								"minItems": 0,
								"items": {
									"$ref": "#/definitions/CodeableConcept"
								}
							},
							"destination": {
								"$ref": "#/definitions/Reference"
							},
							"dischargeDisposition": {
								"$ref": "#/definitions/CodeableConcept"
							},
							"dischargeDiagnosis": {
								"type": "array",
								"minItems": 0,
								"items": {
									"$ref": "#/definitions/Reference"
								}
							}
						}
					},
					"location": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"location": {
									"$ref": "#/definitions/Reference"
								},
								"status": {
									"$ref": "#/definitions/code"
								},
								"_status": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"period": {
									"$ref": "#/definitions/Period"
								}
							}
						}
					},
					"serviceProvider": {
						"$ref": "#/definitions/Reference"
					},
					"partOf": {
						"$ref": "#/definitions/Reference"
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"EnrollmentRequest": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"identifier": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Identifier"
						}
					},
					"ruleset": {
						"$ref": "#/definitions/Coding"
					},
					"originalRuleset": {
						"$ref": "#/definitions/Coding"
					},
					"created": {
						"$ref": "#/definitions/dateTime"
					},
					"_created": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"target": {
						"$ref": "#/definitions/Reference"
					},
					"provider": {
						"$ref": "#/definitions/Reference"
					},
					"organization": {
						"$ref": "#/definitions/Reference"
					},
					"subject": {
						"$ref": "#/definitions/Reference"
					},
					"coverage": {
						"$ref": "#/definitions/Reference"
					},
					"relationship": {
						"$ref": "#/definitions/Coding"
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"EnrollmentResponse": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"identifier": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Identifier"
						}
					},
					"request": {
						"$ref": "#/definitions/Reference"
					},
					"outcome": {
						"$ref": "#/definitions/code"
					},
					"_outcome": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"disposition": {
						"type": "string"
					},
					"_disposition": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"ruleset": {
						"$ref": "#/definitions/Coding"
					},
					"originalRuleset": {
						"$ref": "#/definitions/Coding"
					},
					"created": {
						"$ref": "#/definitions/dateTime"
					},
					"_created": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"organization": {
						"$ref": "#/definitions/Reference"
					},
					"requestProvider": {
						"$ref": "#/definitions/Reference"
					},
					"requestOrganization": {
						"$ref": "#/definitions/Reference"
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"EpisodeOfCare": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"identifier": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Identifier"
						}
					},
					"status": {
						"$ref": "#/definitions/code"
					},
					"_status": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"statusHistory": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"status": {
									"$ref": "#/definitions/code"
								},
								"_status": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"period": {
									"$ref": "#/definitions/Period"
								}
							}
						}
					},
					"type": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/CodeableConcept"
						}
					},
					"condition": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Reference"
						}
					},
					"patient": {
						"$ref": "#/definitions/Reference"
					},
					"managingOrganization": {
						"$ref": "#/definitions/Reference"
					},
					"period": {
						"$ref": "#/definitions/Period"
					},
					"referralRequest": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Reference"
						}
					},
					"careManager": {
						"$ref": "#/definitions/Reference"
					},
					"careTeam": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"role": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/CodeableConcept"
									}
								},
								"period": {
									"$ref": "#/definitions/Period"
								},
								"member": {
									"$ref": "#/definitions/Reference"
								}
							}
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"ExpansionProfile": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"url": {
						"$ref": "#/definitions/uri"
					},
					"_url": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"identifier": {
						"$ref": "#/definitions/Identifier"
					},
					"version": {
						"type": "string"
					},
					"_version": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"name": {
						"type": "string"
					},
					"_name": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"status": {
						"$ref": "#/definitions/code"
					},
					"_status": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"experimental": {
						"type": "boolean"
					},
					"_experimental": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"publisher": {
						"type": "string"
					},
					"_publisher": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"contact": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"name": {
									"type": "string"
								},
								"_name": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"telecom": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/ContactPoint"
									}
								}
							}
						}
					},
					"date": {
						"$ref": "#/definitions/dateTime"
					},
					"_date": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"description": {
						"type": "string"
					},
					"_description": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"codeSystem": {
						"type": "object",
						"additionalProperties": false,
						"properties": {
							"fhir_comments": {
								"type": "array",
								"items": {
									"type": "string"
								}
							},
							"id": {
								"$ref": "#/definitions/fhir_id"
							},
							"_id": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							},
							"extension": {
								"type": "array",
								"minItems": 0,
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							},
							"modifierExtension": {
								"type": "array",
								"minItems": 0,
								"items": {
									"$ref": "#/definitions/Extension"
								}
							},
							"include": {
								"type": "object",
								"additionalProperties": false,
								"properties": {
									"fhir_comments": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"id": {
										"$ref": "#/definitions/fhir_id"
									},
									"_id": {
										"type": "object",
										"properties": {
											"extension": {
												"type": "array",
												"items": {
													"oneOf": [
														{
															"$ref": "#/definitions/Extension"
														},
														{
															"type": "null"
														}
													]
												}
											}
										}
									},
									"extension": {
										"type": "array",
										"minItems": 0,
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									},
									"modifierExtension": {
										"type": "array",
										"minItems": 0,
										"items": {
											"$ref": "#/definitions/Extension"
										}
									},
									"codeSystem": {
										"type": "array",
										"minItems": 1,
										"items": {
											"type": "object",
											"properties": {
												"id": {
													"$ref": "#/definitions/fhir_id"
												},
												"_id": {
													"type": "object",
													"properties": {
														"extension": {
															"type": "array",
															"items": {
																"oneOf": [
																	{
																		"$ref": "#/definitions/Extension"
																	},
																	{
																		"type": "null"
																	}
																]
															}
														}
													}
												},
												"extension": {
													"type": "array",
													"minItems": 0,
													"items": {
														"oneOf": [
															{
																"$ref": "#/definitions/Extension"
															},
															{
																"type": "null"
															}
														]
													}
												},
												"modifierExtension": {
													"type": "array",
													"minItems": 0,
													"items": {
														"$ref": "#/definitions/Extension"
													}
												},
												"system": {
													"$ref": "#/definitions/uri"
												},
												"_system": {
													"type": "object",
													"properties": {
														"extension": {
															"type": "array",
															"items": {
																"oneOf": [
																	{
																		"$ref": "#/definitions/Extension"
																	},
																	{
																		"type": "null"
																	}
																]
															}
														}
													}
												},
												"version": {
													"type": "string"
												},
												"_version": {
													"type": "object",
													"properties": {
														"extension": {
															"type": "array",
															"items": {
																"oneOf": [
																	{
																		"$ref": "#/definitions/Extension"
																	},
																	{
																		"type": "null"
																	}
																]
															}
														}
													}
												}
											}
										}
									}
								}
							},
							"exclude": {
								"type": "object",
								"additionalProperties": false,
								"properties": {
									"fhir_comments": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"id": {
										"$ref": "#/definitions/fhir_id"
									},
									"_id": {
										"type": "object",
										"properties": {
											"extension": {
												"type": "array",
												"items": {
													"oneOf": [
														{
															"$ref": "#/definitions/Extension"
														},
														{
															"type": "null"
														}
													]
												}
											}
										}
									},
									"extension": {
										"type": "array",
										"minItems": 0,
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									},
									"modifierExtension": {
										"type": "array",
										"minItems": 0,
										"items": {
											"$ref": "#/definitions/Extension"
										}
									},
									"codeSystem": {
										"type": "array",
										"minItems": 1,
										"items": {
											"type": "object",
											"properties": {
												"id": {
													"$ref": "#/definitions/fhir_id"
												},
												"_id": {
													"type": "object",
													"properties": {
														"extension": {
															"type": "array",
															"items": {
																"oneOf": [
																	{
																		"$ref": "#/definitions/Extension"
																	},
																	{
																		"type": "null"
																	}
																]
															}
														}
													}
												},
												"extension": {
													"type": "array",
													"minItems": 0,
													"items": {
														"oneOf": [
															{
																"$ref": "#/definitions/Extension"
															},
															{
																"type": "null"
															}
														]
													}
												},
												"modifierExtension": {
													"type": "array",
													"minItems": 0,
													"items": {
														"$ref": "#/definitions/Extension"
													}
												},
												"system": {
													"$ref": "#/definitions/uri"
												},
												"_system": {
													"type": "object",
													"properties": {
														"extension": {
															"type": "array",
															"items": {
																"oneOf": [
																	{
																		"$ref": "#/definitions/Extension"
																	},
																	{
																		"type": "null"
																	}
																]
															}
														}
													}
												},
												"version": {
													"type": "string"
												},
												"_version": {
													"type": "object",
													"properties": {
														"extension": {
															"type": "array",
															"items": {
																"oneOf": [
																	{
																		"$ref": "#/definitions/Extension"
																	},
																	{
																		"type": "null"
																	}
																]
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					},
					"includeDesignations": {
						"type": "boolean"
					},
					"_includeDesignations": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"designation": {
						"type": "object",
						"additionalProperties": false,
						"properties": {
							"fhir_comments": {
								"type": "array",
								"items": {
									"type": "string"
								}
							},
							"id": {
								"$ref": "#/definitions/fhir_id"
							},
							"_id": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							},
							"extension": {
								"type": "array",
								"minItems": 0,
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							},
							"modifierExtension": {
								"type": "array",
								"minItems": 0,
								"items": {
									"$ref": "#/definitions/Extension"
								}
							},
							"include": {
								"type": "object",
								"additionalProperties": false,
								"properties": {
									"fhir_comments": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"id": {
										"$ref": "#/definitions/fhir_id"
									},
									"_id": {
										"type": "object",
										"properties": {
											"extension": {
												"type": "array",
												"items": {
													"oneOf": [
														{
															"$ref": "#/definitions/Extension"
														},
														{
															"type": "null"
														}
													]
												}
											}
										}
									},
									"extension": {
										"type": "array",
										"minItems": 0,
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									},
									"modifierExtension": {
										"type": "array",
										"minItems": 0,
										"items": {
											"$ref": "#/definitions/Extension"
										}
									},
									"designation": {
										"type": "array",
										"minItems": 0,
										"items": {
											"type": "object",
											"properties": {
												"id": {
													"$ref": "#/definitions/fhir_id"
												},
												"_id": {
													"type": "object",
													"properties": {
														"extension": {
															"type": "array",
															"items": {
																"oneOf": [
																	{
																		"$ref": "#/definitions/Extension"
																	},
																	{
																		"type": "null"
																	}
																]
															}
														}
													}
												},
												"extension": {
													"type": "array",
													"minItems": 0,
													"items": {
														"oneOf": [
															{
																"$ref": "#/definitions/Extension"
															},
															{
																"type": "null"
															}
														]
													}
												},
												"modifierExtension": {
													"type": "array",
													"minItems": 0,
													"items": {
														"$ref": "#/definitions/Extension"
													}
												},
												"language": {
													"$ref": "#/definitions/code"
												},
												"_language": {
													"type": "object",
													"properties": {
														"extension": {
															"type": "array",
															"items": {
																"oneOf": [
																	{
																		"$ref": "#/definitions/Extension"
																	},
																	{
																		"type": "null"
																	}
																]
															}
														}
													}
												},
												"use": {
													"$ref": "#/definitions/Coding"
												}
											}
										}
									}
								}
							},
							"exclude": {
								"type": "object",
								"additionalProperties": false,
								"properties": {
									"fhir_comments": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"id": {
										"$ref": "#/definitions/fhir_id"
									},
									"_id": {
										"type": "object",
										"properties": {
											"extension": {
												"type": "array",
												"items": {
													"oneOf": [
														{
															"$ref": "#/definitions/Extension"
														},
														{
															"type": "null"
														}
													]
												}
											}
										}
									},
									"extension": {
										"type": "array",
										"minItems": 0,
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									},
									"modifierExtension": {
										"type": "array",
										"minItems": 0,
										"items": {
											"$ref": "#/definitions/Extension"
										}
									},
									"designation": {
										"type": "array",
										"minItems": 0,
										"items": {
											"type": "object",
											"properties": {
												"id": {
													"$ref": "#/definitions/fhir_id"
												},
												"_id": {
													"type": "object",
													"properties": {
														"extension": {
															"type": "array",
															"items": {
																"oneOf": [
																	{
																		"$ref": "#/definitions/Extension"
																	},
																	{
																		"type": "null"
																	}
																]
															}
														}
													}
												},
												"extension": {
													"type": "array",
													"minItems": 0,
													"items": {
														"oneOf": [
															{
																"$ref": "#/definitions/Extension"
															},
															{
																"type": "null"
															}
														]
													}
												},
												"modifierExtension": {
													"type": "array",
													"minItems": 0,
													"items": {
														"$ref": "#/definitions/Extension"
													}
												},
												"language": {
													"$ref": "#/definitions/code"
												},
												"_language": {
													"type": "object",
													"properties": {
														"extension": {
															"type": "array",
															"items": {
																"oneOf": [
																	{
																		"$ref": "#/definitions/Extension"
																	},
																	{
																		"type": "null"
																	}
																]
															}
														}
													}
												},
												"use": {
													"$ref": "#/definitions/Coding"
												}
											}
										}
									}
								}
							}
						}
					},
					"includeDefinition": {
						"type": "boolean"
					},
					"_includeDefinition": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"excludeNested": {
						"type": "boolean"
					},
					"_excludeNested": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"excludeNotForUI": {
						"type": "boolean"
					},
					"_excludeNotForUI": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"excludePostCoordinated": {
						"type": "boolean"
					},
					"_excludePostCoordinated": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"displayLanguage": {
						"$ref": "#/definitions/code"
					},
					"_displayLanguage": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"limitedExpansion": {
						"type": "boolean"
					},
					"_limitedExpansion": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"ExplanationOfBenefit": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"identifier": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Identifier"
						}
					},
					"request": {
						"$ref": "#/definitions/Reference"
					},
					"outcome": {
						"$ref": "#/definitions/code"
					},
					"_outcome": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"disposition": {
						"type": "string"
					},
					"_disposition": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"ruleset": {
						"$ref": "#/definitions/Coding"
					},
					"originalRuleset": {
						"$ref": "#/definitions/Coding"
					},
					"created": {
						"$ref": "#/definitions/dateTime"
					},
					"_created": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"organization": {
						"$ref": "#/definitions/Reference"
					},
					"requestProvider": {
						"$ref": "#/definitions/Reference"
					},
					"requestOrganization": {
						"$ref": "#/definitions/Reference"
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"FamilyMemberHistory": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"identifier": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Identifier"
						}
					},
					"patient": {
						"$ref": "#/definitions/Reference"
					},
					"date": {
						"$ref": "#/definitions/dateTime"
					},
					"_date": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"status": {
						"$ref": "#/definitions/code"
					},
					"_status": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"name": {
						"type": "string"
					},
					"_name": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"relationship": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"gender": {
						"$ref": "#/definitions/code"
					},
					"_gender": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"bornPeriod": {
						"$ref": "#/definitions/Period"
					},
					"bornDate": {
						"$ref": "#/definitions/date"
					},
					"_bornDate": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"bornString": {
						"type": "string"
					},
					"_bornString": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"ageQuantity": {
						"$ref": "#/definitions/Quantity"
					},
					"ageRange": {
						"$ref": "#/definitions/Range"
					},
					"ageString": {
						"type": "string"
					},
					"_ageString": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"deceasedBoolean": {
						"type": "boolean"
					},
					"_deceasedBoolean": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"deceasedQuantity": {
						"$ref": "#/definitions/Quantity"
					},
					"deceasedRange": {
						"$ref": "#/definitions/Range"
					},
					"deceasedDate": {
						"$ref": "#/definitions/date"
					},
					"_deceasedDate": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"deceasedString": {
						"type": "string"
					},
					"_deceasedString": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"note": {
						"$ref": "#/definitions/Annotation"
					},
					"condition": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"code": {
									"$ref": "#/definitions/CodeableConcept"
								},
								"outcome": {
									"$ref": "#/definitions/CodeableConcept"
								},
								"onsetQuantity": {
									"$ref": "#/definitions/Quantity"
								},
								"onsetRange": {
									"$ref": "#/definitions/Range"
								},
								"onsetPeriod": {
									"$ref": "#/definitions/Period"
								},
								"onsetString": {
									"type": "string"
								},
								"_onsetString": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"note": {
									"$ref": "#/definitions/Annotation"
								}
							}
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"Flag": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"identifier": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Identifier"
						}
					},
					"category": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"status": {
						"$ref": "#/definitions/code"
					},
					"_status": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"period": {
						"$ref": "#/definitions/Period"
					},
					"subject": {
						"$ref": "#/definitions/Reference"
					},
					"encounter": {
						"$ref": "#/definitions/Reference"
					},
					"author": {
						"$ref": "#/definitions/Reference"
					},
					"code": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"Goal": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"identifier": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Identifier"
						}
					},
					"subject": {
						"$ref": "#/definitions/Reference"
					},
					"startDate": {
						"$ref": "#/definitions/date"
					},
					"_startDate": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"startCodeableConcept": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"targetDate": {
						"$ref": "#/definitions/date"
					},
					"_targetDate": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"targetQuantity": {
						"$ref": "#/definitions/Quantity"
					},
					"category": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/CodeableConcept"
						}
					},
					"description": {
						"type": "string"
					},
					"_description": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"status": {
						"$ref": "#/definitions/code"
					},
					"_status": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"statusDate": {
						"$ref": "#/definitions/date"
					},
					"_statusDate": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"statusReason": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"author": {
						"$ref": "#/definitions/Reference"
					},
					"priority": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"addresses": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Reference"
						}
					},
					"note": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Annotation"
						}
					},
					"outcome": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"resultCodeableConcept": {
									"$ref": "#/definitions/CodeableConcept"
								},
								"resultReference": {
									"$ref": "#/definitions/Reference"
								}
							}
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"Group": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"identifier": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Identifier"
						}
					},
					"type": {
						"$ref": "#/definitions/code"
					},
					"_type": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"actual": {
						"type": "boolean"
					},
					"_actual": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"code": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"name": {
						"type": "string"
					},
					"_name": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"quantity": {
						"$ref": "#/definitions/unsignedInt"
					},
					"_quantity": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"characteristic": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"code": {
									"$ref": "#/definitions/CodeableConcept"
								},
								"valueCodeableConcept": {
									"$ref": "#/definitions/CodeableConcept"
								},
								"valueBoolean": {
									"type": "boolean"
								},
								"_valueBoolean": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"valueQuantity": {
									"$ref": "#/definitions/Quantity"
								},
								"valueRange": {
									"$ref": "#/definitions/Range"
								},
								"exclude": {
									"type": "boolean"
								},
								"_exclude": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"period": {
									"$ref": "#/definitions/Period"
								}
							}
						}
					},
					"member": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"entity": {
									"$ref": "#/definitions/Reference"
								},
								"period": {
									"$ref": "#/definitions/Period"
								},
								"inactive": {
									"type": "boolean"
								},
								"_inactive": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								}
							}
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"GuidanceRequest": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"module": {
						"$ref": "#/definitions/Reference"
					},
					"dateTime": {
						"$ref": "#/definitions/dateTime"
					},
					"_dateTime": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"evaluateAtDateTime": {
						"$ref": "#/definitions/dateTime"
					},
					"_evaluateAtDateTime": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"inputParameters": {
						"$ref": "#/definitions/Reference"
					},
					"initiatingOrganization": {
						"$ref": "#/definitions/Reference"
					},
					"initiatingPerson": {
						"$ref": "#/definitions/Reference"
					},
					"userType": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"userLanguage": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"userTaskContext": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"receivingOrganization": {
						"$ref": "#/definitions/Reference"
					},
					"receivingPerson": {
						"$ref": "#/definitions/Reference"
					},
					"recipientType": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"recipientLanguage": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"encounterClass": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"encounterType": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"GuidanceResponse": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"requestId": {
						"type": "string"
					},
					"_requestId": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"module": {
						"$ref": "#/definitions/Reference"
					},
					"status": {
						"$ref": "#/definitions/code"
					},
					"_status": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"evaluationMessage": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Reference"
						}
					},
					"outputParameters": {
						"$ref": "#/definitions/Reference"
					},
					"action": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"actionIdentifier": {
									"$ref": "#/definitions/Identifier"
								},
								"number": {
									"type": "string"
								},
								"_number": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"supportingEvidence": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Attachment"
									}
								},
								"documentation": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Attachment"
									}
								},
								"participant": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Reference"
									}
								},
								"title": {
									"type": "string"
								},
								"_title": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"description": {
									"type": "string"
								},
								"_description": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"textEquivalent": {
									"type": "string"
								},
								"_textEquivalent": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"concept": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/CodeableConcept"
									}
								},
								"type": {
									"$ref": "#/definitions/code"
								},
								"_type": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"resource": {
									"$ref": "#/definitions/Reference"
								},
								"actions": {
									"type": "array",
									"minItems": 0,
									"items": {
										"type": "object"
									}
								}
							}
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"HealthcareService": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"identifier": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Identifier"
						}
					},
					"providedBy": {
						"$ref": "#/definitions/Reference"
					},
					"serviceCategory": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"serviceType": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"type": {
									"$ref": "#/definitions/CodeableConcept"
								},
								"specialty": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/CodeableConcept"
									}
								}
							}
						}
					},
					"location": {
						"$ref": "#/definitions/Reference"
					},
					"serviceName": {
						"type": "string"
					},
					"_serviceName": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"comment": {
						"type": "string"
					},
					"_comment": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"extraDetails": {
						"type": "string"
					},
					"_extraDetails": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"photo": {
						"$ref": "#/definitions/Attachment"
					},
					"telecom": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/ContactPoint"
						}
					},
					"coverageArea": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Reference"
						}
					},
					"serviceProvisionCode": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/CodeableConcept"
						}
					},
					"eligibility": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"eligibilityNote": {
						"type": "string"
					},
					"_eligibilityNote": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"programName": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"type": "string"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"_programName": {
						"type": "array",
						"items": {
							"oneOf": [
								{
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								{
									"type": "null"
								}
							]
						}
					},
					"characteristic": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/CodeableConcept"
						}
					},
					"referralMethod": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/CodeableConcept"
						}
					},
					"publicKey": {
						"type": "string"
					},
					"_publicKey": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"appointmentRequired": {
						"type": "boolean"
					},
					"_appointmentRequired": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"availableTime": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"daysOfWeek": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/code"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"_daysOfWeek": {
									"type": "array",
									"items": {
										"oneOf": [
											{
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											},
											{
												"type": "null"
											}
										]
									}
								},
								"allDay": {
									"type": "boolean"
								},
								"_allDay": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"availableStartTime": {
									"$ref": "#/definitions/time"
								},
								"_availableStartTime": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"availableEndTime": {
									"$ref": "#/definitions/time"
								},
								"_availableEndTime": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								}
							}
						}
					},
					"notAvailable": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"description": {
									"type": "string"
								},
								"_description": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"during": {
									"$ref": "#/definitions/Period"
								}
							}
						}
					},
					"availabilityExceptions": {
						"type": "string"
					},
					"_availabilityExceptions": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"ImagingObjectSelection": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"uid": {
						"$ref": "#/definitions/oid"
					},
					"_uid": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"patient": {
						"$ref": "#/definitions/Reference"
					},
					"title": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"description": {
						"type": "string"
					},
					"_description": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"author": {
						"$ref": "#/definitions/Reference"
					},
					"authoringTime": {
						"$ref": "#/definitions/dateTime"
					},
					"_authoringTime": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"study": {
						"type": "array",
						"minItems": 1,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"uid": {
									"$ref": "#/definitions/oid"
								},
								"_uid": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"url": {
									"$ref": "#/definitions/uri"
								},
								"_url": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"imagingStudy": {
									"$ref": "#/definitions/Reference"
								},
								"series": {
									"type": "array",
									"minItems": 1,
									"items": {
										"type": "object",
										"properties": {
											"id": {
												"$ref": "#/definitions/fhir_id"
											},
											"_id": {
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											},
											"extension": {
												"type": "array",
												"minItems": 0,
												"items": {
													"oneOf": [
														{
															"$ref": "#/definitions/Extension"
														},
														{
															"type": "null"
														}
													]
												}
											},
											"modifierExtension": {
												"type": "array",
												"minItems": 0,
												"items": {
													"$ref": "#/definitions/Extension"
												}
											},
											"uid": {
												"$ref": "#/definitions/oid"
											},
											"_uid": {
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											},
											"url": {
												"$ref": "#/definitions/uri"
											},
											"_url": {
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											},
											"instance": {
												"type": "array",
												"minItems": 1,
												"items": {
													"type": "object",
													"properties": {
														"id": {
															"$ref": "#/definitions/fhir_id"
														},
														"_id": {
															"type": "object",
															"properties": {
																"extension": {
																	"type": "array",
																	"items": {
																		"oneOf": [
																			{
																				"$ref": "#/definitions/Extension"
																			},
																			{
																				"type": "null"
																			}
																		]
																	}
																}
															}
														},
														"extension": {
															"type": "array",
															"minItems": 0,
															"items": {
																"oneOf": [
																	{
																		"$ref": "#/definitions/Extension"
																	},
																	{
																		"type": "null"
																	}
																]
															}
														},
														"modifierExtension": {
															"type": "array",
															"minItems": 0,
															"items": {
																"$ref": "#/definitions/Extension"
															}
														},
														"sopClass": {
															"$ref": "#/definitions/oid"
														},
														"_sopClass": {
															"type": "object",
															"properties": {
																"extension": {
																	"type": "array",
																	"items": {
																		"oneOf": [
																			{
																				"$ref": "#/definitions/Extension"
																			},
																			{
																				"type": "null"
																			}
																		]
																	}
																}
															}
														},
														"uid": {
															"$ref": "#/definitions/oid"
														},
														"_uid": {
															"type": "object",
															"properties": {
																"extension": {
																	"type": "array",
																	"items": {
																		"oneOf": [
																			{
																				"$ref": "#/definitions/Extension"
																			},
																			{
																				"type": "null"
																			}
																		]
																	}
																}
															}
														},
														"url": {
															"$ref": "#/definitions/uri"
														},
														"_url": {
															"type": "object",
															"properties": {
																"extension": {
																	"type": "array",
																	"items": {
																		"oneOf": [
																			{
																				"$ref": "#/definitions/Extension"
																			},
																			{
																				"type": "null"
																			}
																		]
																	}
																}
															}
														},
														"frames": {
															"type": "array",
															"minItems": 0,
															"items": {
																"type": "object",
																"properties": {
																	"id": {
																		"$ref": "#/definitions/fhir_id"
																	},
																	"_id": {
																		"type": "object",
																		"properties": {
																			"extension": {
																				"type": "array",
																				"items": {
																					"oneOf": [
																						{
																							"$ref": "#/definitions/Extension"
																						},
																						{
																							"type": "null"
																						}
																					]
																				}
																			}
																		}
																	},
																	"extension": {
																		"type": "array",
																		"minItems": 0,
																		"items": {
																			"oneOf": [
																				{
																					"$ref": "#/definitions/Extension"
																				},
																				{
																					"type": "null"
																				}
																			]
																		}
																	},
																	"modifierExtension": {
																		"type": "array",
																		"minItems": 0,
																		"items": {
																			"$ref": "#/definitions/Extension"
																		}
																	},
																	"frameNumbers": {
																		"type": "array",
																		"minItems": 1,
																		"items": {
																			"oneOf": [
																				{
																					"$ref": "#/definitions/unsignedInt"
																				},
																				{
																					"type": "null"
																				}
																			]
																		}
																	},
																	"_frameNumbers": {
																		"type": "array",
																		"items": {
																			"oneOf": [
																				{
																					"type": "object",
																					"properties": {
																						"extension": {
																							"type": "array",
																							"items": {
																								"oneOf": [
																									{
																										"$ref": "#/definitions/Extension"
																									},
																									{
																										"type": "null"
																									}
																								]
																							}
																						}
																					}
																				},
																				{
																					"type": "null"
																				}
																			]
																		}
																	},
																	"url": {
																		"$ref": "#/definitions/uri"
																	},
																	"_url": {
																		"type": "object",
																		"properties": {
																			"extension": {
																				"type": "array",
																				"items": {
																					"oneOf": [
																						{
																							"$ref": "#/definitions/Extension"
																						},
																						{
																							"type": "null"
																						}
																					]
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"ImagingStudy": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"started": {
						"$ref": "#/definitions/dateTime"
					},
					"_started": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"patient": {
						"$ref": "#/definitions/Reference"
					},
					"uid": {
						"$ref": "#/definitions/oid"
					},
					"_uid": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"accession": {
						"$ref": "#/definitions/Identifier"
					},
					"identifier": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Identifier"
						}
					},
					"order": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Reference"
						}
					},
					"modalityList": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Coding"
						}
					},
					"referrer": {
						"$ref": "#/definitions/Reference"
					},
					"availability": {
						"$ref": "#/definitions/code"
					},
					"_availability": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"url": {
						"$ref": "#/definitions/uri"
					},
					"_url": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"numberOfSeries": {
						"$ref": "#/definitions/unsignedInt"
					},
					"_numberOfSeries": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"numberOfInstances": {
						"$ref": "#/definitions/unsignedInt"
					},
					"_numberOfInstances": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"procedure": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Reference"
						}
					},
					"interpreter": {
						"$ref": "#/definitions/Reference"
					},
					"description": {
						"type": "string"
					},
					"_description": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"series": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"number": {
									"$ref": "#/definitions/unsignedInt"
								},
								"_number": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"modality": {
									"$ref": "#/definitions/Coding"
								},
								"uid": {
									"$ref": "#/definitions/oid"
								},
								"_uid": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"description": {
									"type": "string"
								},
								"_description": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"numberOfInstances": {
									"$ref": "#/definitions/unsignedInt"
								},
								"_numberOfInstances": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"availability": {
									"$ref": "#/definitions/code"
								},
								"_availability": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"url": {
									"$ref": "#/definitions/uri"
								},
								"_url": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"bodySite": {
									"$ref": "#/definitions/Coding"
								},
								"laterality": {
									"$ref": "#/definitions/Coding"
								},
								"started": {
									"$ref": "#/definitions/dateTime"
								},
								"_started": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"instance": {
									"type": "array",
									"minItems": 0,
									"items": {
										"type": "object",
										"properties": {
											"id": {
												"$ref": "#/definitions/fhir_id"
											},
											"_id": {
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											},
											"extension": {
												"type": "array",
												"minItems": 0,
												"items": {
													"oneOf": [
														{
															"$ref": "#/definitions/Extension"
														},
														{
															"type": "null"
														}
													]
												}
											},
											"modifierExtension": {
												"type": "array",
												"minItems": 0,
												"items": {
													"$ref": "#/definitions/Extension"
												}
											},
											"number": {
												"$ref": "#/definitions/unsignedInt"
											},
											"_number": {
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											},
											"uid": {
												"$ref": "#/definitions/oid"
											},
											"_uid": {
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											},
											"sopClass": {
												"$ref": "#/definitions/oid"
											},
											"_sopClass": {
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											},
											"type": {
												"type": "string"
											},
											"_type": {
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											},
											"title": {
												"type": "string"
											},
											"_title": {
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											},
											"content": {
												"type": "array",
												"minItems": 0,
												"items": {
													"$ref": "#/definitions/Attachment"
												}
											}
										}
									}
								}
							}
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"Immunization": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"identifier": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Identifier"
						}
					},
					"status": {
						"$ref": "#/definitions/code"
					},
					"_status": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"date": {
						"$ref": "#/definitions/dateTime"
					},
					"_date": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"vaccineCode": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"patient": {
						"$ref": "#/definitions/Reference"
					},
					"wasNotGiven": {
						"type": "boolean"
					},
					"_wasNotGiven": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"reported": {
						"type": "boolean"
					},
					"_reported": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"performer": {
						"$ref": "#/definitions/Reference"
					},
					"requester": {
						"$ref": "#/definitions/Reference"
					},
					"encounter": {
						"$ref": "#/definitions/Reference"
					},
					"manufacturer": {
						"$ref": "#/definitions/Reference"
					},
					"location": {
						"$ref": "#/definitions/Reference"
					},
					"lotNumber": {
						"type": "string"
					},
					"_lotNumber": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"expirationDate": {
						"$ref": "#/definitions/date"
					},
					"_expirationDate": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"site": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"route": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"doseQuantity": {
						"$ref": "#/definitions/Quantity"
					},
					"note": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Annotation"
						}
					},
					"explanation": {
						"type": "object",
						"additionalProperties": false,
						"properties": {
							"fhir_comments": {
								"type": "array",
								"items": {
									"type": "string"
								}
							},
							"id": {
								"$ref": "#/definitions/fhir_id"
							},
							"_id": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							},
							"extension": {
								"type": "array",
								"minItems": 0,
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							},
							"modifierExtension": {
								"type": "array",
								"minItems": 0,
								"items": {
									"$ref": "#/definitions/Extension"
								}
							},
							"reason": {
								"type": "array",
								"minItems": 0,
								"items": {
									"$ref": "#/definitions/CodeableConcept"
								}
							},
							"reasonNotGiven": {
								"type": "array",
								"minItems": 0,
								"items": {
									"$ref": "#/definitions/CodeableConcept"
								}
							}
						}
					},
					"reaction": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"date": {
									"$ref": "#/definitions/dateTime"
								},
								"_date": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"detail": {
									"$ref": "#/definitions/Reference"
								},
								"reported": {
									"type": "boolean"
								},
								"_reported": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								}
							}
						}
					},
					"vaccinationProtocol": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"doseSequence": {
									"$ref": "#/definitions/positiveInt"
								},
								"_doseSequence": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"description": {
									"type": "string"
								},
								"_description": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"authority": {
									"$ref": "#/definitions/Reference"
								},
								"series": {
									"type": "string"
								},
								"_series": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"seriesDoses": {
									"$ref": "#/definitions/positiveInt"
								},
								"_seriesDoses": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"targetDisease": {
									"type": "array",
									"minItems": 1,
									"items": {
										"$ref": "#/definitions/CodeableConcept"
									}
								},
								"doseStatus": {
									"$ref": "#/definitions/CodeableConcept"
								},
								"doseStatusReason": {
									"$ref": "#/definitions/CodeableConcept"
								}
							}
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"ImmunizationRecommendation": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"identifier": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Identifier"
						}
					},
					"patient": {
						"$ref": "#/definitions/Reference"
					},
					"recommendation": {
						"type": "array",
						"minItems": 1,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"date": {
									"$ref": "#/definitions/dateTime"
								},
								"_date": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"vaccineCode": {
									"$ref": "#/definitions/CodeableConcept"
								},
								"doseNumber": {
									"$ref": "#/definitions/positiveInt"
								},
								"_doseNumber": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"forecastStatus": {
									"$ref": "#/definitions/CodeableConcept"
								},
								"dateCriterion": {
									"type": "array",
									"minItems": 0,
									"items": {
										"type": "object",
										"properties": {
											"id": {
												"$ref": "#/definitions/fhir_id"
											},
											"_id": {
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											},
											"extension": {
												"type": "array",
												"minItems": 0,
												"items": {
													"oneOf": [
														{
															"$ref": "#/definitions/Extension"
														},
														{
															"type": "null"
														}
													]
												}
											},
											"modifierExtension": {
												"type": "array",
												"minItems": 0,
												"items": {
													"$ref": "#/definitions/Extension"
												}
											},
											"code": {
												"$ref": "#/definitions/CodeableConcept"
											},
											"value": {
												"$ref": "#/definitions/dateTime"
											},
											"_value": {
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											}
										}
									}
								},
								"protocol": {
									"type": "object",
									"additionalProperties": false,
									"properties": {
										"fhir_comments": {
											"type": "array",
											"items": {
												"type": "string"
											}
										},
										"id": {
											"$ref": "#/definitions/fhir_id"
										},
										"_id": {
											"type": "object",
											"properties": {
												"extension": {
													"type": "array",
													"items": {
														"oneOf": [
															{
																"$ref": "#/definitions/Extension"
															},
															{
																"type": "null"
															}
														]
													}
												}
											}
										},
										"extension": {
											"type": "array",
											"minItems": 0,
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										},
										"modifierExtension": {
											"type": "array",
											"minItems": 0,
											"items": {
												"$ref": "#/definitions/Extension"
											}
										},
										"doseSequence": {
											"type": "integer"
										},
										"_doseSequence": {
											"type": "object",
											"properties": {
												"extension": {
													"type": "array",
													"items": {
														"oneOf": [
															{
																"$ref": "#/definitions/Extension"
															},
															{
																"type": "null"
															}
														]
													}
												}
											}
										},
										"description": {
											"type": "string"
										},
										"_description": {
											"type": "object",
											"properties": {
												"extension": {
													"type": "array",
													"items": {
														"oneOf": [
															{
																"$ref": "#/definitions/Extension"
															},
															{
																"type": "null"
															}
														]
													}
												}
											}
										},
										"authority": {
											"$ref": "#/definitions/Reference"
										},
										"series": {
											"type": "string"
										},
										"_series": {
											"type": "object",
											"properties": {
												"extension": {
													"type": "array",
													"items": {
														"oneOf": [
															{
																"$ref": "#/definitions/Extension"
															},
															{
																"type": "null"
															}
														]
													}
												}
											}
										}
									}
								},
								"supportingImmunization": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Reference"
									}
								},
								"supportingPatientInformation": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Reference"
									}
								}
							}
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"ImplementationGuide": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"url": {
						"$ref": "#/definitions/uri"
					},
					"_url": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"version": {
						"type": "string"
					},
					"_version": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"name": {
						"type": "string"
					},
					"_name": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"status": {
						"$ref": "#/definitions/code"
					},
					"_status": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"experimental": {
						"type": "boolean"
					},
					"_experimental": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"publisher": {
						"type": "string"
					},
					"_publisher": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"contact": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"name": {
									"type": "string"
								},
								"_name": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"telecom": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/ContactPoint"
									}
								}
							}
						}
					},
					"date": {
						"$ref": "#/definitions/dateTime"
					},
					"_date": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"description": {
						"type": "string"
					},
					"_description": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"useContext": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/CodeableConcept"
						}
					},
					"copyright": {
						"type": "string"
					},
					"_copyright": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"fhirVersion": {
						"$ref": "#/definitions/fhir_id"
					},
					"_fhirVersion": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"dependency": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"type": {
									"$ref": "#/definitions/code"
								},
								"_type": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"uri": {
									"$ref": "#/definitions/uri"
								},
								"_uri": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								}
							}
						}
					},
					"package": {
						"type": "array",
						"minItems": 1,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"name": {
									"type": "string"
								},
								"_name": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"description": {
									"type": "string"
								},
								"_description": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"resource": {
									"type": "array",
									"minItems": 1,
									"items": {
										"type": "object",
										"properties": {
											"id": {
												"$ref": "#/definitions/fhir_id"
											},
											"_id": {
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											},
											"extension": {
												"type": "array",
												"minItems": 0,
												"items": {
													"oneOf": [
														{
															"$ref": "#/definitions/Extension"
														},
														{
															"type": "null"
														}
													]
												}
											},
											"modifierExtension": {
												"type": "array",
												"minItems": 0,
												"items": {
													"$ref": "#/definitions/Extension"
												}
											},
											"purpose": {
												"$ref": "#/definitions/code"
											},
											"_purpose": {
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											},
											"name": {
												"type": "string"
											},
											"_name": {
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											},
											"description": {
												"type": "string"
											},
											"_description": {
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											},
											"acronym": {
												"type": "string"
											},
											"_acronym": {
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											},
											"sourceUri": {
												"$ref": "#/definitions/uri"
											},
											"_sourceUri": {
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											},
											"sourceReference": {
												"$ref": "#/definitions/Reference"
											},
											"exampleFor": {
												"$ref": "#/definitions/Reference"
											}
										}
									}
								}
							}
						}
					},
					"global": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"type": {
									"$ref": "#/definitions/code"
								},
								"_type": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"profile": {
									"$ref": "#/definitions/Reference"
								}
							}
						}
					},
					"binary": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/uri"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"_binary": {
						"type": "array",
						"items": {
							"oneOf": [
								{
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								{
									"type": "null"
								}
							]
						}
					},
					"page": {
						"type": "object",
						"additionalProperties": false,
						"properties": {
							"fhir_comments": {
								"type": "array",
								"items": {
									"type": "string"
								}
							},
							"id": {
								"$ref": "#/definitions/fhir_id"
							},
							"_id": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							},
							"extension": {
								"type": "array",
								"minItems": 0,
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							},
							"modifierExtension": {
								"type": "array",
								"minItems": 0,
								"items": {
									"$ref": "#/definitions/Extension"
								}
							},
							"source": {
								"$ref": "#/definitions/uri"
							},
							"_source": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							},
							"name": {
								"type": "string"
							},
							"_name": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							},
							"kind": {
								"$ref": "#/definitions/code"
							},
							"_kind": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							},
							"type": {
								"type": "array",
								"minItems": 0,
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/code"
										},
										{
											"type": "null"
										}
									]
								}
							},
							"_type": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"type": "object",
											"properties": {
												"extension": {
													"type": "array",
													"items": {
														"oneOf": [
															{
																"$ref": "#/definitions/Extension"
															},
															{
																"type": "null"
															}
														]
													}
												}
											}
										},
										{
											"type": "null"
										}
									]
								}
							},
							"package": {
								"type": "array",
								"minItems": 0,
								"items": {
									"oneOf": [
										{
											"type": "string"
										},
										{
											"type": "null"
										}
									]
								}
							},
							"_package": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"type": "object",
											"properties": {
												"extension": {
													"type": "array",
													"items": {
														"oneOf": [
															{
																"$ref": "#/definitions/Extension"
															},
															{
																"type": "null"
															}
														]
													}
												}
											}
										},
										{
											"type": "null"
										}
									]
								}
							},
							"format": {
								"$ref": "#/definitions/code"
							},
							"_format": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							},
							"page": {
								"type": "array",
								"minItems": 0,
								"items": {
									"type": "object"
								}
							}
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"Library": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"identifier": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Identifier"
						}
					},
					"version": {
						"type": "string"
					},
					"_version": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"moduleMetadata": {
						"$ref": "#/definitions/Reference"
					},
					"moduleDefinition": {
						"$ref": "#/definitions/Reference"
					},
					"document": {
						"$ref": "#/definitions/Attachment"
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"List": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"identifier": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Identifier"
						}
					},
					"title": {
						"type": "string"
					},
					"_title": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"code": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"subject": {
						"$ref": "#/definitions/Reference"
					},
					"source": {
						"$ref": "#/definitions/Reference"
					},
					"encounter": {
						"$ref": "#/definitions/Reference"
					},
					"status": {
						"$ref": "#/definitions/code"
					},
					"_status": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"date": {
						"$ref": "#/definitions/dateTime"
					},
					"_date": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"orderedBy": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"mode": {
						"$ref": "#/definitions/code"
					},
					"_mode": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"note": {
						"type": "string"
					},
					"_note": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"entry": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"flag": {
									"$ref": "#/definitions/CodeableConcept"
								},
								"deleted": {
									"type": "boolean"
								},
								"_deleted": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"date": {
									"$ref": "#/definitions/dateTime"
								},
								"_date": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"item": {
									"$ref": "#/definitions/Reference"
								}
							}
						}
					},
					"emptyReason": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"Location": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"identifier": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Identifier"
						}
					},
					"status": {
						"$ref": "#/definitions/code"
					},
					"_status": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"name": {
						"type": "string"
					},
					"_name": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"description": {
						"type": "string"
					},
					"_description": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"mode": {
						"$ref": "#/definitions/code"
					},
					"_mode": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"type": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"telecom": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/ContactPoint"
						}
					},
					"address": {
						"$ref": "#/definitions/Address"
					},
					"physicalType": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"position": {
						"type": "object",
						"additionalProperties": false,
						"properties": {
							"fhir_comments": {
								"type": "array",
								"items": {
									"type": "string"
								}
							},
							"id": {
								"$ref": "#/definitions/fhir_id"
							},
							"_id": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							},
							"extension": {
								"type": "array",
								"minItems": 0,
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							},
							"modifierExtension": {
								"type": "array",
								"minItems": 0,
								"items": {
									"$ref": "#/definitions/Extension"
								}
							},
							"longitude": {
								"$ref": "#/definitions/decimal"
							},
							"_longitude": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							},
							"latitude": {
								"$ref": "#/definitions/decimal"
							},
							"_latitude": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							},
							"altitude": {
								"$ref": "#/definitions/decimal"
							},
							"_altitude": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							}
						}
					},
					"managingOrganization": {
						"$ref": "#/definitions/Reference"
					},
					"partOf": {
						"$ref": "#/definitions/Reference"
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"Measure": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"identifier": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Identifier"
						}
					},
					"version": {
						"type": "string"
					},
					"_version": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"moduleMetadata": {
						"$ref": "#/definitions/Reference"
					},
					"library": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Reference"
						}
					},
					"population": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"type": {
									"$ref": "#/definitions/code"
								},
								"_type": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"name": {
									"type": "string"
								},
								"_name": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"description": {
									"type": "string"
								},
								"_description": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"criteria": {
									"type": "string"
								},
								"_criteria": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								}
							}
						}
					},
					"stratifier": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"type": "string"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"_stratifier": {
						"type": "array",
						"items": {
							"oneOf": [
								{
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								{
									"type": "null"
								}
							]
						}
					},
					"supplementalData": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"type": "string"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"_supplementalData": {
						"type": "array",
						"items": {
							"oneOf": [
								{
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								{
									"type": "null"
								}
							]
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"Media": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"type": {
						"$ref": "#/definitions/code"
					},
					"_type": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"subtype": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"identifier": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Identifier"
						}
					},
					"subject": {
						"$ref": "#/definitions/Reference"
					},
					"operator": {
						"$ref": "#/definitions/Reference"
					},
					"view": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"deviceName": {
						"type": "string"
					},
					"_deviceName": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"height": {
						"$ref": "#/definitions/positiveInt"
					},
					"_height": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"width": {
						"$ref": "#/definitions/positiveInt"
					},
					"_width": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"frames": {
						"$ref": "#/definitions/positiveInt"
					},
					"_frames": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"duration": {
						"$ref": "#/definitions/unsignedInt"
					},
					"_duration": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"content": {
						"$ref": "#/definitions/Attachment"
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"Medication": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"code": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"isBrand": {
						"type": "boolean"
					},
					"_isBrand": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"manufacturer": {
						"$ref": "#/definitions/Reference"
					},
					"product": {
						"type": "object",
						"additionalProperties": false,
						"properties": {
							"fhir_comments": {
								"type": "array",
								"items": {
									"type": "string"
								}
							},
							"id": {
								"$ref": "#/definitions/fhir_id"
							},
							"_id": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							},
							"extension": {
								"type": "array",
								"minItems": 0,
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							},
							"modifierExtension": {
								"type": "array",
								"minItems": 0,
								"items": {
									"$ref": "#/definitions/Extension"
								}
							},
							"form": {
								"$ref": "#/definitions/CodeableConcept"
							},
							"ingredient": {
								"type": "array",
								"minItems": 0,
								"items": {
									"type": "object",
									"properties": {
										"id": {
											"$ref": "#/definitions/fhir_id"
										},
										"_id": {
											"type": "object",
											"properties": {
												"extension": {
													"type": "array",
													"items": {
														"oneOf": [
															{
																"$ref": "#/definitions/Extension"
															},
															{
																"type": "null"
															}
														]
													}
												}
											}
										},
										"extension": {
											"type": "array",
											"minItems": 0,
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										},
										"modifierExtension": {
											"type": "array",
											"minItems": 0,
											"items": {
												"$ref": "#/definitions/Extension"
											}
										},
										"item": {
											"$ref": "#/definitions/Reference"
										},
										"amount": {
											"$ref": "#/definitions/Ratio"
										}
									}
								}
							},
							"batch": {
								"type": "array",
								"minItems": 0,
								"items": {
									"type": "object",
									"properties": {
										"id": {
											"$ref": "#/definitions/fhir_id"
										},
										"_id": {
											"type": "object",
											"properties": {
												"extension": {
													"type": "array",
													"items": {
														"oneOf": [
															{
																"$ref": "#/definitions/Extension"
															},
															{
																"type": "null"
															}
														]
													}
												}
											}
										},
										"extension": {
											"type": "array",
											"minItems": 0,
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										},
										"modifierExtension": {
											"type": "array",
											"minItems": 0,
											"items": {
												"$ref": "#/definitions/Extension"
											}
										},
										"lotNumber": {
											"type": "string"
										},
										"_lotNumber": {
											"type": "object",
											"properties": {
												"extension": {
													"type": "array",
													"items": {
														"oneOf": [
															{
																"$ref": "#/definitions/Extension"
															},
															{
																"type": "null"
															}
														]
													}
												}
											}
										},
										"expirationDate": {
											"$ref": "#/definitions/dateTime"
										},
										"_expirationDate": {
											"type": "object",
											"properties": {
												"extension": {
													"type": "array",
													"items": {
														"oneOf": [
															{
																"$ref": "#/definitions/Extension"
															},
															{
																"type": "null"
															}
														]
													}
												}
											}
										}
									}
								}
							}
						}
					},
					"package": {
						"type": "object",
						"additionalProperties": false,
						"properties": {
							"fhir_comments": {
								"type": "array",
								"items": {
									"type": "string"
								}
							},
							"id": {
								"$ref": "#/definitions/fhir_id"
							},
							"_id": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							},
							"extension": {
								"type": "array",
								"minItems": 0,
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							},
							"modifierExtension": {
								"type": "array",
								"minItems": 0,
								"items": {
									"$ref": "#/definitions/Extension"
								}
							},
							"container": {
								"$ref": "#/definitions/CodeableConcept"
							},
							"content": {
								"type": "array",
								"minItems": 0,
								"items": {
									"type": "object",
									"properties": {
										"id": {
											"$ref": "#/definitions/fhir_id"
										},
										"_id": {
											"type": "object",
											"properties": {
												"extension": {
													"type": "array",
													"items": {
														"oneOf": [
															{
																"$ref": "#/definitions/Extension"
															},
															{
																"type": "null"
															}
														]
													}
												}
											}
										},
										"extension": {
											"type": "array",
											"minItems": 0,
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										},
										"modifierExtension": {
											"type": "array",
											"minItems": 0,
											"items": {
												"$ref": "#/definitions/Extension"
											}
										},
										"item": {
											"$ref": "#/definitions/Reference"
										},
										"amount": {
											"$ref": "#/definitions/Quantity"
										}
									}
								}
							}
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"MedicationAdministration": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"identifier": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Identifier"
						}
					},
					"status": {
						"$ref": "#/definitions/code"
					},
					"_status": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"patient": {
						"$ref": "#/definitions/Reference"
					},
					"practitioner": {
						"$ref": "#/definitions/Reference"
					},
					"encounter": {
						"$ref": "#/definitions/Reference"
					},
					"prescription": {
						"$ref": "#/definitions/Reference"
					},
					"wasNotGiven": {
						"type": "boolean"
					},
					"_wasNotGiven": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"reasonNotGiven": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/CodeableConcept"
						}
					},
					"reasonGiven": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/CodeableConcept"
						}
					},
					"effectiveTimeDateTime": {
						"$ref": "#/definitions/dateTime"
					},
					"_effectiveTimeDateTime": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"effectiveTimePeriod": {
						"$ref": "#/definitions/Period"
					},
					"medicationCodeableConcept": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"medicationReference": {
						"$ref": "#/definitions/Reference"
					},
					"device": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Reference"
						}
					},
					"note": {
						"type": "string"
					},
					"_note": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"dosage": {
						"type": "object",
						"additionalProperties": false,
						"properties": {
							"fhir_comments": {
								"type": "array",
								"items": {
									"type": "string"
								}
							},
							"id": {
								"$ref": "#/definitions/fhir_id"
							},
							"_id": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							},
							"extension": {
								"type": "array",
								"minItems": 0,
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							},
							"modifierExtension": {
								"type": "array",
								"minItems": 0,
								"items": {
									"$ref": "#/definitions/Extension"
								}
							},
							"text": {
								"type": "string"
							},
							"_text": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							},
							"siteCodeableConcept": {
								"$ref": "#/definitions/CodeableConcept"
							},
							"siteReference": {
								"$ref": "#/definitions/Reference"
							},
							"route": {
								"$ref": "#/definitions/CodeableConcept"
							},
							"method": {
								"$ref": "#/definitions/CodeableConcept"
							},
							"quantity": {
								"$ref": "#/definitions/Quantity"
							},
							"rateRatio": {
								"$ref": "#/definitions/Ratio"
							},
							"rateRange": {
								"$ref": "#/definitions/Range"
							}
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"MedicationDispense": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"identifier": {
						"$ref": "#/definitions/Identifier"
					},
					"status": {
						"$ref": "#/definitions/code"
					},
					"_status": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"patient": {
						"$ref": "#/definitions/Reference"
					},
					"dispenser": {
						"$ref": "#/definitions/Reference"
					},
					"authorizingPrescription": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Reference"
						}
					},
					"type": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"quantity": {
						"$ref": "#/definitions/Quantity"
					},
					"daysSupply": {
						"$ref": "#/definitions/Quantity"
					},
					"medicationCodeableConcept": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"medicationReference": {
						"$ref": "#/definitions/Reference"
					},
					"whenPrepared": {
						"$ref": "#/definitions/dateTime"
					},
					"_whenPrepared": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"whenHandedOver": {
						"$ref": "#/definitions/dateTime"
					},
					"_whenHandedOver": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"destination": {
						"$ref": "#/definitions/Reference"
					},
					"receiver": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Reference"
						}
					},
					"note": {
						"type": "string"
					},
					"_note": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"dosageInstruction": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"text": {
									"type": "string"
								},
								"_text": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"additionalInstructions": {
									"$ref": "#/definitions/CodeableConcept"
								},
								"timing": {
									"$ref": "#/definitions/Timing"
								},
								"asNeededBoolean": {
									"type": "boolean"
								},
								"_asNeededBoolean": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"asNeededCodeableConcept": {
									"$ref": "#/definitions/CodeableConcept"
								},
								"siteCodeableConcept": {
									"$ref": "#/definitions/CodeableConcept"
								},
								"siteReference": {
									"$ref": "#/definitions/Reference"
								},
								"route": {
									"$ref": "#/definitions/CodeableConcept"
								},
								"method": {
									"$ref": "#/definitions/CodeableConcept"
								},
								"doseRange": {
									"$ref": "#/definitions/Range"
								},
								"doseQuantity": {
									"$ref": "#/definitions/Quantity"
								},
								"rateRatio": {
									"$ref": "#/definitions/Ratio"
								},
								"rateRange": {
									"$ref": "#/definitions/Range"
								},
								"maxDosePerPeriod": {
									"$ref": "#/definitions/Ratio"
								}
							}
						}
					},
					"substitution": {
						"type": "object",
						"additionalProperties": false,
						"properties": {
							"fhir_comments": {
								"type": "array",
								"items": {
									"type": "string"
								}
							},
							"id": {
								"$ref": "#/definitions/fhir_id"
							},
							"_id": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							},
							"extension": {
								"type": "array",
								"minItems": 0,
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							},
							"modifierExtension": {
								"type": "array",
								"minItems": 0,
								"items": {
									"$ref": "#/definitions/Extension"
								}
							},
							"type": {
								"$ref": "#/definitions/CodeableConcept"
							},
							"reason": {
								"type": "array",
								"minItems": 0,
								"items": {
									"$ref": "#/definitions/CodeableConcept"
								}
							},
							"responsibleParty": {
								"type": "array",
								"minItems": 0,
								"items": {
									"$ref": "#/definitions/Reference"
								}
							}
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"MedicationOrder": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"identifier": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Identifier"
						}
					},
					"dateWritten": {
						"$ref": "#/definitions/dateTime"
					},
					"_dateWritten": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"status": {
						"$ref": "#/definitions/code"
					},
					"_status": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"dateEnded": {
						"$ref": "#/definitions/dateTime"
					},
					"_dateEnded": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"reasonEnded": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"patient": {
						"$ref": "#/definitions/Reference"
					},
					"prescriber": {
						"$ref": "#/definitions/Reference"
					},
					"encounter": {
						"$ref": "#/definitions/Reference"
					},
					"reasonCodeableConcept": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"reasonReference": {
						"$ref": "#/definitions/Reference"
					},
					"note": {
						"type": "string"
					},
					"_note": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"medicationCodeableConcept": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"medicationReference": {
						"$ref": "#/definitions/Reference"
					},
					"dosageInstruction": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"text": {
									"type": "string"
								},
								"_text": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"additionalInstructions": {
									"$ref": "#/definitions/CodeableConcept"
								},
								"timing": {
									"$ref": "#/definitions/Timing"
								},
								"asNeededBoolean": {
									"type": "boolean"
								},
								"_asNeededBoolean": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"asNeededCodeableConcept": {
									"$ref": "#/definitions/CodeableConcept"
								},
								"siteCodeableConcept": {
									"$ref": "#/definitions/CodeableConcept"
								},
								"siteReference": {
									"$ref": "#/definitions/Reference"
								},
								"route": {
									"$ref": "#/definitions/CodeableConcept"
								},
								"method": {
									"$ref": "#/definitions/CodeableConcept"
								},
								"doseRange": {
									"$ref": "#/definitions/Range"
								},
								"doseQuantity": {
									"$ref": "#/definitions/Quantity"
								},
								"rateRatio": {
									"$ref": "#/definitions/Ratio"
								},
								"rateRange": {
									"$ref": "#/definitions/Range"
								},
								"maxDosePerPeriod": {
									"$ref": "#/definitions/Ratio"
								}
							}
						}
					},
					"dispenseRequest": {
						"type": "object",
						"additionalProperties": false,
						"properties": {
							"fhir_comments": {
								"type": "array",
								"items": {
									"type": "string"
								}
							},
							"id": {
								"$ref": "#/definitions/fhir_id"
							},
							"_id": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							},
							"extension": {
								"type": "array",
								"minItems": 0,
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							},
							"modifierExtension": {
								"type": "array",
								"minItems": 0,
								"items": {
									"$ref": "#/definitions/Extension"
								}
							},
							"medicationCodeableConcept": {
								"$ref": "#/definitions/CodeableConcept"
							},
							"medicationReference": {
								"$ref": "#/definitions/Reference"
							},
							"validityPeriod": {
								"$ref": "#/definitions/Period"
							},
							"numberOfRepeatsAllowed": {
								"$ref": "#/definitions/positiveInt"
							},
							"_numberOfRepeatsAllowed": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							},
							"quantity": {
								"$ref": "#/definitions/Quantity"
							},
							"expectedSupplyDuration": {
								"$ref": "#/definitions/Quantity"
							}
						}
					},
					"substitution": {
						"type": "object",
						"additionalProperties": false,
						"properties": {
							"fhir_comments": {
								"type": "array",
								"items": {
									"type": "string"
								}
							},
							"id": {
								"$ref": "#/definitions/fhir_id"
							},
							"_id": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							},
							"extension": {
								"type": "array",
								"minItems": 0,
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							},
							"modifierExtension": {
								"type": "array",
								"minItems": 0,
								"items": {
									"$ref": "#/definitions/Extension"
								}
							},
							"type": {
								"$ref": "#/definitions/CodeableConcept"
							},
							"reason": {
								"$ref": "#/definitions/CodeableConcept"
							}
						}
					},
					"priorPrescription": {
						"$ref": "#/definitions/Reference"
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"MedicationStatement": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"identifier": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Identifier"
						}
					},
					"patient": {
						"$ref": "#/definitions/Reference"
					},
					"informationSource": {
						"$ref": "#/definitions/Reference"
					},
					"dateAsserted": {
						"$ref": "#/definitions/dateTime"
					},
					"_dateAsserted": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"status": {
						"$ref": "#/definitions/code"
					},
					"_status": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"wasNotTaken": {
						"type": "boolean"
					},
					"_wasNotTaken": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"reasonNotTaken": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/CodeableConcept"
						}
					},
					"reasonForUseCodeableConcept": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"reasonForUseReference": {
						"$ref": "#/definitions/Reference"
					},
					"effectiveDateTime": {
						"$ref": "#/definitions/dateTime"
					},
					"_effectiveDateTime": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"effectivePeriod": {
						"$ref": "#/definitions/Period"
					},
					"note": {
						"type": "string"
					},
					"_note": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"supportingInformation": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Reference"
						}
					},
					"medicationCodeableConcept": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"medicationReference": {
						"$ref": "#/definitions/Reference"
					},
					"dosage": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"text": {
									"type": "string"
								},
								"_text": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"timing": {
									"$ref": "#/definitions/Timing"
								},
								"asNeededBoolean": {
									"type": "boolean"
								},
								"_asNeededBoolean": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"asNeededCodeableConcept": {
									"$ref": "#/definitions/CodeableConcept"
								},
								"siteCodeableConcept": {
									"$ref": "#/definitions/CodeableConcept"
								},
								"siteReference": {
									"$ref": "#/definitions/Reference"
								},
								"route": {
									"$ref": "#/definitions/CodeableConcept"
								},
								"method": {
									"$ref": "#/definitions/CodeableConcept"
								},
								"quantityQuantity": {
									"$ref": "#/definitions/Quantity"
								},
								"quantityRange": {
									"$ref": "#/definitions/Range"
								},
								"rateRatio": {
									"$ref": "#/definitions/Ratio"
								},
								"rateRange": {
									"$ref": "#/definitions/Range"
								},
								"maxDosePerPeriod": {
									"$ref": "#/definitions/Ratio"
								}
							}
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"MessageHeader": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"timestamp": {
						"$ref": "#/definitions/instant"
					},
					"_timestamp": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"event": {
						"$ref": "#/definitions/Coding"
					},
					"response": {
						"type": "object",
						"additionalProperties": false,
						"properties": {
							"fhir_comments": {
								"type": "array",
								"items": {
									"type": "string"
								}
							},
							"id": {
								"$ref": "#/definitions/fhir_id"
							},
							"_id": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							},
							"extension": {
								"type": "array",
								"minItems": 0,
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							},
							"modifierExtension": {
								"type": "array",
								"minItems": 0,
								"items": {
									"$ref": "#/definitions/Extension"
								}
							},
							"identifier": {
								"$ref": "#/definitions/fhir_id"
							},
							"_identifier": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							},
							"code": {
								"$ref": "#/definitions/code"
							},
							"_code": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							},
							"details": {
								"$ref": "#/definitions/Reference"
							}
						}
					},
					"source": {
						"type": "object",
						"additionalProperties": false,
						"properties": {
							"fhir_comments": {
								"type": "array",
								"items": {
									"type": "string"
								}
							},
							"id": {
								"$ref": "#/definitions/fhir_id"
							},
							"_id": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							},
							"extension": {
								"type": "array",
								"minItems": 0,
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							},
							"modifierExtension": {
								"type": "array",
								"minItems": 0,
								"items": {
									"$ref": "#/definitions/Extension"
								}
							},
							"name": {
								"type": "string"
							},
							"_name": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							},
							"software": {
								"type": "string"
							},
							"_software": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							},
							"version": {
								"type": "string"
							},
							"_version": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							},
							"contact": {
								"$ref": "#/definitions/ContactPoint"
							},
							"endpoint": {
								"$ref": "#/definitions/uri"
							},
							"_endpoint": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							}
						}
					},
					"destination": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"name": {
									"type": "string"
								},
								"_name": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"target": {
									"$ref": "#/definitions/Reference"
								},
								"endpoint": {
									"$ref": "#/definitions/uri"
								},
								"_endpoint": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								}
							}
						}
					},
					"enterer": {
						"$ref": "#/definitions/Reference"
					},
					"author": {
						"$ref": "#/definitions/Reference"
					},
					"receiver": {
						"$ref": "#/definitions/Reference"
					},
					"responsible": {
						"$ref": "#/definitions/Reference"
					},
					"reason": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"data": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Reference"
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"ModuleDefinition": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"identifier": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Identifier"
						}
					},
					"version": {
						"type": "string"
					},
					"_version": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"model": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"name": {
									"type": "string"
								},
								"_name": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"identifier": {
									"type": "string"
								},
								"_identifier": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"version": {
									"type": "string"
								},
								"_version": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								}
							}
						}
					},
					"library": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"name": {
									"type": "string"
								},
								"_name": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"identifier": {
									"type": "string"
								},
								"_identifier": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"version": {
									"type": "string"
								},
								"_version": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"documentAttachment": {
									"$ref": "#/definitions/Attachment"
								},
								"documentReference": {
									"$ref": "#/definitions/Reference"
								}
							}
						}
					},
					"codeSystem": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"name": {
									"type": "string"
								},
								"_name": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"identifier": {
									"type": "string"
								},
								"_identifier": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"version": {
									"type": "string"
								},
								"_version": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								}
							}
						}
					},
					"valueSet": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"name": {
									"type": "string"
								},
								"_name": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"identifier": {
									"type": "string"
								},
								"_identifier": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"version": {
									"type": "string"
								},
								"_version": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"codeSystem": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"type": "string"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"_codeSystem": {
									"type": "array",
									"items": {
										"oneOf": [
											{
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											},
											{
												"type": "null"
											}
										]
									}
								}
							}
						}
					},
					"parameter": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"name": {
									"$ref": "#/definitions/code"
								},
								"_name": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"use": {
									"$ref": "#/definitions/code"
								},
								"_use": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"documentation": {
									"type": "string"
								},
								"_documentation": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"type": {
									"$ref": "#/definitions/code"
								},
								"_type": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"profile": {
									"$ref": "#/definitions/Reference"
								}
							}
						}
					},
					"data": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"type": {
									"$ref": "#/definitions/code"
								},
								"_type": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"profile": {
									"$ref": "#/definitions/Reference"
								},
								"mustSupport": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"type": "string"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"_mustSupport": {
									"type": "array",
									"items": {
										"oneOf": [
											{
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											},
											{
												"type": "null"
											}
										]
									}
								},
								"codeFilter": {
									"type": "array",
									"minItems": 0,
									"items": {
										"type": "object",
										"properties": {
											"id": {
												"$ref": "#/definitions/fhir_id"
											},
											"_id": {
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											},
											"extension": {
												"type": "array",
												"minItems": 0,
												"items": {
													"oneOf": [
														{
															"$ref": "#/definitions/Extension"
														},
														{
															"type": "null"
														}
													]
												}
											},
											"modifierExtension": {
												"type": "array",
												"minItems": 0,
												"items": {
													"$ref": "#/definitions/Extension"
												}
											},
											"path": {
												"type": "string"
											},
											"_path": {
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											},
											"valueSetString": {
												"type": "string"
											},
											"_valueSetString": {
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											},
											"valueSetReference": {
												"$ref": "#/definitions/Reference"
											},
											"codeableConcept": {
												"type": "array",
												"minItems": 0,
												"items": {
													"$ref": "#/definitions/CodeableConcept"
												}
											}
										}
									}
								},
								"dateFilter": {
									"type": "array",
									"minItems": 0,
									"items": {
										"type": "object",
										"properties": {
											"id": {
												"$ref": "#/definitions/fhir_id"
											},
											"_id": {
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											},
											"extension": {
												"type": "array",
												"minItems": 0,
												"items": {
													"oneOf": [
														{
															"$ref": "#/definitions/Extension"
														},
														{
															"type": "null"
														}
													]
												}
											},
											"modifierExtension": {
												"type": "array",
												"minItems": 0,
												"items": {
													"$ref": "#/definitions/Extension"
												}
											},
											"path": {
												"type": "string"
											},
											"_path": {
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											},
											"valueDateTime": {
												"$ref": "#/definitions/dateTime"
											},
											"_valueDateTime": {
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											},
											"valuePeriod": {
												"$ref": "#/definitions/Period"
											}
										}
									}
								}
							}
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"ModuleMetadata": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"identifier": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Identifier"
						}
					},
					"version": {
						"type": "string"
					},
					"_version": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"title": {
						"type": "string"
					},
					"_title": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"type": {
						"$ref": "#/definitions/code"
					},
					"_type": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"status": {
						"$ref": "#/definitions/code"
					},
					"_status": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"description": {
						"type": "string"
					},
					"_description": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"purpose": {
						"type": "string"
					},
					"_purpose": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"usage": {
						"type": "string"
					},
					"_usage": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"publicationDate": {
						"$ref": "#/definitions/date"
					},
					"_publicationDate": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"lastReviewDate": {
						"$ref": "#/definitions/date"
					},
					"_lastReviewDate": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"effectivePeriod": {
						"$ref": "#/definitions/Period"
					},
					"coverage": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"focus": {
									"$ref": "#/definitions/code"
								},
								"_focus": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"description": {
									"type": "string"
								},
								"_description": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"value": {
									"$ref": "#/definitions/CodeableConcept"
								}
							}
						}
					},
					"topic": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/CodeableConcept"
						}
					},
					"keyword": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"type": "string"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"_keyword": {
						"type": "array",
						"items": {
							"oneOf": [
								{
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								{
									"type": "null"
								}
							]
						}
					},
					"contributor": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"type": {
									"$ref": "#/definitions/code"
								},
								"_type": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"party": {
									"$ref": "#/definitions/Reference"
								}
							}
						}
					},
					"publisher": {
						"$ref": "#/definitions/Reference"
					},
					"steward": {
						"$ref": "#/definitions/Reference"
					},
					"rightsDeclaration": {
						"type": "string"
					},
					"_rightsDeclaration": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"relatedResource": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"type": {
									"$ref": "#/definitions/code"
								},
								"_type": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"uri": {
									"$ref": "#/definitions/uri"
								},
								"_uri": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"description": {
									"type": "string"
								},
								"_description": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"document": {
									"$ref": "#/definitions/Attachment"
								}
							}
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"NamingSystem": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"name": {
						"type": "string"
					},
					"_name": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"status": {
						"$ref": "#/definitions/code"
					},
					"_status": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"kind": {
						"$ref": "#/definitions/code"
					},
					"_kind": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"publisher": {
						"type": "string"
					},
					"_publisher": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"contact": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"name": {
									"type": "string"
								},
								"_name": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"telecom": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/ContactPoint"
									}
								}
							}
						}
					},
					"responsible": {
						"type": "string"
					},
					"_responsible": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"date": {
						"$ref": "#/definitions/dateTime"
					},
					"_date": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"type": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"description": {
						"type": "string"
					},
					"_description": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"useContext": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/CodeableConcept"
						}
					},
					"usage": {
						"type": "string"
					},
					"_usage": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"uniqueId": {
						"type": "array",
						"minItems": 1,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"type": {
									"$ref": "#/definitions/code"
								},
								"_type": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"value": {
									"type": "string"
								},
								"_value": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"preferred": {
									"type": "boolean"
								},
								"_preferred": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"period": {
									"$ref": "#/definitions/Period"
								}
							}
						}
					},
					"replacedBy": {
						"$ref": "#/definitions/Reference"
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"NutritionOrder": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"patient": {
						"$ref": "#/definitions/Reference"
					},
					"orderer": {
						"$ref": "#/definitions/Reference"
					},
					"identifier": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Identifier"
						}
					},
					"encounter": {
						"$ref": "#/definitions/Reference"
					},
					"dateTime": {
						"$ref": "#/definitions/dateTime"
					},
					"_dateTime": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"status": {
						"$ref": "#/definitions/code"
					},
					"_status": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"allergyIntolerance": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Reference"
						}
					},
					"foodPreferenceModifier": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/CodeableConcept"
						}
					},
					"excludeFoodModifier": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/CodeableConcept"
						}
					},
					"oralDiet": {
						"type": "object",
						"additionalProperties": false,
						"properties": {
							"fhir_comments": {
								"type": "array",
								"items": {
									"type": "string"
								}
							},
							"id": {
								"$ref": "#/definitions/fhir_id"
							},
							"_id": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							},
							"extension": {
								"type": "array",
								"minItems": 0,
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							},
							"modifierExtension": {
								"type": "array",
								"minItems": 0,
								"items": {
									"$ref": "#/definitions/Extension"
								}
							},
							"type": {
								"type": "array",
								"minItems": 0,
								"items": {
									"$ref": "#/definitions/CodeableConcept"
								}
							},
							"schedule": {
								"type": "array",
								"minItems": 0,
								"items": {
									"$ref": "#/definitions/Timing"
								}
							},
							"nutrient": {
								"type": "array",
								"minItems": 0,
								"items": {
									"type": "object",
									"properties": {
										"id": {
											"$ref": "#/definitions/fhir_id"
										},
										"_id": {
											"type": "object",
											"properties": {
												"extension": {
													"type": "array",
													"items": {
														"oneOf": [
															{
																"$ref": "#/definitions/Extension"
															},
															{
																"type": "null"
															}
														]
													}
												}
											}
										},
										"extension": {
											"type": "array",
											"minItems": 0,
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										},
										"modifierExtension": {
											"type": "array",
											"minItems": 0,
											"items": {
												"$ref": "#/definitions/Extension"
											}
										},
										"modifier": {
											"$ref": "#/definitions/CodeableConcept"
										},
										"amount": {
											"$ref": "#/definitions/Quantity"
										}
									}
								}
							},
							"texture": {
								"type": "array",
								"minItems": 0,
								"items": {
									"type": "object",
									"properties": {
										"id": {
											"$ref": "#/definitions/fhir_id"
										},
										"_id": {
											"type": "object",
											"properties": {
												"extension": {
													"type": "array",
													"items": {
														"oneOf": [
															{
																"$ref": "#/definitions/Extension"
															},
															{
																"type": "null"
															}
														]
													}
												}
											}
										},
										"extension": {
											"type": "array",
											"minItems": 0,
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										},
										"modifierExtension": {
											"type": "array",
											"minItems": 0,
											"items": {
												"$ref": "#/definitions/Extension"
											}
										},
										"modifier": {
											"$ref": "#/definitions/CodeableConcept"
										},
										"foodType": {
											"$ref": "#/definitions/CodeableConcept"
										}
									}
								}
							},
							"fluidConsistencyType": {
								"type": "array",
								"minItems": 0,
								"items": {
									"$ref": "#/definitions/CodeableConcept"
								}
							},
							"instruction": {
								"type": "string"
							},
							"_instruction": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							}
						}
					},
					"supplement": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"type": {
									"$ref": "#/definitions/CodeableConcept"
								},
								"productName": {
									"type": "string"
								},
								"_productName": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"schedule": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Timing"
									}
								},
								"quantity": {
									"$ref": "#/definitions/Quantity"
								},
								"instruction": {
									"type": "string"
								},
								"_instruction": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								}
							}
						}
					},
					"enteralFormula": {
						"type": "object",
						"additionalProperties": false,
						"properties": {
							"fhir_comments": {
								"type": "array",
								"items": {
									"type": "string"
								}
							},
							"id": {
								"$ref": "#/definitions/fhir_id"
							},
							"_id": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							},
							"extension": {
								"type": "array",
								"minItems": 0,
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							},
							"modifierExtension": {
								"type": "array",
								"minItems": 0,
								"items": {
									"$ref": "#/definitions/Extension"
								}
							},
							"baseFormulaType": {
								"$ref": "#/definitions/CodeableConcept"
							},
							"baseFormulaProductName": {
								"type": "string"
							},
							"_baseFormulaProductName": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							},
							"additiveType": {
								"$ref": "#/definitions/CodeableConcept"
							},
							"additiveProductName": {
								"type": "string"
							},
							"_additiveProductName": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							},
							"caloricDensity": {
								"$ref": "#/definitions/Quantity"
							},
							"routeofAdministration": {
								"$ref": "#/definitions/CodeableConcept"
							},
							"administration": {
								"type": "array",
								"minItems": 0,
								"items": {
									"type": "object",
									"properties": {
										"id": {
											"$ref": "#/definitions/fhir_id"
										},
										"_id": {
											"type": "object",
											"properties": {
												"extension": {
													"type": "array",
													"items": {
														"oneOf": [
															{
																"$ref": "#/definitions/Extension"
															},
															{
																"type": "null"
															}
														]
													}
												}
											}
										},
										"extension": {
											"type": "array",
											"minItems": 0,
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										},
										"modifierExtension": {
											"type": "array",
											"minItems": 0,
											"items": {
												"$ref": "#/definitions/Extension"
											}
										},
										"schedule": {
											"$ref": "#/definitions/Timing"
										},
										"quantity": {
											"$ref": "#/definitions/Quantity"
										},
										"rateQuantity": {
											"$ref": "#/definitions/Quantity"
										},
										"rateRatio": {
											"$ref": "#/definitions/Ratio"
										}
									}
								}
							},
							"maxVolumeToDeliver": {
								"$ref": "#/definitions/Quantity"
							},
							"administrationInstruction": {
								"type": "string"
							},
							"_administrationInstruction": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							}
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"Observation": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"identifier": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Identifier"
						}
					},
					"status": {
						"$ref": "#/definitions/code"
					},
					"_status": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"category": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"code": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"subject": {
						"$ref": "#/definitions/Reference"
					},
					"encounter": {
						"$ref": "#/definitions/Reference"
					},
					"effectiveDateTime": {
						"$ref": "#/definitions/dateTime"
					},
					"_effectiveDateTime": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"effectivePeriod": {
						"$ref": "#/definitions/Period"
					},
					"issued": {
						"$ref": "#/definitions/instant"
					},
					"_issued": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"performer": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Reference"
						}
					},
					"valueQuantity": {
						"$ref": "#/definitions/Quantity"
					},
					"valueCodeableConcept": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"valueString": {
						"type": "string"
					},
					"_valueString": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"valueRange": {
						"$ref": "#/definitions/Range"
					},
					"valueRatio": {
						"$ref": "#/definitions/Ratio"
					},
					"valueSampledData": {
						"$ref": "#/definitions/SampledData"
					},
					"valueAttachment": {
						"$ref": "#/definitions/Attachment"
					},
					"valueTime": {
						"$ref": "#/definitions/time"
					},
					"_valueTime": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"valueDateTime": {
						"$ref": "#/definitions/dateTime"
					},
					"_valueDateTime": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"valuePeriod": {
						"$ref": "#/definitions/Period"
					},
					"dataAbsentReason": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"interpretation": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"comments": {
						"type": "string"
					},
					"_comments": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"bodySite": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"method": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"specimen": {
						"$ref": "#/definitions/Reference"
					},
					"device": {
						"$ref": "#/definitions/Reference"
					},
					"referenceRange": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"low": {
									"$ref": "#/definitions/Quantity"
								},
								"high": {
									"$ref": "#/definitions/Quantity"
								},
								"meaning": {
									"$ref": "#/definitions/CodeableConcept"
								},
								"age": {
									"$ref": "#/definitions/Range"
								},
								"text": {
									"type": "string"
								},
								"_text": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								}
							}
						}
					},
					"related": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"type": {
									"$ref": "#/definitions/code"
								},
								"_type": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"target": {
									"$ref": "#/definitions/Reference"
								}
							}
						}
					},
					"component": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"code": {
									"$ref": "#/definitions/CodeableConcept"
								},
								"valueQuantity": {
									"$ref": "#/definitions/Quantity"
								},
								"valueCodeableConcept": {
									"$ref": "#/definitions/CodeableConcept"
								},
								"valueString": {
									"type": "string"
								},
								"_valueString": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"valueRange": {
									"$ref": "#/definitions/Range"
								},
								"valueRatio": {
									"$ref": "#/definitions/Ratio"
								},
								"valueSampledData": {
									"$ref": "#/definitions/SampledData"
								},
								"valueAttachment": {
									"$ref": "#/definitions/Attachment"
								},
								"valueTime": {
									"$ref": "#/definitions/time"
								},
								"_valueTime": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"valueDateTime": {
									"$ref": "#/definitions/dateTime"
								},
								"_valueDateTime": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"valuePeriod": {
									"$ref": "#/definitions/Period"
								},
								"dataAbsentReason": {
									"$ref": "#/definitions/CodeableConcept"
								},
								"referenceRange": {
									"type": "array",
									"minItems": 0,
									"items": {
										"type": "object"
									}
								}
							}
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"OperationDefinition": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"url": {
						"$ref": "#/definitions/uri"
					},
					"_url": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"version": {
						"type": "string"
					},
					"_version": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"name": {
						"type": "string"
					},
					"_name": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"status": {
						"$ref": "#/definitions/code"
					},
					"_status": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"kind": {
						"$ref": "#/definitions/code"
					},
					"_kind": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"experimental": {
						"type": "boolean"
					},
					"_experimental": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"publisher": {
						"type": "string"
					},
					"_publisher": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"contact": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"name": {
									"type": "string"
								},
								"_name": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"telecom": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/ContactPoint"
									}
								}
							}
						}
					},
					"date": {
						"$ref": "#/definitions/dateTime"
					},
					"_date": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"description": {
						"type": "string"
					},
					"_description": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"requirements": {
						"type": "string"
					},
					"_requirements": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"idempotent": {
						"type": "boolean"
					},
					"_idempotent": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"code": {
						"$ref": "#/definitions/code"
					},
					"_code": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"notes": {
						"type": "string"
					},
					"_notes": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"base": {
						"$ref": "#/definitions/Reference"
					},
					"system": {
						"type": "boolean"
					},
					"_system": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"type": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/code"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"_type": {
						"type": "array",
						"items": {
							"oneOf": [
								{
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								{
									"type": "null"
								}
							]
						}
					},
					"instance": {
						"type": "boolean"
					},
					"_instance": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"parameter": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"name": {
									"$ref": "#/definitions/code"
								},
								"_name": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"use": {
									"$ref": "#/definitions/code"
								},
								"_use": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"min": {
									"type": "integer"
								},
								"_min": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"max": {
									"type": "string"
								},
								"_max": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"documentation": {
									"type": "string"
								},
								"_documentation": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"type": {
									"$ref": "#/definitions/code"
								},
								"_type": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"profile": {
									"$ref": "#/definitions/Reference"
								},
								"binding": {
									"type": "object",
									"additionalProperties": false,
									"properties": {
										"fhir_comments": {
											"type": "array",
											"items": {
												"type": "string"
											}
										},
										"id": {
											"$ref": "#/definitions/fhir_id"
										},
										"_id": {
											"type": "object",
											"properties": {
												"extension": {
													"type": "array",
													"items": {
														"oneOf": [
															{
																"$ref": "#/definitions/Extension"
															},
															{
																"type": "null"
															}
														]
													}
												}
											}
										},
										"extension": {
											"type": "array",
											"minItems": 0,
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										},
										"modifierExtension": {
											"type": "array",
											"minItems": 0,
											"items": {
												"$ref": "#/definitions/Extension"
											}
										},
										"strength": {
											"$ref": "#/definitions/code"
										},
										"_strength": {
											"type": "object",
											"properties": {
												"extension": {
													"type": "array",
													"items": {
														"oneOf": [
															{
																"$ref": "#/definitions/Extension"
															},
															{
																"type": "null"
															}
														]
													}
												}
											}
										},
										"valueSetUri": {
											"$ref": "#/definitions/uri"
										},
										"_valueSetUri": {
											"type": "object",
											"properties": {
												"extension": {
													"type": "array",
													"items": {
														"oneOf": [
															{
																"$ref": "#/definitions/Extension"
															},
															{
																"type": "null"
															}
														]
													}
												}
											}
										},
										"valueSetReference": {
											"$ref": "#/definitions/Reference"
										}
									}
								},
								"part": {
									"type": "array",
									"minItems": 0,
									"items": {
										"type": "object"
									}
								}
							}
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"OperationOutcome": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"issue": {
						"type": "array",
						"minItems": 1,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"severity": {
									"$ref": "#/definitions/code"
								},
								"_severity": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"code": {
									"$ref": "#/definitions/code"
								},
								"_code": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"details": {
									"$ref": "#/definitions/CodeableConcept"
								},
								"diagnostics": {
									"type": "string"
								},
								"_diagnostics": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"location": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"type": "string"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"_location": {
									"type": "array",
									"items": {
										"oneOf": [
											{
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											},
											{
												"type": "null"
											}
										]
									}
								}
							}
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"Order": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"identifier": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Identifier"
						}
					},
					"date": {
						"$ref": "#/definitions/dateTime"
					},
					"_date": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"subject": {
						"$ref": "#/definitions/Reference"
					},
					"source": {
						"$ref": "#/definitions/Reference"
					},
					"target": {
						"$ref": "#/definitions/Reference"
					},
					"reasonCodeableConcept": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"reasonReference": {
						"$ref": "#/definitions/Reference"
					},
					"when": {
						"type": "object",
						"additionalProperties": false,
						"properties": {
							"fhir_comments": {
								"type": "array",
								"items": {
									"type": "string"
								}
							},
							"id": {
								"$ref": "#/definitions/fhir_id"
							},
							"_id": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							},
							"extension": {
								"type": "array",
								"minItems": 0,
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							},
							"modifierExtension": {
								"type": "array",
								"minItems": 0,
								"items": {
									"$ref": "#/definitions/Extension"
								}
							},
							"code": {
								"$ref": "#/definitions/CodeableConcept"
							},
							"schedule": {
								"$ref": "#/definitions/Timing"
							}
						}
					},
					"detail": {
						"type": "array",
						"minItems": 1,
						"items": {
							"$ref": "#/definitions/Reference"
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"OrderResponse": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"identifier": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Identifier"
						}
					},
					"request": {
						"$ref": "#/definitions/Reference"
					},
					"date": {
						"$ref": "#/definitions/dateTime"
					},
					"_date": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"who": {
						"$ref": "#/definitions/Reference"
					},
					"orderStatus": {
						"$ref": "#/definitions/code"
					},
					"_orderStatus": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"description": {
						"type": "string"
					},
					"_description": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"fulfillment": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Reference"
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"OrderSet": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"identifier": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Identifier"
						}
					},
					"version": {
						"type": "string"
					},
					"_version": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"moduleMetadata": {
						"$ref": "#/definitions/Reference"
					},
					"library": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Reference"
						}
					},
					"item": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"identifier": {
									"$ref": "#/definitions/Identifier"
								},
								"number": {
									"type": "string"
								},
								"_number": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"title": {
									"type": "string"
								},
								"_title": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"description": {
									"type": "string"
								},
								"_description": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"textEquivalent": {
									"type": "string"
								},
								"_textEquivalent": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"supportingEvidence": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Attachment"
									}
								},
								"documentation": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Attachment"
									}
								},
								"participantType": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/code"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"_participantType": {
									"type": "array",
									"items": {
										"oneOf": [
											{
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											},
											{
												"type": "null"
											}
										]
									}
								},
								"concept": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/CodeableConcept"
									}
								},
								"type": {
									"$ref": "#/definitions/code"
								},
								"_type": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"groupingBehavior": {
									"$ref": "#/definitions/code"
								},
								"_groupingBehavior": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"selectionBehavior": {
									"$ref": "#/definitions/code"
								},
								"_selectionBehavior": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"requiredBehavior": {
									"$ref": "#/definitions/code"
								},
								"_requiredBehavior": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"precheckBehavior": {
									"$ref": "#/definitions/code"
								},
								"_precheckBehavior": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"cardinalityBehavior": {
									"$ref": "#/definitions/code"
								},
								"_cardinalityBehavior": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"resource": {
									"$ref": "#/definitions/Reference"
								},
								"customization": {
									"type": "array",
									"minItems": 0,
									"items": {
										"type": "object",
										"properties": {
											"id": {
												"$ref": "#/definitions/fhir_id"
											},
											"_id": {
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											},
											"extension": {
												"type": "array",
												"minItems": 0,
												"items": {
													"oneOf": [
														{
															"$ref": "#/definitions/Extension"
														},
														{
															"type": "null"
														}
													]
												}
											},
											"modifierExtension": {
												"type": "array",
												"minItems": 0,
												"items": {
													"$ref": "#/definitions/Extension"
												}
											},
											"path": {
												"type": "string"
											},
											"_path": {
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											},
											"expression": {
												"type": "string"
											},
											"_expression": {
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											}
										}
									}
								},
								"items": {
									"type": "array",
									"minItems": 0,
									"items": {
										"type": "object"
									}
								}
							}
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"Organization": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"identifier": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Identifier"
						}
					},
					"active": {
						"type": "boolean"
					},
					"_active": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"type": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"name": {
						"type": "string"
					},
					"_name": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"telecom": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/ContactPoint"
						}
					},
					"address": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Address"
						}
					},
					"partOf": {
						"$ref": "#/definitions/Reference"
					},
					"contact": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"purpose": {
									"$ref": "#/definitions/CodeableConcept"
								},
								"name": {
									"$ref": "#/definitions/HumanName"
								},
								"telecom": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/ContactPoint"
									}
								},
								"address": {
									"$ref": "#/definitions/Address"
								}
							}
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"Patient": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"identifier": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Identifier"
						}
					},
					"active": {
						"type": "boolean"
					},
					"_active": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"name": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/HumanName"
						}
					},
					"telecom": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/ContactPoint"
						}
					},
					"gender": {
						"$ref": "#/definitions/code"
					},
					"_gender": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"birthDate": {
						"$ref": "#/definitions/date"
					},
					"_birthDate": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"deceasedBoolean": {
						"type": "boolean"
					},
					"_deceasedBoolean": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"deceasedDateTime": {
						"$ref": "#/definitions/dateTime"
					},
					"_deceasedDateTime": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"address": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Address"
						}
					},
					"maritalStatus": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"multipleBirthBoolean": {
						"type": "boolean"
					},
					"_multipleBirthBoolean": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"multipleBirthInteger": {
						"type": "integer"
					},
					"_multipleBirthInteger": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"photo": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Attachment"
						}
					},
					"contact": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"relationship": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/CodeableConcept"
									}
								},
								"name": {
									"$ref": "#/definitions/HumanName"
								},
								"telecom": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/ContactPoint"
									}
								},
								"address": {
									"$ref": "#/definitions/Address"
								},
								"gender": {
									"$ref": "#/definitions/code"
								},
								"_gender": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"organization": {
									"$ref": "#/definitions/Reference"
								},
								"period": {
									"$ref": "#/definitions/Period"
								}
							}
						}
					},
					"animal": {
						"type": "object",
						"additionalProperties": false,
						"properties": {
							"fhir_comments": {
								"type": "array",
								"items": {
									"type": "string"
								}
							},
							"id": {
								"$ref": "#/definitions/fhir_id"
							},
							"_id": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							},
							"extension": {
								"type": "array",
								"minItems": 0,
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							},
							"modifierExtension": {
								"type": "array",
								"minItems": 0,
								"items": {
									"$ref": "#/definitions/Extension"
								}
							},
							"species": {
								"$ref": "#/definitions/CodeableConcept"
							},
							"breed": {
								"$ref": "#/definitions/CodeableConcept"
							},
							"genderStatus": {
								"$ref": "#/definitions/CodeableConcept"
							}
						}
					},
					"communication": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"language": {
									"$ref": "#/definitions/CodeableConcept"
								},
								"preferred": {
									"type": "boolean"
								},
								"_preferred": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								}
							}
						}
					},
					"careProvider": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Reference"
						}
					},
					"managingOrganization": {
						"$ref": "#/definitions/Reference"
					},
					"link": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"other": {
									"$ref": "#/definitions/Reference"
								},
								"type": {
									"$ref": "#/definitions/code"
								},
								"_type": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								}
							}
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"PaymentNotice": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"identifier": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Identifier"
						}
					},
					"ruleset": {
						"$ref": "#/definitions/Coding"
					},
					"originalRuleset": {
						"$ref": "#/definitions/Coding"
					},
					"created": {
						"$ref": "#/definitions/dateTime"
					},
					"_created": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"target": {
						"$ref": "#/definitions/Reference"
					},
					"provider": {
						"$ref": "#/definitions/Reference"
					},
					"organization": {
						"$ref": "#/definitions/Reference"
					},
					"request": {
						"$ref": "#/definitions/Reference"
					},
					"response": {
						"$ref": "#/definitions/Reference"
					},
					"paymentStatus": {
						"$ref": "#/definitions/Coding"
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"PaymentReconciliation": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"identifier": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Identifier"
						}
					},
					"request": {
						"$ref": "#/definitions/Reference"
					},
					"outcome": {
						"$ref": "#/definitions/code"
					},
					"_outcome": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"disposition": {
						"type": "string"
					},
					"_disposition": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"ruleset": {
						"$ref": "#/definitions/Coding"
					},
					"originalRuleset": {
						"$ref": "#/definitions/Coding"
					},
					"created": {
						"$ref": "#/definitions/dateTime"
					},
					"_created": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"period": {
						"$ref": "#/definitions/Period"
					},
					"organization": {
						"$ref": "#/definitions/Reference"
					},
					"requestProvider": {
						"$ref": "#/definitions/Reference"
					},
					"requestOrganization": {
						"$ref": "#/definitions/Reference"
					},
					"detail": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"type": {
									"$ref": "#/definitions/Coding"
								},
								"request": {
									"$ref": "#/definitions/Reference"
								},
								"responce": {
									"$ref": "#/definitions/Reference"
								},
								"submitter": {
									"$ref": "#/definitions/Reference"
								},
								"payee": {
									"$ref": "#/definitions/Reference"
								},
								"date": {
									"$ref": "#/definitions/date"
								},
								"_date": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"amount": {
									"$ref": "#/definitions/Quantity"
								}
							}
						}
					},
					"form": {
						"$ref": "#/definitions/Coding"
					},
					"total": {
						"$ref": "#/definitions/Quantity"
					},
					"note": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"type": {
									"$ref": "#/definitions/Coding"
								},
								"text": {
									"type": "string"
								},
								"_text": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								}
							}
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"Person": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"identifier": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Identifier"
						}
					},
					"name": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/HumanName"
						}
					},
					"telecom": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/ContactPoint"
						}
					},
					"gender": {
						"$ref": "#/definitions/code"
					},
					"_gender": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"birthDate": {
						"$ref": "#/definitions/date"
					},
					"_birthDate": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"address": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Address"
						}
					},
					"photo": {
						"$ref": "#/definitions/Attachment"
					},
					"managingOrganization": {
						"$ref": "#/definitions/Reference"
					},
					"active": {
						"type": "boolean"
					},
					"_active": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"link": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"target": {
									"$ref": "#/definitions/Reference"
								},
								"assurance": {
									"$ref": "#/definitions/code"
								},
								"_assurance": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								}
							}
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"Practitioner": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"identifier": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Identifier"
						}
					},
					"active": {
						"type": "boolean"
					},
					"_active": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"name": {
						"$ref": "#/definitions/HumanName"
					},
					"telecom": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/ContactPoint"
						}
					},
					"address": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Address"
						}
					},
					"gender": {
						"$ref": "#/definitions/code"
					},
					"_gender": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"birthDate": {
						"$ref": "#/definitions/date"
					},
					"_birthDate": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"photo": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Attachment"
						}
					},
					"practitionerRole": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"managingOrganization": {
									"$ref": "#/definitions/Reference"
								},
								"role": {
									"$ref": "#/definitions/CodeableConcept"
								},
								"specialty": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/CodeableConcept"
									}
								},
								"period": {
									"$ref": "#/definitions/Period"
								},
								"location": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Reference"
									}
								},
								"healthcareService": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Reference"
									}
								}
							}
						}
					},
					"qualification": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"identifier": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Identifier"
									}
								},
								"code": {
									"$ref": "#/definitions/CodeableConcept"
								},
								"period": {
									"$ref": "#/definitions/Period"
								},
								"issuer": {
									"$ref": "#/definitions/Reference"
								}
							}
						}
					},
					"communication": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/CodeableConcept"
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"Procedure": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"identifier": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Identifier"
						}
					},
					"subject": {
						"$ref": "#/definitions/Reference"
					},
					"status": {
						"$ref": "#/definitions/code"
					},
					"_status": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"category": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"code": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"notPerformed": {
						"type": "boolean"
					},
					"_notPerformed": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"reasonNotPerformed": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/CodeableConcept"
						}
					},
					"bodySite": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/CodeableConcept"
						}
					},
					"reasonCodeableConcept": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"reasonReference": {
						"$ref": "#/definitions/Reference"
					},
					"performer": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"actor": {
									"$ref": "#/definitions/Reference"
								},
								"role": {
									"$ref": "#/definitions/CodeableConcept"
								}
							}
						}
					},
					"performedDateTime": {
						"$ref": "#/definitions/dateTime"
					},
					"_performedDateTime": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"performedPeriod": {
						"$ref": "#/definitions/Period"
					},
					"encounter": {
						"$ref": "#/definitions/Reference"
					},
					"location": {
						"$ref": "#/definitions/Reference"
					},
					"outcome": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"report": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Reference"
						}
					},
					"complication": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/CodeableConcept"
						}
					},
					"followUp": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/CodeableConcept"
						}
					},
					"request": {
						"$ref": "#/definitions/Reference"
					},
					"notes": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Annotation"
						}
					},
					"focalDevice": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"action": {
									"$ref": "#/definitions/CodeableConcept"
								},
								"manipulated": {
									"$ref": "#/definitions/Reference"
								}
							}
						}
					},
					"used": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Reference"
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"ProcedureRequest": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"identifier": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Identifier"
						}
					},
					"subject": {
						"$ref": "#/definitions/Reference"
					},
					"code": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"bodySite": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/CodeableConcept"
						}
					},
					"reasonCodeableConcept": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"reasonReference": {
						"$ref": "#/definitions/Reference"
					},
					"scheduledDateTime": {
						"$ref": "#/definitions/dateTime"
					},
					"_scheduledDateTime": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"scheduledPeriod": {
						"$ref": "#/definitions/Period"
					},
					"scheduledTiming": {
						"$ref": "#/definitions/Timing"
					},
					"encounter": {
						"$ref": "#/definitions/Reference"
					},
					"performer": {
						"$ref": "#/definitions/Reference"
					},
					"status": {
						"$ref": "#/definitions/code"
					},
					"_status": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"notes": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Annotation"
						}
					},
					"asNeededBoolean": {
						"type": "boolean"
					},
					"_asNeededBoolean": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"asNeededCodeableConcept": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"orderedOn": {
						"$ref": "#/definitions/dateTime"
					},
					"_orderedOn": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"orderer": {
						"$ref": "#/definitions/Reference"
					},
					"priority": {
						"$ref": "#/definitions/code"
					},
					"_priority": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"ProcessRequest": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"action": {
						"$ref": "#/definitions/code"
					},
					"_action": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"identifier": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Identifier"
						}
					},
					"ruleset": {
						"$ref": "#/definitions/Coding"
					},
					"originalRuleset": {
						"$ref": "#/definitions/Coding"
					},
					"created": {
						"$ref": "#/definitions/dateTime"
					},
					"_created": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"target": {
						"$ref": "#/definitions/Reference"
					},
					"provider": {
						"$ref": "#/definitions/Reference"
					},
					"organization": {
						"$ref": "#/definitions/Reference"
					},
					"request": {
						"$ref": "#/definitions/Reference"
					},
					"response": {
						"$ref": "#/definitions/Reference"
					},
					"nullify": {
						"type": "boolean"
					},
					"_nullify": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"reference": {
						"type": "string"
					},
					"_reference": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"item": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"sequenceLinkId": {
									"type": "integer"
								},
								"_sequenceLinkId": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								}
							}
						}
					},
					"include": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"type": "string"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"_include": {
						"type": "array",
						"items": {
							"oneOf": [
								{
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								{
									"type": "null"
								}
							]
						}
					},
					"exclude": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"type": "string"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"_exclude": {
						"type": "array",
						"items": {
							"oneOf": [
								{
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								{
									"type": "null"
								}
							]
						}
					},
					"period": {
						"$ref": "#/definitions/Period"
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"ProcessResponse": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"identifier": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Identifier"
						}
					},
					"request": {
						"$ref": "#/definitions/Reference"
					},
					"outcome": {
						"$ref": "#/definitions/Coding"
					},
					"disposition": {
						"type": "string"
					},
					"_disposition": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"ruleset": {
						"$ref": "#/definitions/Coding"
					},
					"originalRuleset": {
						"$ref": "#/definitions/Coding"
					},
					"created": {
						"$ref": "#/definitions/dateTime"
					},
					"_created": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"organization": {
						"$ref": "#/definitions/Reference"
					},
					"requestProvider": {
						"$ref": "#/definitions/Reference"
					},
					"requestOrganization": {
						"$ref": "#/definitions/Reference"
					},
					"form": {
						"$ref": "#/definitions/Coding"
					},
					"notes": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"type": {
									"$ref": "#/definitions/Coding"
								},
								"text": {
									"type": "string"
								},
								"_text": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								}
							}
						}
					},
					"error": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Coding"
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"Provenance": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"target": {
						"type": "array",
						"minItems": 1,
						"items": {
							"$ref": "#/definitions/Reference"
						}
					},
					"period": {
						"$ref": "#/definitions/Period"
					},
					"recorded": {
						"$ref": "#/definitions/instant"
					},
					"_recorded": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"reason": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/CodeableConcept"
						}
					},
					"activity": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"location": {
						"$ref": "#/definitions/Reference"
					},
					"policy": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/uri"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"_policy": {
						"type": "array",
						"items": {
							"oneOf": [
								{
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								{
									"type": "null"
								}
							]
						}
					},
					"agent": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"role": {
									"$ref": "#/definitions/Coding"
								},
								"actor": {
									"$ref": "#/definitions/Reference"
								},
								"userId": {
									"$ref": "#/definitions/Identifier"
								},
								"relatedAgent": {
									"type": "array",
									"minItems": 0,
									"items": {
										"type": "object",
										"properties": {
											"id": {
												"$ref": "#/definitions/fhir_id"
											},
											"_id": {
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											},
											"extension": {
												"type": "array",
												"minItems": 0,
												"items": {
													"oneOf": [
														{
															"$ref": "#/definitions/Extension"
														},
														{
															"type": "null"
														}
													]
												}
											},
											"modifierExtension": {
												"type": "array",
												"minItems": 0,
												"items": {
													"$ref": "#/definitions/Extension"
												}
											},
											"type": {
												"$ref": "#/definitions/CodeableConcept"
											},
											"target": {
												"$ref": "#/definitions/uri"
											},
											"_target": {
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											}
										}
									}
								}
							}
						}
					},
					"entity": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"role": {
									"$ref": "#/definitions/code"
								},
								"_role": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"type": {
									"$ref": "#/definitions/Coding"
								},
								"reference": {
									"$ref": "#/definitions/uri"
								},
								"_reference": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"display": {
									"type": "string"
								},
								"_display": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"agent": {
									"type": "object",
									"additionalProperties": false,
									"properties": {
										"fhir_comments": {
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								}
							}
						}
					},
					"signature": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Signature"
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"Questionnaire": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"identifier": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Identifier"
						}
					},
					"version": {
						"type": "string"
					},
					"_version": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"status": {
						"$ref": "#/definitions/code"
					},
					"_status": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"date": {
						"$ref": "#/definitions/dateTime"
					},
					"_date": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"publisher": {
						"type": "string"
					},
					"_publisher": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"telecom": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/ContactPoint"
						}
					},
					"title": {
						"type": "string"
					},
					"_title": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"concept": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Coding"
						}
					},
					"subjectType": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/code"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"_subjectType": {
						"type": "array",
						"items": {
							"oneOf": [
								{
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								{
									"type": "null"
								}
							]
						}
					},
					"item": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"linkId": {
									"type": "string"
								},
								"_linkId": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"concept": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Coding"
									}
								},
								"text": {
									"type": "string"
								},
								"_text": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"type": {
									"$ref": "#/definitions/code"
								},
								"_type": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"required": {
									"type": "boolean"
								},
								"_required": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"repeats": {
									"type": "boolean"
								},
								"_repeats": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"options": {
									"$ref": "#/definitions/Reference"
								},
								"option": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Coding"
									}
								},
								"item": {
									"type": "array",
									"minItems": 0,
									"items": {
										"type": "object"
									}
								}
							}
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"QuestionnaireResponse": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"identifier": {
						"$ref": "#/definitions/Identifier"
					},
					"questionnaire": {
						"$ref": "#/definitions/Reference"
					},
					"status": {
						"$ref": "#/definitions/code"
					},
					"_status": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"subject": {
						"$ref": "#/definitions/Reference"
					},
					"author": {
						"$ref": "#/definitions/Reference"
					},
					"authored": {
						"$ref": "#/definitions/dateTime"
					},
					"_authored": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"source": {
						"$ref": "#/definitions/Reference"
					},
					"encounter": {
						"$ref": "#/definitions/Reference"
					},
					"item": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"linkId": {
									"type": "string"
								},
								"_linkId": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"text": {
									"type": "string"
								},
								"_text": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"subject": {
									"$ref": "#/definitions/Reference"
								},
								"answer": {
									"type": "array",
									"minItems": 0,
									"items": {
										"type": "object",
										"properties": {
											"id": {
												"$ref": "#/definitions/fhir_id"
											},
											"_id": {
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											},
											"extension": {
												"type": "array",
												"minItems": 0,
												"items": {
													"oneOf": [
														{
															"$ref": "#/definitions/Extension"
														},
														{
															"type": "null"
														}
													]
												}
											},
											"modifierExtension": {
												"type": "array",
												"minItems": 0,
												"items": {
													"$ref": "#/definitions/Extension"
												}
											},
											"valueBoolean": {
												"type": "boolean"
											},
											"_valueBoolean": {
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											},
											"valueDecimal": {
												"$ref": "#/definitions/decimal"
											},
											"_valueDecimal": {
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											},
											"valueInteger": {
												"type": "integer"
											},
											"_valueInteger": {
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											},
											"valueDate": {
												"$ref": "#/definitions/date"
											},
											"_valueDate": {
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											},
											"valueDateTime": {
												"$ref": "#/definitions/dateTime"
											},
											"_valueDateTime": {
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											},
											"valueInstant": {
												"$ref": "#/definitions/instant"
											},
											"_valueInstant": {
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											},
											"valueTime": {
												"$ref": "#/definitions/time"
											},
											"_valueTime": {
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											},
											"valueString": {
												"type": "string"
											},
											"_valueString": {
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											},
											"valueUri": {
												"$ref": "#/definitions/uri"
											},
											"_valueUri": {
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											},
											"valueAttachment": {
												"$ref": "#/definitions/Attachment"
											},
											"valueCoding": {
												"$ref": "#/definitions/Coding"
											},
											"valueQuantity": {
												"$ref": "#/definitions/Quantity"
											},
											"valueReference": {
												"$ref": "#/definitions/Reference"
											},
											"item": {
												"type": "array",
												"minItems": 0,
												"items": {
													"type": "object"
												}
											}
										}
									}
								},
								"item": {
									"type": "array",
									"minItems": 0,
									"items": {
										"type": "object"
									}
								}
							}
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"ReferralRequest": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"status": {
						"$ref": "#/definitions/code"
					},
					"_status": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"identifier": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Identifier"
						}
					},
					"date": {
						"$ref": "#/definitions/dateTime"
					},
					"_date": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"type": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"specialty": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"priority": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"patient": {
						"$ref": "#/definitions/Reference"
					},
					"requester": {
						"$ref": "#/definitions/Reference"
					},
					"recipient": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Reference"
						}
					},
					"encounter": {
						"$ref": "#/definitions/Reference"
					},
					"dateSent": {
						"$ref": "#/definitions/dateTime"
					},
					"_dateSent": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"reason": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"description": {
						"type": "string"
					},
					"_description": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"serviceRequested": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/CodeableConcept"
						}
					},
					"supportingInformation": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Reference"
						}
					},
					"fulfillmentTime": {
						"$ref": "#/definitions/Period"
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"RelatedPerson": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"identifier": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Identifier"
						}
					},
					"patient": {
						"$ref": "#/definitions/Reference"
					},
					"relationship": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"name": {
						"$ref": "#/definitions/HumanName"
					},
					"telecom": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/ContactPoint"
						}
					},
					"gender": {
						"$ref": "#/definitions/code"
					},
					"_gender": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"birthDate": {
						"$ref": "#/definitions/date"
					},
					"_birthDate": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"address": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Address"
						}
					},
					"photo": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Attachment"
						}
					},
					"period": {
						"$ref": "#/definitions/Period"
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"RiskAssessment": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"subject": {
						"$ref": "#/definitions/Reference"
					},
					"date": {
						"$ref": "#/definitions/dateTime"
					},
					"_date": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"condition": {
						"$ref": "#/definitions/Reference"
					},
					"encounter": {
						"$ref": "#/definitions/Reference"
					},
					"performer": {
						"$ref": "#/definitions/Reference"
					},
					"identifier": {
						"$ref": "#/definitions/Identifier"
					},
					"method": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"basis": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Reference"
						}
					},
					"prediction": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"outcome": {
									"$ref": "#/definitions/CodeableConcept"
								},
								"probabilityDecimal": {
									"$ref": "#/definitions/decimal"
								},
								"_probabilityDecimal": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"probabilityRange": {
									"$ref": "#/definitions/Range"
								},
								"probabilityCodeableConcept": {
									"$ref": "#/definitions/CodeableConcept"
								},
								"relativeRisk": {
									"$ref": "#/definitions/decimal"
								},
								"_relativeRisk": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"whenPeriod": {
									"$ref": "#/definitions/Period"
								},
								"whenRange": {
									"$ref": "#/definitions/Range"
								},
								"rationale": {
									"type": "string"
								},
								"_rationale": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								}
							}
						}
					},
					"mitigation": {
						"type": "string"
					},
					"_mitigation": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"Schedule": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"identifier": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Identifier"
						}
					},
					"type": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/CodeableConcept"
						}
					},
					"actor": {
						"$ref": "#/definitions/Reference"
					},
					"planningHorizon": {
						"$ref": "#/definitions/Period"
					},
					"comment": {
						"type": "string"
					},
					"_comment": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"SearchParameter": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"url": {
						"$ref": "#/definitions/uri"
					},
					"_url": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"name": {
						"type": "string"
					},
					"_name": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"status": {
						"$ref": "#/definitions/code"
					},
					"_status": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"experimental": {
						"type": "boolean"
					},
					"_experimental": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"publisher": {
						"type": "string"
					},
					"_publisher": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"contact": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"name": {
									"type": "string"
								},
								"_name": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"telecom": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/ContactPoint"
									}
								}
							}
						}
					},
					"date": {
						"$ref": "#/definitions/dateTime"
					},
					"_date": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"requirements": {
						"type": "string"
					},
					"_requirements": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"code": {
						"$ref": "#/definitions/code"
					},
					"_code": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"base": {
						"$ref": "#/definitions/code"
					},
					"_base": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"type": {
						"$ref": "#/definitions/code"
					},
					"_type": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"description": {
						"type": "string"
					},
					"_description": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"xpath": {
						"type": "string"
					},
					"_xpath": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"xpathUsage": {
						"$ref": "#/definitions/code"
					},
					"_xpathUsage": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"target": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/code"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"_target": {
						"type": "array",
						"items": {
							"oneOf": [
								{
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								{
									"type": "null"
								}
							]
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"Slot": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"identifier": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Identifier"
						}
					},
					"type": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"schedule": {
						"$ref": "#/definitions/Reference"
					},
					"freeBusyType": {
						"$ref": "#/definitions/code"
					},
					"_freeBusyType": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"start": {
						"$ref": "#/definitions/instant"
					},
					"_start": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"end": {
						"$ref": "#/definitions/instant"
					},
					"_end": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"overbooked": {
						"type": "boolean"
					},
					"_overbooked": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"comment": {
						"type": "string"
					},
					"_comment": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"Specimen": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"identifier": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Identifier"
						}
					},
					"status": {
						"$ref": "#/definitions/code"
					},
					"_status": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"type": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"parent": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Reference"
						}
					},
					"subject": {
						"$ref": "#/definitions/Reference"
					},
					"accessionIdentifier": {
						"$ref": "#/definitions/Identifier"
					},
					"receivedTime": {
						"$ref": "#/definitions/dateTime"
					},
					"_receivedTime": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"collection": {
						"type": "object",
						"additionalProperties": false,
						"properties": {
							"fhir_comments": {
								"type": "array",
								"items": {
									"type": "string"
								}
							},
							"id": {
								"$ref": "#/definitions/fhir_id"
							},
							"_id": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							},
							"extension": {
								"type": "array",
								"minItems": 0,
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							},
							"modifierExtension": {
								"type": "array",
								"minItems": 0,
								"items": {
									"$ref": "#/definitions/Extension"
								}
							},
							"collector": {
								"$ref": "#/definitions/Reference"
							},
							"comment": {
								"type": "array",
								"minItems": 0,
								"items": {
									"oneOf": [
										{
											"type": "string"
										},
										{
											"type": "null"
										}
									]
								}
							},
							"_comment": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"type": "object",
											"properties": {
												"extension": {
													"type": "array",
													"items": {
														"oneOf": [
															{
																"$ref": "#/definitions/Extension"
															},
															{
																"type": "null"
															}
														]
													}
												}
											}
										},
										{
											"type": "null"
										}
									]
								}
							},
							"collectedDateTime": {
								"$ref": "#/definitions/dateTime"
							},
							"_collectedDateTime": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							},
							"collectedPeriod": {
								"$ref": "#/definitions/Period"
							},
							"quantity": {
								"$ref": "#/definitions/Quantity"
							},
							"method": {
								"$ref": "#/definitions/CodeableConcept"
							},
							"bodySite": {
								"$ref": "#/definitions/CodeableConcept"
							}
						}
					},
					"treatment": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"description": {
									"type": "string"
								},
								"_description": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"procedure": {
									"$ref": "#/definitions/CodeableConcept"
								},
								"additive": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Reference"
									}
								}
							}
						}
					},
					"container": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"identifier": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Identifier"
									}
								},
								"description": {
									"type": "string"
								},
								"_description": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"type": {
									"$ref": "#/definitions/CodeableConcept"
								},
								"capacity": {
									"$ref": "#/definitions/Quantity"
								},
								"specimenQuantity": {
									"$ref": "#/definitions/Quantity"
								},
								"additiveCodeableConcept": {
									"$ref": "#/definitions/CodeableConcept"
								},
								"additiveReference": {
									"$ref": "#/definitions/Reference"
								}
							}
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"StructureDefinition": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"url": {
						"$ref": "#/definitions/uri"
					},
					"_url": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"identifier": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Identifier"
						}
					},
					"version": {
						"type": "string"
					},
					"_version": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"name": {
						"type": "string"
					},
					"_name": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"display": {
						"type": "string"
					},
					"_display": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"status": {
						"$ref": "#/definitions/code"
					},
					"_status": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"experimental": {
						"type": "boolean"
					},
					"_experimental": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"publisher": {
						"type": "string"
					},
					"_publisher": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"contact": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"name": {
									"type": "string"
								},
								"_name": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"telecom": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/ContactPoint"
									}
								}
							}
						}
					},
					"date": {
						"$ref": "#/definitions/dateTime"
					},
					"_date": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"description": {
						"type": "string"
					},
					"_description": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"useContext": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/CodeableConcept"
						}
					},
					"requirements": {
						"type": "string"
					},
					"_requirements": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"copyright": {
						"type": "string"
					},
					"_copyright": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"code": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Coding"
						}
					},
					"fhirVersion": {
						"$ref": "#/definitions/fhir_id"
					},
					"_fhirVersion": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"mapping": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"identity": {
									"$ref": "#/definitions/fhir_id"
								},
								"_identity": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"uri": {
									"$ref": "#/definitions/uri"
								},
								"_uri": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"name": {
									"type": "string"
								},
								"_name": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"comments": {
									"type": "string"
								},
								"_comments": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								}
							}
						}
					},
					"kind": {
						"$ref": "#/definitions/code"
					},
					"_kind": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"constrainedType": {
						"$ref": "#/definitions/code"
					},
					"_constrainedType": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"abstract": {
						"type": "boolean"
					},
					"_abstract": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"contextType": {
						"$ref": "#/definitions/code"
					},
					"_contextType": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"context": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"type": "string"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"_context": {
						"type": "array",
						"items": {
							"oneOf": [
								{
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								{
									"type": "null"
								}
							]
						}
					},
					"base": {
						"$ref": "#/definitions/uri"
					},
					"_base": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"snapshot": {
						"type": "object",
						"additionalProperties": false,
						"properties": {
							"fhir_comments": {
								"type": "array",
								"items": {
									"type": "string"
								}
							},
							"id": {
								"$ref": "#/definitions/fhir_id"
							},
							"_id": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							},
							"extension": {
								"type": "array",
								"minItems": 0,
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							},
							"modifierExtension": {
								"type": "array",
								"minItems": 0,
								"items": {
									"$ref": "#/definitions/Extension"
								}
							},
							"element": {
								"type": "array",
								"minItems": 1,
								"items": {
									"$ref": "#/definitions/ElementDefinition"
								}
							}
						}
					},
					"differential": {
						"type": "object",
						"additionalProperties": false,
						"properties": {
							"fhir_comments": {
								"type": "array",
								"items": {
									"type": "string"
								}
							},
							"id": {
								"$ref": "#/definitions/fhir_id"
							},
							"_id": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							},
							"extension": {
								"type": "array",
								"minItems": 0,
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							},
							"modifierExtension": {
								"type": "array",
								"minItems": 0,
								"items": {
									"$ref": "#/definitions/Extension"
								}
							},
							"element": {
								"type": "array",
								"minItems": 1,
								"items": {
									"$ref": "#/definitions/ElementDefinition"
								}
							}
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"Subscription": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"criteria": {
						"type": "string"
					},
					"_criteria": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"contact": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/ContactPoint"
						}
					},
					"reason": {
						"type": "string"
					},
					"_reason": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"status": {
						"$ref": "#/definitions/code"
					},
					"_status": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"error": {
						"type": "string"
					},
					"_error": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"channel": {
						"type": "object",
						"additionalProperties": false,
						"properties": {
							"fhir_comments": {
								"type": "array",
								"items": {
									"type": "string"
								}
							},
							"id": {
								"$ref": "#/definitions/fhir_id"
							},
							"_id": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							},
							"extension": {
								"type": "array",
								"minItems": 0,
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							},
							"modifierExtension": {
								"type": "array",
								"minItems": 0,
								"items": {
									"$ref": "#/definitions/Extension"
								}
							},
							"type": {
								"$ref": "#/definitions/code"
							},
							"_type": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							},
							"endpoint": {
								"$ref": "#/definitions/uri"
							},
							"_endpoint": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							},
							"payload": {
								"type": "string"
							},
							"_payload": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							},
							"header": {
								"type": "string"
							},
							"_header": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							}
						}
					},
					"end": {
						"$ref": "#/definitions/instant"
					},
					"_end": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"tag": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Coding"
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"Substance": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"identifier": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Identifier"
						}
					},
					"category": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/CodeableConcept"
						}
					},
					"code": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"description": {
						"type": "string"
					},
					"_description": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"instance": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"identifier": {
									"$ref": "#/definitions/Identifier"
								},
								"expiry": {
									"$ref": "#/definitions/dateTime"
								},
								"_expiry": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"quantity": {
									"$ref": "#/definitions/Quantity"
								}
							}
						}
					},
					"ingredient": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"quantity": {
									"$ref": "#/definitions/Ratio"
								},
								"substance": {
									"$ref": "#/definitions/Reference"
								}
							}
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"SupplyDelivery": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"identifier": {
						"$ref": "#/definitions/Identifier"
					},
					"status": {
						"$ref": "#/definitions/code"
					},
					"_status": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"patient": {
						"$ref": "#/definitions/Reference"
					},
					"type": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"quantity": {
						"$ref": "#/definitions/Quantity"
					},
					"suppliedItem": {
						"$ref": "#/definitions/Reference"
					},
					"supplier": {
						"$ref": "#/definitions/Reference"
					},
					"whenPrepared": {
						"$ref": "#/definitions/Period"
					},
					"time": {
						"$ref": "#/definitions/dateTime"
					},
					"_time": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"destination": {
						"$ref": "#/definitions/Reference"
					},
					"receiver": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Reference"
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"SupplyRequest": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"patient": {
						"$ref": "#/definitions/Reference"
					},
					"source": {
						"$ref": "#/definitions/Reference"
					},
					"date": {
						"$ref": "#/definitions/dateTime"
					},
					"_date": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"identifier": {
						"$ref": "#/definitions/Identifier"
					},
					"status": {
						"$ref": "#/definitions/code"
					},
					"_status": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"kind": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"orderedItem": {
						"$ref": "#/definitions/Reference"
					},
					"supplier": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Reference"
						}
					},
					"reasonCodeableConcept": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"reasonReference": {
						"$ref": "#/definitions/Reference"
					},
					"when": {
						"type": "object",
						"additionalProperties": false,
						"properties": {
							"fhir_comments": {
								"type": "array",
								"items": {
									"type": "string"
								}
							},
							"id": {
								"$ref": "#/definitions/fhir_id"
							},
							"_id": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							},
							"extension": {
								"type": "array",
								"minItems": 0,
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							},
							"modifierExtension": {
								"type": "array",
								"minItems": 0,
								"items": {
									"$ref": "#/definitions/Extension"
								}
							},
							"code": {
								"$ref": "#/definitions/CodeableConcept"
							},
							"schedule": {
								"$ref": "#/definitions/Timing"
							}
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"TestScript": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"url": {
						"$ref": "#/definitions/uri"
					},
					"_url": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"version": {
						"type": "string"
					},
					"_version": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"name": {
						"type": "string"
					},
					"_name": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"status": {
						"$ref": "#/definitions/code"
					},
					"_status": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"identifier": {
						"$ref": "#/definitions/Identifier"
					},
					"experimental": {
						"type": "boolean"
					},
					"_experimental": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"publisher": {
						"type": "string"
					},
					"_publisher": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"contact": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"name": {
									"type": "string"
								},
								"_name": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"telecom": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/ContactPoint"
									}
								}
							}
						}
					},
					"date": {
						"$ref": "#/definitions/dateTime"
					},
					"_date": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"description": {
						"type": "string"
					},
					"_description": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"useContext": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/CodeableConcept"
						}
					},
					"requirements": {
						"type": "string"
					},
					"_requirements": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"copyright": {
						"type": "string"
					},
					"_copyright": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"metadata": {
						"type": "object",
						"additionalProperties": false,
						"properties": {
							"fhir_comments": {
								"type": "array",
								"items": {
									"type": "string"
								}
							},
							"id": {
								"$ref": "#/definitions/fhir_id"
							},
							"_id": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							},
							"extension": {
								"type": "array",
								"minItems": 0,
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							},
							"modifierExtension": {
								"type": "array",
								"minItems": 0,
								"items": {
									"$ref": "#/definitions/Extension"
								}
							},
							"link": {
								"type": "array",
								"minItems": 0,
								"items": {
									"type": "object",
									"properties": {
										"id": {
											"$ref": "#/definitions/fhir_id"
										},
										"_id": {
											"type": "object",
											"properties": {
												"extension": {
													"type": "array",
													"items": {
														"oneOf": [
															{
																"$ref": "#/definitions/Extension"
															},
															{
																"type": "null"
															}
														]
													}
												}
											}
										},
										"extension": {
											"type": "array",
											"minItems": 0,
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										},
										"modifierExtension": {
											"type": "array",
											"minItems": 0,
											"items": {
												"$ref": "#/definitions/Extension"
											}
										},
										"url": {
											"$ref": "#/definitions/uri"
										},
										"_url": {
											"type": "object",
											"properties": {
												"extension": {
													"type": "array",
													"items": {
														"oneOf": [
															{
																"$ref": "#/definitions/Extension"
															},
															{
																"type": "null"
															}
														]
													}
												}
											}
										},
										"description": {
											"type": "string"
										},
										"_description": {
											"type": "object",
											"properties": {
												"extension": {
													"type": "array",
													"items": {
														"oneOf": [
															{
																"$ref": "#/definitions/Extension"
															},
															{
																"type": "null"
															}
														]
													}
												}
											}
										}
									}
								}
							},
							"capability": {
								"type": "array",
								"minItems": 1,
								"items": {
									"type": "object",
									"properties": {
										"id": {
											"$ref": "#/definitions/fhir_id"
										},
										"_id": {
											"type": "object",
											"properties": {
												"extension": {
													"type": "array",
													"items": {
														"oneOf": [
															{
																"$ref": "#/definitions/Extension"
															},
															{
																"type": "null"
															}
														]
													}
												}
											}
										},
										"extension": {
											"type": "array",
											"minItems": 0,
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										},
										"modifierExtension": {
											"type": "array",
											"minItems": 0,
											"items": {
												"$ref": "#/definitions/Extension"
											}
										},
										"required": {
											"type": "boolean"
										},
										"_required": {
											"type": "object",
											"properties": {
												"extension": {
													"type": "array",
													"items": {
														"oneOf": [
															{
																"$ref": "#/definitions/Extension"
															},
															{
																"type": "null"
															}
														]
													}
												}
											}
										},
										"validated": {
											"type": "boolean"
										},
										"_validated": {
											"type": "object",
											"properties": {
												"extension": {
													"type": "array",
													"items": {
														"oneOf": [
															{
																"$ref": "#/definitions/Extension"
															},
															{
																"type": "null"
															}
														]
													}
												}
											}
										},
										"description": {
											"type": "string"
										},
										"_description": {
											"type": "object",
											"properties": {
												"extension": {
													"type": "array",
													"items": {
														"oneOf": [
															{
																"$ref": "#/definitions/Extension"
															},
															{
																"type": "null"
															}
														]
													}
												}
											}
										},
										"destination": {
											"type": "integer"
										},
										"_destination": {
											"type": "object",
											"properties": {
												"extension": {
													"type": "array",
													"items": {
														"oneOf": [
															{
																"$ref": "#/definitions/Extension"
															},
															{
																"type": "null"
															}
														]
													}
												}
											}
										},
										"link": {
											"type": "array",
											"minItems": 0,
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/uri"
													},
													{
														"type": "null"
													}
												]
											}
										},
										"_link": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"type": "object",
														"properties": {
															"extension": {
																"type": "array",
																"items": {
																	"oneOf": [
																		{
																			"$ref": "#/definitions/Extension"
																		},
																		{
																			"type": "null"
																		}
																	]
																}
															}
														}
													},
													{
														"type": "null"
													}
												]
											}
										},
										"conformance": {
											"$ref": "#/definitions/Reference"
										}
									}
								}
							}
						}
					},
					"multiserver": {
						"type": "boolean"
					},
					"_multiserver": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"fixture": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"autocreate": {
									"type": "boolean"
								},
								"_autocreate": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"autodelete": {
									"type": "boolean"
								},
								"_autodelete": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"resource": {
									"$ref": "#/definitions/Reference"
								}
							}
						}
					},
					"profile": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Reference"
						}
					},
					"variable": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"name": {
									"type": "string"
								},
								"_name": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"headerField": {
									"type": "string"
								},
								"_headerField": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"path": {
									"type": "string"
								},
								"_path": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"sourceId": {
									"$ref": "#/definitions/fhir_id"
								},
								"_sourceId": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								}
							}
						}
					},
					"setup": {
						"type": "object",
						"additionalProperties": false,
						"properties": {
							"fhir_comments": {
								"type": "array",
								"items": {
									"type": "string"
								}
							},
							"id": {
								"$ref": "#/definitions/fhir_id"
							},
							"_id": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							},
							"extension": {
								"type": "array",
								"minItems": 0,
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							},
							"modifierExtension": {
								"type": "array",
								"minItems": 0,
								"items": {
									"$ref": "#/definitions/Extension"
								}
							},
							"metadata": {
								"type": "object",
								"additionalProperties": false,
								"properties": {
									"fhir_comments": {
										"type": "array",
										"items": {
											"type": "string"
										}
									}
								}
							},
							"action": {
								"type": "array",
								"minItems": 1,
								"items": {
									"type": "object",
									"properties": {
										"id": {
											"$ref": "#/definitions/fhir_id"
										},
										"_id": {
											"type": "object",
											"properties": {
												"extension": {
													"type": "array",
													"items": {
														"oneOf": [
															{
																"$ref": "#/definitions/Extension"
															},
															{
																"type": "null"
															}
														]
													}
												}
											}
										},
										"extension": {
											"type": "array",
											"minItems": 0,
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										},
										"modifierExtension": {
											"type": "array",
											"minItems": 0,
											"items": {
												"$ref": "#/definitions/Extension"
											}
										},
										"operation": {
											"type": "object",
											"additionalProperties": false,
											"properties": {
												"fhir_comments": {
													"type": "array",
													"items": {
														"type": "string"
													}
												},
												"id": {
													"$ref": "#/definitions/fhir_id"
												},
												"_id": {
													"type": "object",
													"properties": {
														"extension": {
															"type": "array",
															"items": {
																"oneOf": [
																	{
																		"$ref": "#/definitions/Extension"
																	},
																	{
																		"type": "null"
																	}
																]
															}
														}
													}
												},
												"extension": {
													"type": "array",
													"minItems": 0,
													"items": {
														"oneOf": [
															{
																"$ref": "#/definitions/Extension"
															},
															{
																"type": "null"
															}
														]
													}
												},
												"modifierExtension": {
													"type": "array",
													"minItems": 0,
													"items": {
														"$ref": "#/definitions/Extension"
													}
												},
												"type": {
													"$ref": "#/definitions/Coding"
												},
												"resource": {
													"$ref": "#/definitions/code"
												},
												"_resource": {
													"type": "object",
													"properties": {
														"extension": {
															"type": "array",
															"items": {
																"oneOf": [
																	{
																		"$ref": "#/definitions/Extension"
																	},
																	{
																		"type": "null"
																	}
																]
															}
														}
													}
												},
												"label": {
													"type": "string"
												},
												"_label": {
													"type": "object",
													"properties": {
														"extension": {
															"type": "array",
															"items": {
																"oneOf": [
																	{
																		"$ref": "#/definitions/Extension"
																	},
																	{
																		"type": "null"
																	}
																]
															}
														}
													}
												},
												"description": {
													"type": "string"
												},
												"_description": {
													"type": "object",
													"properties": {
														"extension": {
															"type": "array",
															"items": {
																"oneOf": [
																	{
																		"$ref": "#/definitions/Extension"
																	},
																	{
																		"type": "null"
																	}
																]
															}
														}
													}
												},
												"accept": {
													"$ref": "#/definitions/code"
												},
												"_accept": {
													"type": "object",
													"properties": {
														"extension": {
															"type": "array",
															"items": {
																"oneOf": [
																	{
																		"$ref": "#/definitions/Extension"
																	},
																	{
																		"type": "null"
																	}
																]
															}
														}
													}
												},
												"contentType": {
													"$ref": "#/definitions/code"
												},
												"_contentType": {
													"type": "object",
													"properties": {
														"extension": {
															"type": "array",
															"items": {
																"oneOf": [
																	{
																		"$ref": "#/definitions/Extension"
																	},
																	{
																		"type": "null"
																	}
																]
															}
														}
													}
												},
												"destination": {
													"type": "integer"
												},
												"_destination": {
													"type": "object",
													"properties": {
														"extension": {
															"type": "array",
															"items": {
																"oneOf": [
																	{
																		"$ref": "#/definitions/Extension"
																	},
																	{
																		"type": "null"
																	}
																]
															}
														}
													}
												},
												"encodeRequestUrl": {
													"type": "boolean"
												},
												"_encodeRequestUrl": {
													"type": "object",
													"properties": {
														"extension": {
															"type": "array",
															"items": {
																"oneOf": [
																	{
																		"$ref": "#/definitions/Extension"
																	},
																	{
																		"type": "null"
																	}
																]
															}
														}
													}
												},
												"params": {
													"type": "string"
												},
												"_params": {
													"type": "object",
													"properties": {
														"extension": {
															"type": "array",
															"items": {
																"oneOf": [
																	{
																		"$ref": "#/definitions/Extension"
																	},
																	{
																		"type": "null"
																	}
																]
															}
														}
													}
												},
												"requestHeader": {
													"type": "array",
													"minItems": 0,
													"items": {
														"type": "object",
														"properties": {
															"id": {
																"$ref": "#/definitions/fhir_id"
															},
															"_id": {
																"type": "object",
																"properties": {
																	"extension": {
																		"type": "array",
																		"items": {
																			"oneOf": [
																				{
																					"$ref": "#/definitions/Extension"
																				},
																				{
																					"type": "null"
																				}
																			]
																		}
																	}
																}
															},
															"extension": {
																"type": "array",
																"minItems": 0,
																"items": {
																	"oneOf": [
																		{
																			"$ref": "#/definitions/Extension"
																		},
																		{
																			"type": "null"
																		}
																	]
																}
															},
															"modifierExtension": {
																"type": "array",
																"minItems": 0,
																"items": {
																	"$ref": "#/definitions/Extension"
																}
															},
															"field": {
																"type": "string"
															},
															"_field": {
																"type": "object",
																"properties": {
																	"extension": {
																		"type": "array",
																		"items": {
																			"oneOf": [
																				{
																					"$ref": "#/definitions/Extension"
																				},
																				{
																					"type": "null"
																				}
																			]
																		}
																	}
																}
															},
															"value": {
																"type": "string"
															},
															"_value": {
																"type": "object",
																"properties": {
																	"extension": {
																		"type": "array",
																		"items": {
																			"oneOf": [
																				{
																					"$ref": "#/definitions/Extension"
																				},
																				{
																					"type": "null"
																				}
																			]
																		}
																	}
																}
															}
														}
													}
												},
												"responseId": {
													"$ref": "#/definitions/fhir_id"
												},
												"_responseId": {
													"type": "object",
													"properties": {
														"extension": {
															"type": "array",
															"items": {
																"oneOf": [
																	{
																		"$ref": "#/definitions/Extension"
																	},
																	{
																		"type": "null"
																	}
																]
															}
														}
													}
												},
												"sourceId": {
													"$ref": "#/definitions/fhir_id"
												},
												"_sourceId": {
													"type": "object",
													"properties": {
														"extension": {
															"type": "array",
															"items": {
																"oneOf": [
																	{
																		"$ref": "#/definitions/Extension"
																	},
																	{
																		"type": "null"
																	}
																]
															}
														}
													}
												},
												"targetId": {
													"$ref": "#/definitions/fhir_id"
												},
												"_targetId": {
													"type": "object",
													"properties": {
														"extension": {
															"type": "array",
															"items": {
																"oneOf": [
																	{
																		"$ref": "#/definitions/Extension"
																	},
																	{
																		"type": "null"
																	}
																]
															}
														}
													}
												},
												"url": {
													"type": "string"
												},
												"_url": {
													"type": "object",
													"properties": {
														"extension": {
															"type": "array",
															"items": {
																"oneOf": [
																	{
																		"$ref": "#/definitions/Extension"
																	},
																	{
																		"type": "null"
																	}
																]
															}
														}
													}
												}
											}
										},
										"assert": {
											"type": "object",
											"additionalProperties": false,
											"properties": {
												"fhir_comments": {
													"type": "array",
													"items": {
														"type": "string"
													}
												},
												"id": {
													"$ref": "#/definitions/fhir_id"
												},
												"_id": {
													"type": "object",
													"properties": {
														"extension": {
															"type": "array",
															"items": {
																"oneOf": [
																	{
																		"$ref": "#/definitions/Extension"
																	},
																	{
																		"type": "null"
																	}
																]
															}
														}
													}
												},
												"extension": {
													"type": "array",
													"minItems": 0,
													"items": {
														"oneOf": [
															{
																"$ref": "#/definitions/Extension"
															},
															{
																"type": "null"
															}
														]
													}
												},
												"modifierExtension": {
													"type": "array",
													"minItems": 0,
													"items": {
														"$ref": "#/definitions/Extension"
													}
												},
												"label": {
													"type": "string"
												},
												"_label": {
													"type": "object",
													"properties": {
														"extension": {
															"type": "array",
															"items": {
																"oneOf": [
																	{
																		"$ref": "#/definitions/Extension"
																	},
																	{
																		"type": "null"
																	}
																]
															}
														}
													}
												},
												"description": {
													"type": "string"
												},
												"_description": {
													"type": "object",
													"properties": {
														"extension": {
															"type": "array",
															"items": {
																"oneOf": [
																	{
																		"$ref": "#/definitions/Extension"
																	},
																	{
																		"type": "null"
																	}
																]
															}
														}
													}
												},
												"direction": {
													"$ref": "#/definitions/code"
												},
												"_direction": {
													"type": "object",
													"properties": {
														"extension": {
															"type": "array",
															"items": {
																"oneOf": [
																	{
																		"$ref": "#/definitions/Extension"
																	},
																	{
																		"type": "null"
																	}
																]
															}
														}
													}
												},
												"compareToSourceId": {
													"type": "string"
												},
												"_compareToSourceId": {
													"type": "object",
													"properties": {
														"extension": {
															"type": "array",
															"items": {
																"oneOf": [
																	{
																		"$ref": "#/definitions/Extension"
																	},
																	{
																		"type": "null"
																	}
																]
															}
														}
													}
												},
												"compareToSourcePath": {
													"type": "string"
												},
												"_compareToSourcePath": {
													"type": "object",
													"properties": {
														"extension": {
															"type": "array",
															"items": {
																"oneOf": [
																	{
																		"$ref": "#/definitions/Extension"
																	},
																	{
																		"type": "null"
																	}
																]
															}
														}
													}
												},
												"contentType": {
													"$ref": "#/definitions/code"
												},
												"_contentType": {
													"type": "object",
													"properties": {
														"extension": {
															"type": "array",
															"items": {
																"oneOf": [
																	{
																		"$ref": "#/definitions/Extension"
																	},
																	{
																		"type": "null"
																	}
																]
															}
														}
													}
												},
												"headerField": {
													"type": "string"
												},
												"_headerField": {
													"type": "object",
													"properties": {
														"extension": {
															"type": "array",
															"items": {
																"oneOf": [
																	{
																		"$ref": "#/definitions/Extension"
																	},
																	{
																		"type": "null"
																	}
																]
															}
														}
													}
												},
												"minimumId": {
													"type": "string"
												},
												"_minimumId": {
													"type": "object",
													"properties": {
														"extension": {
															"type": "array",
															"items": {
																"oneOf": [
																	{
																		"$ref": "#/definitions/Extension"
																	},
																	{
																		"type": "null"
																	}
																]
															}
														}
													}
												},
												"navigationLinks": {
													"type": "boolean"
												},
												"_navigationLinks": {
													"type": "object",
													"properties": {
														"extension": {
															"type": "array",
															"items": {
																"oneOf": [
																	{
																		"$ref": "#/definitions/Extension"
																	},
																	{
																		"type": "null"
																	}
																]
															}
														}
													}
												},
												"operator": {
													"$ref": "#/definitions/code"
												},
												"_operator": {
													"type": "object",
													"properties": {
														"extension": {
															"type": "array",
															"items": {
																"oneOf": [
																	{
																		"$ref": "#/definitions/Extension"
																	},
																	{
																		"type": "null"
																	}
																]
															}
														}
													}
												},
												"path": {
													"type": "string"
												},
												"_path": {
													"type": "object",
													"properties": {
														"extension": {
															"type": "array",
															"items": {
																"oneOf": [
																	{
																		"$ref": "#/definitions/Extension"
																	},
																	{
																		"type": "null"
																	}
																]
															}
														}
													}
												},
												"resource": {
													"$ref": "#/definitions/code"
												},
												"_resource": {
													"type": "object",
													"properties": {
														"extension": {
															"type": "array",
															"items": {
																"oneOf": [
																	{
																		"$ref": "#/definitions/Extension"
																	},
																	{
																		"type": "null"
																	}
																]
															}
														}
													}
												},
												"response": {
													"$ref": "#/definitions/code"
												},
												"_response": {
													"type": "object",
													"properties": {
														"extension": {
															"type": "array",
															"items": {
																"oneOf": [
																	{
																		"$ref": "#/definitions/Extension"
																	},
																	{
																		"type": "null"
																	}
																]
															}
														}
													}
												},
												"responseCode": {
													"type": "string"
												},
												"_responseCode": {
													"type": "object",
													"properties": {
														"extension": {
															"type": "array",
															"items": {
																"oneOf": [
																	{
																		"$ref": "#/definitions/Extension"
																	},
																	{
																		"type": "null"
																	}
																]
															}
														}
													}
												},
												"sourceId": {
													"$ref": "#/definitions/fhir_id"
												},
												"_sourceId": {
													"type": "object",
													"properties": {
														"extension": {
															"type": "array",
															"items": {
																"oneOf": [
																	{
																		"$ref": "#/definitions/Extension"
																	},
																	{
																		"type": "null"
																	}
																]
															}
														}
													}
												},
												"validateProfileId": {
													"$ref": "#/definitions/fhir_id"
												},
												"_validateProfileId": {
													"type": "object",
													"properties": {
														"extension": {
															"type": "array",
															"items": {
																"oneOf": [
																	{
																		"$ref": "#/definitions/Extension"
																	},
																	{
																		"type": "null"
																	}
																]
															}
														}
													}
												},
												"value": {
													"type": "string"
												},
												"_value": {
													"type": "object",
													"properties": {
														"extension": {
															"type": "array",
															"items": {
																"oneOf": [
																	{
																		"$ref": "#/definitions/Extension"
																	},
																	{
																		"type": "null"
																	}
																]
															}
														}
													}
												},
												"warningOnly": {
													"type": "boolean"
												},
												"_warningOnly": {
													"type": "object",
													"properties": {
														"extension": {
															"type": "array",
															"items": {
																"oneOf": [
																	{
																		"$ref": "#/definitions/Extension"
																	},
																	{
																		"type": "null"
																	}
																]
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					},
					"test": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"name": {
									"type": "string"
								},
								"_name": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"description": {
									"type": "string"
								},
								"_description": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"metadata": {
									"type": "object",
									"additionalProperties": false,
									"properties": {
										"fhir_comments": {
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"action": {
									"type": "array",
									"minItems": 1,
									"items": {
										"type": "object",
										"properties": {
											"id": {
												"$ref": "#/definitions/fhir_id"
											},
											"_id": {
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											},
											"extension": {
												"type": "array",
												"minItems": 0,
												"items": {
													"oneOf": [
														{
															"$ref": "#/definitions/Extension"
														},
														{
															"type": "null"
														}
													]
												}
											},
											"modifierExtension": {
												"type": "array",
												"minItems": 0,
												"items": {
													"$ref": "#/definitions/Extension"
												}
											},
											"operation": {
												"type": "object",
												"additionalProperties": false,
												"properties": {
													"fhir_comments": {
														"type": "array",
														"items": {
															"type": "string"
														}
													}
												}
											},
											"assert": {
												"type": "object",
												"additionalProperties": false,
												"properties": {
													"fhir_comments": {
														"type": "array",
														"items": {
															"type": "string"
														}
													}
												}
											}
										}
									}
								}
							}
						}
					},
					"teardown": {
						"type": "object",
						"additionalProperties": false,
						"properties": {
							"fhir_comments": {
								"type": "array",
								"items": {
									"type": "string"
								}
							},
							"id": {
								"$ref": "#/definitions/fhir_id"
							},
							"_id": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							},
							"extension": {
								"type": "array",
								"minItems": 0,
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							},
							"modifierExtension": {
								"type": "array",
								"minItems": 0,
								"items": {
									"$ref": "#/definitions/Extension"
								}
							},
							"action": {
								"type": "array",
								"minItems": 1,
								"items": {
									"type": "object",
									"properties": {
										"id": {
											"$ref": "#/definitions/fhir_id"
										},
										"_id": {
											"type": "object",
											"properties": {
												"extension": {
													"type": "array",
													"items": {
														"oneOf": [
															{
																"$ref": "#/definitions/Extension"
															},
															{
																"type": "null"
															}
														]
													}
												}
											}
										},
										"extension": {
											"type": "array",
											"minItems": 0,
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										},
										"modifierExtension": {
											"type": "array",
											"minItems": 0,
											"items": {
												"$ref": "#/definitions/Extension"
											}
										},
										"operation": {
											"type": "object",
											"additionalProperties": false,
											"properties": {
												"fhir_comments": {
													"type": "array",
													"items": {
														"type": "string"
													}
												}
											}
										}
									}
								}
							}
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"VisionPrescription": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"meta": {
						"$ref": "#/definitions/Meta"
					},
					"implicitRules": {
						"$ref": "#/definitions/uri"
					},
					"_implicitRules": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"$ref": "#/definitions/Narrative"
					},
					"contained": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Resource"
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"identifier": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Identifier"
						}
					},
					"dateWritten": {
						"$ref": "#/definitions/dateTime"
					},
					"_dateWritten": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"patient": {
						"$ref": "#/definitions/Reference"
					},
					"prescriber": {
						"$ref": "#/definitions/Reference"
					},
					"encounter": {
						"$ref": "#/definitions/Reference"
					},
					"reasonCodeableConcept": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"reasonReference": {
						"$ref": "#/definitions/Reference"
					},
					"dispense": {
						"type": "array",
						"minItems": 0,
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"modifierExtension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"$ref": "#/definitions/Extension"
									}
								},
								"product": {
									"$ref": "#/definitions/Coding"
								},
								"eye": {
									"$ref": "#/definitions/code"
								},
								"_eye": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"sphere": {
									"$ref": "#/definitions/decimal"
								},
								"_sphere": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"cylinder": {
									"$ref": "#/definitions/decimal"
								},
								"_cylinder": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"axis": {
									"type": "integer"
								},
								"_axis": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"prism": {
									"$ref": "#/definitions/decimal"
								},
								"_prism": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"base": {
									"$ref": "#/definitions/code"
								},
								"_base": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"add": {
									"$ref": "#/definitions/decimal"
								},
								"_add": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"power": {
									"$ref": "#/definitions/decimal"
								},
								"_power": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"backCurve": {
									"$ref": "#/definitions/decimal"
								},
								"_backCurve": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"diameter": {
									"$ref": "#/definitions/decimal"
								},
								"_diameter": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"duration": {
									"$ref": "#/definitions/Quantity"
								},
								"color": {
									"type": "string"
								},
								"_color": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"brand": {
									"type": "string"
								},
								"_brand": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"notes": {
									"type": "string"
								},
								"_notes": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								}
							}
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"Identifier": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"use": {
						"$ref": "#/definitions/code"
					},
					"_use": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"type": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"system": {
						"$ref": "#/definitions/uri"
					},
					"_system": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"value": {
						"type": "string"
					},
					"_value": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"period": {
						"$ref": "#/definitions/Period"
					},
					"assigner": {
						"$ref": "#/definitions/Reference"
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"Coding": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"system": {
						"$ref": "#/definitions/uri"
					},
					"_system": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"version": {
						"type": "string"
					},
					"_version": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"code": {
						"$ref": "#/definitions/code"
					},
					"_code": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"display": {
						"type": "string"
					},
					"_display": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"userSelected": {
						"type": "boolean"
					},
					"_userSelected": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"Reference": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"reference": {
						"type": "string"
					},
					"_reference": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"display": {
						"type": "string"
					},
					"_display": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"Signature": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"type": {
						"type": "array",
						"minItems": 1,
						"items": {
							"$ref": "#/definitions/Coding"
						}
					},
					"when": {
						"$ref": "#/definitions/instant"
					},
					"_when": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"whoUri": {
						"$ref": "#/definitions/uri"
					},
					"_whoUri": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"whoReference": {
						"$ref": "#/definitions/Reference"
					},
					"contentType": {
						"$ref": "#/definitions/code"
					},
					"_contentType": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"blob": {
						"$ref": "#/definitions/base64Binary"
					},
					"_blob": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"SampledData": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"origin": {
						"$ref": "#/definitions/Quantity"
					},
					"period": {
						"$ref": "#/definitions/decimal"
					},
					"_period": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"factor": {
						"$ref": "#/definitions/decimal"
					},
					"_factor": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"lowerLimit": {
						"$ref": "#/definitions/decimal"
					},
					"_lowerLimit": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"upperLimit": {
						"$ref": "#/definitions/decimal"
					},
					"_upperLimit": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"dimensions": {
						"$ref": "#/definitions/positiveInt"
					},
					"_dimensions": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"data": {
						"type": "string"
					},
					"_data": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"Quantity": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"value": {
						"$ref": "#/definitions/decimal"
					},
					"_value": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"comparator": {
						"$ref": "#/definitions/code"
					},
					"_comparator": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"unit": {
						"type": "string"
					},
					"_unit": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"system": {
						"$ref": "#/definitions/uri"
					},
					"_system": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"code": {
						"$ref": "#/definitions/code"
					},
					"_code": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"Period": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"start": {
						"$ref": "#/definitions/dateTime"
					},
					"_start": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"end": {
						"$ref": "#/definitions/dateTime"
					},
					"_end": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"Attachment": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"contentType": {
						"$ref": "#/definitions/code"
					},
					"_contentType": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"language": {
						"$ref": "#/definitions/code"
					},
					"_language": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"data": {
						"$ref": "#/definitions/base64Binary"
					},
					"_data": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"url": {
						"$ref": "#/definitions/uri"
					},
					"_url": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"size": {
						"$ref": "#/definitions/unsignedInt"
					},
					"_size": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"hash": {
						"$ref": "#/definitions/base64Binary"
					},
					"_hash": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"title": {
						"type": "string"
					},
					"_title": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"creation": {
						"$ref": "#/definitions/dateTime"
					},
					"_creation": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"Ratio": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"numerator": {
						"$ref": "#/definitions/Quantity"
					},
					"denominator": {
						"$ref": "#/definitions/Quantity"
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"Range": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"low": {
						"$ref": "#/definitions/Quantity"
					},
					"high": {
						"$ref": "#/definitions/Quantity"
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"Annotation": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"authorReference": {
						"$ref": "#/definitions/Reference"
					},
					"authorString": {
						"type": "string"
					},
					"_authorString": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"time": {
						"$ref": "#/definitions/dateTime"
					},
					"_time": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"type": "string"
					},
					"_text": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"CodeableConcept": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"coding": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Coding"
						}
					},
					"text": {
						"type": "string"
					},
					"_text": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"Extension": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"url": {
						"$ref": "#/definitions/uri"
					},
					"_url": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"valueBoolean": {
						"type": "boolean"
					},
					"_valueBoolean": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"valueInteger": {
						"type": "integer"
					},
					"_valueInteger": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"valueDecimal": {
						"$ref": "#/definitions/decimal"
					},
					"_valueDecimal": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"valueBase64Binary": {
						"$ref": "#/definitions/base64Binary"
					},
					"_valueBase64Binary": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"valueInstant": {
						"$ref": "#/definitions/instant"
					},
					"_valueInstant": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"valueString": {
						"type": "string"
					},
					"_valueString": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"valueUri": {
						"$ref": "#/definitions/uri"
					},
					"_valueUri": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"valueDate": {
						"$ref": "#/definitions/date"
					},
					"_valueDate": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"valueDateTime": {
						"$ref": "#/definitions/dateTime"
					},
					"_valueDateTime": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"valueTime": {
						"$ref": "#/definitions/time"
					},
					"_valueTime": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"valueCode": {
						"$ref": "#/definitions/code"
					},
					"_valueCode": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"valueOid": {
						"$ref": "#/definitions/oid"
					},
					"_valueOid": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"valueId": {
						"$ref": "#/definitions/fhir_id"
					},
					"_valueId": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"valueUnsignedInt": {
						"$ref": "#/definitions/unsignedInt"
					},
					"_valueUnsignedInt": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"valuePositiveInt": {
						"$ref": "#/definitions/positiveInt"
					},
					"_valuePositiveInt": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"valueMarkdown": {
						"$ref": "#/definitions/markdown"
					},
					"_valueMarkdown": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"valueAnnotation": {
						"$ref": "#/definitions/Annotation"
					},
					"valueAttachment": {
						"$ref": "#/definitions/Attachment"
					},
					"valueIdentifier": {
						"$ref": "#/definitions/Identifier"
					},
					"valueCodeableConcept": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"valueCoding": {
						"$ref": "#/definitions/Coding"
					},
					"valueQuantity": {
						"$ref": "#/definitions/Quantity"
					},
					"valueRange": {
						"$ref": "#/definitions/Range"
					},
					"valuePeriod": {
						"$ref": "#/definitions/Period"
					},
					"valueRatio": {
						"$ref": "#/definitions/Ratio"
					},
					"valueSampledData": {
						"$ref": "#/definitions/SampledData"
					},
					"valueSignature": {
						"$ref": "#/definitions/Signature"
					},
					"valueHumanName": {
						"$ref": "#/definitions/HumanName"
					},
					"valueAddress": {
						"$ref": "#/definitions/Address"
					},
					"valueContactPoint": {
						"$ref": "#/definitions/ContactPoint"
					},
					"valueTiming": {
						"$ref": "#/definitions/Timing"
					},
					"valueReference": {
						"$ref": "#/definitions/Reference"
					},
					"valueMeta": {
						"$ref": "#/definitions/Meta"
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"BackboneElement": {
				"type": "object",
				"additionalProperties": true,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"modifierExtension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Extension"
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"Narrative": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"status": {
						"$ref": "#/definitions/code"
					},
					"_status": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"div": {
						"$ref": "#/definitions/xhtml"
					},
					"_div": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"Element": {
				"type": "object",
				"additionalProperties": true,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"HumanName": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"use": {
						"$ref": "#/definitions/code"
					},
					"_use": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"type": "string"
					},
					"_text": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"family": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"type": "string"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"_family": {
						"type": "array",
						"items": {
							"oneOf": [
								{
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								{
									"type": "null"
								}
							]
						}
					},
					"given": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"type": "string"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"_given": {
						"type": "array",
						"items": {
							"oneOf": [
								{
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								{
									"type": "null"
								}
							]
						}
					},
					"prefix": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"type": "string"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"_prefix": {
						"type": "array",
						"items": {
							"oneOf": [
								{
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								{
									"type": "null"
								}
							]
						}
					},
					"suffix": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"type": "string"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"_suffix": {
						"type": "array",
						"items": {
							"oneOf": [
								{
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								{
									"type": "null"
								}
							]
						}
					},
					"period": {
						"$ref": "#/definitions/Period"
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"ContactPoint": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"system": {
						"$ref": "#/definitions/code"
					},
					"_system": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"value": {
						"type": "string"
					},
					"_value": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"use": {
						"$ref": "#/definitions/code"
					},
					"_use": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"rank": {
						"$ref": "#/definitions/positiveInt"
					},
					"_rank": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"period": {
						"$ref": "#/definitions/Period"
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"Meta": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"versionId": {
						"$ref": "#/definitions/fhir_id"
					},
					"_versionId": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"lastUpdated": {
						"$ref": "#/definitions/instant"
					},
					"_lastUpdated": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"profile": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/uri"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"_profile": {
						"type": "array",
						"items": {
							"oneOf": [
								{
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								{
									"type": "null"
								}
							]
						}
					},
					"security": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Coding"
						}
					},
					"tag": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Coding"
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"Address": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"use": {
						"$ref": "#/definitions/code"
					},
					"_use": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"type": {
						"$ref": "#/definitions/code"
					},
					"_type": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"text": {
						"type": "string"
					},
					"_text": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"line": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"type": "string"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"_line": {
						"type": "array",
						"items": {
							"oneOf": [
								{
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								{
									"type": "null"
								}
							]
						}
					},
					"city": {
						"type": "string"
					},
					"_city": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"district": {
						"type": "string"
					},
					"_district": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"state": {
						"type": "string"
					},
					"_state": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"postalCode": {
						"type": "string"
					},
					"_postalCode": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"country": {
						"type": "string"
					},
					"_country": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"period": {
						"$ref": "#/definitions/Period"
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"Timing": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"event": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/dateTime"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"_event": {
						"type": "array",
						"items": {
							"oneOf": [
								{
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								{
									"type": "null"
								}
							]
						}
					},
					"repeat": {
						"$ref": "#/definitions/Element",
						"properties": {
							"id": {
								"$ref": "#/definitions/fhir_id"
							},
							"_id": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							},
							"extension": {
								"type": "array",
								"minItems": 0,
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							},
							"boundsQuantity": {
								"$ref": "#/definitions/Quantity"
							},
							"boundsRange": {
								"$ref": "#/definitions/Range"
							},
							"boundsPeriod": {
								"$ref": "#/definitions/Period"
							},
							"count": {
								"type": "integer"
							},
							"_count": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							},
							"duration": {
								"$ref": "#/definitions/decimal"
							},
							"_duration": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							},
							"durationMax": {
								"$ref": "#/definitions/decimal"
							},
							"_durationMax": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							},
							"durationUnits": {
								"$ref": "#/definitions/code"
							},
							"_durationUnits": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							},
							"frequency": {
								"type": "integer"
							},
							"_frequency": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							},
							"frequencyMax": {
								"type": "integer"
							},
							"_frequencyMax": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							},
							"period": {
								"$ref": "#/definitions/decimal"
							},
							"_period": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							},
							"periodMax": {
								"$ref": "#/definitions/decimal"
							},
							"_periodMax": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							},
							"periodUnits": {
								"$ref": "#/definitions/code"
							},
							"_periodUnits": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							},
							"when": {
								"$ref": "#/definitions/code"
							},
							"_when": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							}
						}
					},
					"code": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"ElementDefinition": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"path": {
						"type": "string"
					},
					"_path": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"representation": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/code"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"_representation": {
						"type": "array",
						"items": {
							"oneOf": [
								{
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								{
									"type": "null"
								}
							]
						}
					},
					"name": {
						"type": "string"
					},
					"_name": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"label": {
						"type": "string"
					},
					"_label": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"code": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Coding"
						}
					},
					"slicing": {
						"$ref": "#/definitions/Element",
						"properties": {
							"id": {
								"$ref": "#/definitions/fhir_id"
							},
							"_id": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							},
							"extension": {
								"type": "array",
								"minItems": 0,
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							},
							"discriminator": {
								"type": "array",
								"minItems": 0,
								"items": {
									"oneOf": [
										{
											"type": "string"
										},
										{
											"type": "null"
										}
									]
								}
							},
							"_discriminator": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"type": "object",
											"properties": {
												"extension": {
													"type": "array",
													"items": {
														"oneOf": [
															{
																"$ref": "#/definitions/Extension"
															},
															{
																"type": "null"
															}
														]
													}
												}
											}
										},
										{
											"type": "null"
										}
									]
								}
							},
							"description": {
								"type": "string"
							},
							"_description": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							},
							"ordered": {
								"type": "boolean"
							},
							"_ordered": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							},
							"rules": {
								"$ref": "#/definitions/code"
							},
							"_rules": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							}
						}
					},
					"short": {
						"type": "string"
					},
					"_short": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"definition": {
						"$ref": "#/definitions/markdown"
					},
					"_definition": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"comments": {
						"$ref": "#/definitions/markdown"
					},
					"_comments": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"requirements": {
						"$ref": "#/definitions/markdown"
					},
					"_requirements": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"alias": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"type": "string"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"_alias": {
						"type": "array",
						"items": {
							"oneOf": [
								{
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								{
									"type": "null"
								}
							]
						}
					},
					"min": {
						"type": "integer"
					},
					"_min": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"max": {
						"type": "string"
					},
					"_max": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"base": {
						"$ref": "#/definitions/Element",
						"properties": {
							"id": {
								"$ref": "#/definitions/fhir_id"
							},
							"_id": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							},
							"extension": {
								"type": "array",
								"minItems": 0,
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							},
							"path": {
								"type": "string"
							},
							"_path": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							},
							"min": {
								"type": "integer"
							},
							"_min": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							},
							"max": {
								"type": "string"
							},
							"_max": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							}
						}
					},
					"type": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Element",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"code": {
									"$ref": "#/definitions/code"
								},
								"_code": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"profile": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/uri"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"_profile": {
									"type": "array",
									"items": {
										"oneOf": [
											{
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											},
											{
												"type": "null"
											}
										]
									}
								},
								"aggregation": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/code"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"_aggregation": {
									"type": "array",
									"items": {
										"oneOf": [
											{
												"type": "object",
												"properties": {
													"extension": {
														"type": "array",
														"items": {
															"oneOf": [
																{
																	"$ref": "#/definitions/Extension"
																},
																{
																	"type": "null"
																}
															]
														}
													}
												}
											},
											{
												"type": "null"
											}
										]
									}
								}
							}
						}
					},
					"nameReference": {
						"type": "string"
					},
					"_nameReference": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"defaultValueBoolean": {
						"type": "boolean"
					},
					"_defaultValueBoolean": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"defaultValueInteger": {
						"type": "integer"
					},
					"_defaultValueInteger": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"defaultValueDecimal": {
						"$ref": "#/definitions/decimal"
					},
					"_defaultValueDecimal": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"defaultValueBase64Binary": {
						"$ref": "#/definitions/base64Binary"
					},
					"_defaultValueBase64Binary": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"defaultValueInstant": {
						"$ref": "#/definitions/instant"
					},
					"_defaultValueInstant": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"defaultValueString": {
						"type": "string"
					},
					"_defaultValueString": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"defaultValueUri": {
						"$ref": "#/definitions/uri"
					},
					"_defaultValueUri": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"defaultValueDate": {
						"$ref": "#/definitions/date"
					},
					"_defaultValueDate": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"defaultValueDateTime": {
						"$ref": "#/definitions/dateTime"
					},
					"_defaultValueDateTime": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"defaultValueTime": {
						"$ref": "#/definitions/time"
					},
					"_defaultValueTime": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"defaultValueCode": {
						"$ref": "#/definitions/code"
					},
					"_defaultValueCode": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"defaultValueOid": {
						"$ref": "#/definitions/oid"
					},
					"_defaultValueOid": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"defaultValueId": {
						"$ref": "#/definitions/fhir_id"
					},
					"_defaultValueId": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"defaultValueUnsignedInt": {
						"$ref": "#/definitions/unsignedInt"
					},
					"_defaultValueUnsignedInt": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"defaultValuePositiveInt": {
						"$ref": "#/definitions/positiveInt"
					},
					"_defaultValuePositiveInt": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"defaultValueMarkdown": {
						"$ref": "#/definitions/markdown"
					},
					"_defaultValueMarkdown": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"defaultValueAnnotation": {
						"$ref": "#/definitions/Annotation"
					},
					"defaultValueAttachment": {
						"$ref": "#/definitions/Attachment"
					},
					"defaultValueIdentifier": {
						"$ref": "#/definitions/Identifier"
					},
					"defaultValueCodeableConcept": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"defaultValueCoding": {
						"$ref": "#/definitions/Coding"
					},
					"defaultValueQuantity": {
						"$ref": "#/definitions/Quantity"
					},
					"defaultValueRange": {
						"$ref": "#/definitions/Range"
					},
					"defaultValuePeriod": {
						"$ref": "#/definitions/Period"
					},
					"defaultValueRatio": {
						"$ref": "#/definitions/Ratio"
					},
					"defaultValueSampledData": {
						"$ref": "#/definitions/SampledData"
					},
					"defaultValueSignature": {
						"$ref": "#/definitions/Signature"
					},
					"defaultValueHumanName": {
						"$ref": "#/definitions/HumanName"
					},
					"defaultValueAddress": {
						"$ref": "#/definitions/Address"
					},
					"defaultValueContactPoint": {
						"$ref": "#/definitions/ContactPoint"
					},
					"defaultValueTiming": {
						"$ref": "#/definitions/Timing"
					},
					"defaultValueReference": {
						"$ref": "#/definitions/Reference"
					},
					"defaultValueMeta": {
						"$ref": "#/definitions/Meta"
					},
					"meaningWhenMissing": {
						"$ref": "#/definitions/markdown"
					},
					"_meaningWhenMissing": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"fixedBoolean": {
						"type": "boolean"
					},
					"_fixedBoolean": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"fixedInteger": {
						"type": "integer"
					},
					"_fixedInteger": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"fixedDecimal": {
						"$ref": "#/definitions/decimal"
					},
					"_fixedDecimal": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"fixedBase64Binary": {
						"$ref": "#/definitions/base64Binary"
					},
					"_fixedBase64Binary": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"fixedInstant": {
						"$ref": "#/definitions/instant"
					},
					"_fixedInstant": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"fixedString": {
						"type": "string"
					},
					"_fixedString": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"fixedUri": {
						"$ref": "#/definitions/uri"
					},
					"_fixedUri": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"fixedDate": {
						"$ref": "#/definitions/date"
					},
					"_fixedDate": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"fixedDateTime": {
						"$ref": "#/definitions/dateTime"
					},
					"_fixedDateTime": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"fixedTime": {
						"$ref": "#/definitions/time"
					},
					"_fixedTime": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"fixedCode": {
						"$ref": "#/definitions/code"
					},
					"_fixedCode": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"fixedOid": {
						"$ref": "#/definitions/oid"
					},
					"_fixedOid": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"fixedId": {
						"$ref": "#/definitions/fhir_id"
					},
					"_fixedId": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"fixedUnsignedInt": {
						"$ref": "#/definitions/unsignedInt"
					},
					"_fixedUnsignedInt": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"fixedPositiveInt": {
						"$ref": "#/definitions/positiveInt"
					},
					"_fixedPositiveInt": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"fixedMarkdown": {
						"$ref": "#/definitions/markdown"
					},
					"_fixedMarkdown": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"fixedAnnotation": {
						"$ref": "#/definitions/Annotation"
					},
					"fixedAttachment": {
						"$ref": "#/definitions/Attachment"
					},
					"fixedIdentifier": {
						"$ref": "#/definitions/Identifier"
					},
					"fixedCodeableConcept": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"fixedCoding": {
						"$ref": "#/definitions/Coding"
					},
					"fixedQuantity": {
						"$ref": "#/definitions/Quantity"
					},
					"fixedRange": {
						"$ref": "#/definitions/Range"
					},
					"fixedPeriod": {
						"$ref": "#/definitions/Period"
					},
					"fixedRatio": {
						"$ref": "#/definitions/Ratio"
					},
					"fixedSampledData": {
						"$ref": "#/definitions/SampledData"
					},
					"fixedSignature": {
						"$ref": "#/definitions/Signature"
					},
					"fixedHumanName": {
						"$ref": "#/definitions/HumanName"
					},
					"fixedAddress": {
						"$ref": "#/definitions/Address"
					},
					"fixedContactPoint": {
						"$ref": "#/definitions/ContactPoint"
					},
					"fixedTiming": {
						"$ref": "#/definitions/Timing"
					},
					"fixedReference": {
						"$ref": "#/definitions/Reference"
					},
					"fixedMeta": {
						"$ref": "#/definitions/Meta"
					},
					"patternBoolean": {
						"type": "boolean"
					},
					"_patternBoolean": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"patternInteger": {
						"type": "integer"
					},
					"_patternInteger": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"patternDecimal": {
						"$ref": "#/definitions/decimal"
					},
					"_patternDecimal": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"patternBase64Binary": {
						"$ref": "#/definitions/base64Binary"
					},
					"_patternBase64Binary": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"patternInstant": {
						"$ref": "#/definitions/instant"
					},
					"_patternInstant": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"patternString": {
						"type": "string"
					},
					"_patternString": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"patternUri": {
						"$ref": "#/definitions/uri"
					},
					"_patternUri": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"patternDate": {
						"$ref": "#/definitions/date"
					},
					"_patternDate": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"patternDateTime": {
						"$ref": "#/definitions/dateTime"
					},
					"_patternDateTime": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"patternTime": {
						"$ref": "#/definitions/time"
					},
					"_patternTime": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"patternCode": {
						"$ref": "#/definitions/code"
					},
					"_patternCode": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"patternOid": {
						"$ref": "#/definitions/oid"
					},
					"_patternOid": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"patternId": {
						"$ref": "#/definitions/fhir_id"
					},
					"_patternId": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"patternUnsignedInt": {
						"$ref": "#/definitions/unsignedInt"
					},
					"_patternUnsignedInt": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"patternPositiveInt": {
						"$ref": "#/definitions/positiveInt"
					},
					"_patternPositiveInt": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"patternMarkdown": {
						"$ref": "#/definitions/markdown"
					},
					"_patternMarkdown": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"patternAnnotation": {
						"$ref": "#/definitions/Annotation"
					},
					"patternAttachment": {
						"$ref": "#/definitions/Attachment"
					},
					"patternIdentifier": {
						"$ref": "#/definitions/Identifier"
					},
					"patternCodeableConcept": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"patternCoding": {
						"$ref": "#/definitions/Coding"
					},
					"patternQuantity": {
						"$ref": "#/definitions/Quantity"
					},
					"patternRange": {
						"$ref": "#/definitions/Range"
					},
					"patternPeriod": {
						"$ref": "#/definitions/Period"
					},
					"patternRatio": {
						"$ref": "#/definitions/Ratio"
					},
					"patternSampledData": {
						"$ref": "#/definitions/SampledData"
					},
					"patternSignature": {
						"$ref": "#/definitions/Signature"
					},
					"patternHumanName": {
						"$ref": "#/definitions/HumanName"
					},
					"patternAddress": {
						"$ref": "#/definitions/Address"
					},
					"patternContactPoint": {
						"$ref": "#/definitions/ContactPoint"
					},
					"patternTiming": {
						"$ref": "#/definitions/Timing"
					},
					"patternReference": {
						"$ref": "#/definitions/Reference"
					},
					"patternMeta": {
						"$ref": "#/definitions/Meta"
					},
					"exampleBoolean": {
						"type": "boolean"
					},
					"_exampleBoolean": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"exampleInteger": {
						"type": "integer"
					},
					"_exampleInteger": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"exampleDecimal": {
						"$ref": "#/definitions/decimal"
					},
					"_exampleDecimal": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"exampleBase64Binary": {
						"$ref": "#/definitions/base64Binary"
					},
					"_exampleBase64Binary": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"exampleInstant": {
						"$ref": "#/definitions/instant"
					},
					"_exampleInstant": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"exampleString": {
						"type": "string"
					},
					"_exampleString": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"exampleUri": {
						"$ref": "#/definitions/uri"
					},
					"_exampleUri": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"exampleDate": {
						"$ref": "#/definitions/date"
					},
					"_exampleDate": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"exampleDateTime": {
						"$ref": "#/definitions/dateTime"
					},
					"_exampleDateTime": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"exampleTime": {
						"$ref": "#/definitions/time"
					},
					"_exampleTime": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"exampleCode": {
						"$ref": "#/definitions/code"
					},
					"_exampleCode": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"exampleOid": {
						"$ref": "#/definitions/oid"
					},
					"_exampleOid": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"exampleId": {
						"$ref": "#/definitions/fhir_id"
					},
					"_exampleId": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"exampleUnsignedInt": {
						"$ref": "#/definitions/unsignedInt"
					},
					"_exampleUnsignedInt": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"examplePositiveInt": {
						"$ref": "#/definitions/positiveInt"
					},
					"_examplePositiveInt": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"exampleMarkdown": {
						"$ref": "#/definitions/markdown"
					},
					"_exampleMarkdown": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"exampleAnnotation": {
						"$ref": "#/definitions/Annotation"
					},
					"exampleAttachment": {
						"$ref": "#/definitions/Attachment"
					},
					"exampleIdentifier": {
						"$ref": "#/definitions/Identifier"
					},
					"exampleCodeableConcept": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"exampleCoding": {
						"$ref": "#/definitions/Coding"
					},
					"exampleQuantity": {
						"$ref": "#/definitions/Quantity"
					},
					"exampleRange": {
						"$ref": "#/definitions/Range"
					},
					"examplePeriod": {
						"$ref": "#/definitions/Period"
					},
					"exampleRatio": {
						"$ref": "#/definitions/Ratio"
					},
					"exampleSampledData": {
						"$ref": "#/definitions/SampledData"
					},
					"exampleSignature": {
						"$ref": "#/definitions/Signature"
					},
					"exampleHumanName": {
						"$ref": "#/definitions/HumanName"
					},
					"exampleAddress": {
						"$ref": "#/definitions/Address"
					},
					"exampleContactPoint": {
						"$ref": "#/definitions/ContactPoint"
					},
					"exampleTiming": {
						"$ref": "#/definitions/Timing"
					},
					"exampleReference": {
						"$ref": "#/definitions/Reference"
					},
					"exampleMeta": {
						"$ref": "#/definitions/Meta"
					},
					"minValueBoolean": {
						"type": "boolean"
					},
					"_minValueBoolean": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"minValueInteger": {
						"type": "integer"
					},
					"_minValueInteger": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"minValueDecimal": {
						"$ref": "#/definitions/decimal"
					},
					"_minValueDecimal": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"minValueBase64Binary": {
						"$ref": "#/definitions/base64Binary"
					},
					"_minValueBase64Binary": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"minValueInstant": {
						"$ref": "#/definitions/instant"
					},
					"_minValueInstant": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"minValueString": {
						"type": "string"
					},
					"_minValueString": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"minValueUri": {
						"$ref": "#/definitions/uri"
					},
					"_minValueUri": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"minValueDate": {
						"$ref": "#/definitions/date"
					},
					"_minValueDate": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"minValueDateTime": {
						"$ref": "#/definitions/dateTime"
					},
					"_minValueDateTime": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"minValueTime": {
						"$ref": "#/definitions/time"
					},
					"_minValueTime": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"minValueCode": {
						"$ref": "#/definitions/code"
					},
					"_minValueCode": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"minValueOid": {
						"$ref": "#/definitions/oid"
					},
					"_minValueOid": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"minValueId": {
						"$ref": "#/definitions/fhir_id"
					},
					"_minValueId": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"minValueUnsignedInt": {
						"$ref": "#/definitions/unsignedInt"
					},
					"_minValueUnsignedInt": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"minValuePositiveInt": {
						"$ref": "#/definitions/positiveInt"
					},
					"_minValuePositiveInt": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"minValueMarkdown": {
						"$ref": "#/definitions/markdown"
					},
					"_minValueMarkdown": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"minValueAnnotation": {
						"$ref": "#/definitions/Annotation"
					},
					"minValueAttachment": {
						"$ref": "#/definitions/Attachment"
					},
					"minValueIdentifier": {
						"$ref": "#/definitions/Identifier"
					},
					"minValueCodeableConcept": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"minValueCoding": {
						"$ref": "#/definitions/Coding"
					},
					"minValueQuantity": {
						"$ref": "#/definitions/Quantity"
					},
					"minValueRange": {
						"$ref": "#/definitions/Range"
					},
					"minValuePeriod": {
						"$ref": "#/definitions/Period"
					},
					"minValueRatio": {
						"$ref": "#/definitions/Ratio"
					},
					"minValueSampledData": {
						"$ref": "#/definitions/SampledData"
					},
					"minValueSignature": {
						"$ref": "#/definitions/Signature"
					},
					"minValueHumanName": {
						"$ref": "#/definitions/HumanName"
					},
					"minValueAddress": {
						"$ref": "#/definitions/Address"
					},
					"minValueContactPoint": {
						"$ref": "#/definitions/ContactPoint"
					},
					"minValueTiming": {
						"$ref": "#/definitions/Timing"
					},
					"minValueReference": {
						"$ref": "#/definitions/Reference"
					},
					"minValueMeta": {
						"$ref": "#/definitions/Meta"
					},
					"maxValueBoolean": {
						"type": "boolean"
					},
					"_maxValueBoolean": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"maxValueInteger": {
						"type": "integer"
					},
					"_maxValueInteger": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"maxValueDecimal": {
						"$ref": "#/definitions/decimal"
					},
					"_maxValueDecimal": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"maxValueBase64Binary": {
						"$ref": "#/definitions/base64Binary"
					},
					"_maxValueBase64Binary": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"maxValueInstant": {
						"$ref": "#/definitions/instant"
					},
					"_maxValueInstant": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"maxValueString": {
						"type": "string"
					},
					"_maxValueString": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"maxValueUri": {
						"$ref": "#/definitions/uri"
					},
					"_maxValueUri": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"maxValueDate": {
						"$ref": "#/definitions/date"
					},
					"_maxValueDate": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"maxValueDateTime": {
						"$ref": "#/definitions/dateTime"
					},
					"_maxValueDateTime": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"maxValueTime": {
						"$ref": "#/definitions/time"
					},
					"_maxValueTime": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"maxValueCode": {
						"$ref": "#/definitions/code"
					},
					"_maxValueCode": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"maxValueOid": {
						"$ref": "#/definitions/oid"
					},
					"_maxValueOid": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"maxValueId": {
						"$ref": "#/definitions/fhir_id"
					},
					"_maxValueId": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"maxValueUnsignedInt": {
						"$ref": "#/definitions/unsignedInt"
					},
					"_maxValueUnsignedInt": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"maxValuePositiveInt": {
						"$ref": "#/definitions/positiveInt"
					},
					"_maxValuePositiveInt": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"maxValueMarkdown": {
						"$ref": "#/definitions/markdown"
					},
					"_maxValueMarkdown": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"maxValueAnnotation": {
						"$ref": "#/definitions/Annotation"
					},
					"maxValueAttachment": {
						"$ref": "#/definitions/Attachment"
					},
					"maxValueIdentifier": {
						"$ref": "#/definitions/Identifier"
					},
					"maxValueCodeableConcept": {
						"$ref": "#/definitions/CodeableConcept"
					},
					"maxValueCoding": {
						"$ref": "#/definitions/Coding"
					},
					"maxValueQuantity": {
						"$ref": "#/definitions/Quantity"
					},
					"maxValueRange": {
						"$ref": "#/definitions/Range"
					},
					"maxValuePeriod": {
						"$ref": "#/definitions/Period"
					},
					"maxValueRatio": {
						"$ref": "#/definitions/Ratio"
					},
					"maxValueSampledData": {
						"$ref": "#/definitions/SampledData"
					},
					"maxValueSignature": {
						"$ref": "#/definitions/Signature"
					},
					"maxValueHumanName": {
						"$ref": "#/definitions/HumanName"
					},
					"maxValueAddress": {
						"$ref": "#/definitions/Address"
					},
					"maxValueContactPoint": {
						"$ref": "#/definitions/ContactPoint"
					},
					"maxValueTiming": {
						"$ref": "#/definitions/Timing"
					},
					"maxValueReference": {
						"$ref": "#/definitions/Reference"
					},
					"maxValueMeta": {
						"$ref": "#/definitions/Meta"
					},
					"maxLength": {
						"type": "integer"
					},
					"_maxLength": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"condition": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/fhir_id"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"_condition": {
						"type": "array",
						"items": {
							"oneOf": [
								{
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								{
									"type": "null"
								}
							]
						}
					},
					"constraint": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Element",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"key": {
									"$ref": "#/definitions/fhir_id"
								},
								"_key": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"requirements": {
									"type": "string"
								},
								"_requirements": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"severity": {
									"$ref": "#/definitions/code"
								},
								"_severity": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"human": {
									"type": "string"
								},
								"_human": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"xpath": {
									"type": "string"
								},
								"_xpath": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								}
							}
						}
					},
					"mustSupport": {
						"type": "boolean"
					},
					"_mustSupport": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"isModifier": {
						"type": "boolean"
					},
					"_isModifier": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"isSummary": {
						"type": "boolean"
					},
					"_isSummary": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"binding": {
						"$ref": "#/definitions/Element",
						"properties": {
							"id": {
								"$ref": "#/definitions/fhir_id"
							},
							"_id": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							},
							"extension": {
								"type": "array",
								"minItems": 0,
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							},
							"strength": {
								"$ref": "#/definitions/code"
							},
							"_strength": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							},
							"description": {
								"type": "string"
							},
							"_description": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							},
							"valueSetUri": {
								"$ref": "#/definitions/uri"
							},
							"_valueSetUri": {
								"type": "object",
								"properties": {
									"extension": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"$ref": "#/definitions/Extension"
												},
												{
													"type": "null"
												}
											]
										}
									}
								}
							},
							"valueSetReference": {
								"$ref": "#/definitions/Reference"
							}
						}
					},
					"mapping": {
						"type": "array",
						"minItems": 0,
						"items": {
							"$ref": "#/definitions/Element",
							"properties": {
								"id": {
									"$ref": "#/definitions/fhir_id"
								},
								"_id": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"extension": {
									"type": "array",
									"minItems": 0,
									"items": {
										"oneOf": [
											{
												"$ref": "#/definitions/Extension"
											},
											{
												"type": "null"
											}
										]
									}
								},
								"identity": {
									"$ref": "#/definitions/fhir_id"
								},
								"_identity": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"language": {
									"$ref": "#/definitions/code"
								},
								"_language": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								},
								"map": {
									"type": "string"
								},
								"_map": {
									"type": "object",
									"properties": {
										"extension": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/definitions/Extension"
													},
													{
														"type": "null"
													}
												]
											}
										}
									}
								}
							}
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"Money": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"value": {
						"$ref": "#/definitions/decimal"
					},
					"_value": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"comparator": {
						"$ref": "#/definitions/code"
					},
					"_comparator": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"unit": {
						"type": "string"
					},
					"_unit": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"system": {
						"$ref": "#/definitions/uri"
					},
					"_system": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"code": {
						"$ref": "#/definitions/code"
					},
					"_code": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"SimpleQuantity": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"value": {
						"$ref": "#/definitions/decimal"
					},
					"_value": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"comparator": {
						"$ref": "#/definitions/code"
					},
					"_comparator": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"unit": {
						"type": "string"
					},
					"_unit": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"system": {
						"$ref": "#/definitions/uri"
					},
					"_system": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"code": {
						"$ref": "#/definitions/code"
					},
					"_code": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"Duration": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"value": {
						"$ref": "#/definitions/decimal"
					},
					"_value": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"comparator": {
						"$ref": "#/definitions/code"
					},
					"_comparator": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"unit": {
						"type": "string"
					},
					"_unit": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"system": {
						"$ref": "#/definitions/uri"
					},
					"_system": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"code": {
						"$ref": "#/definitions/code"
					},
					"_code": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"Count": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"value": {
						"$ref": "#/definitions/decimal"
					},
					"_value": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"comparator": {
						"$ref": "#/definitions/code"
					},
					"_comparator": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"unit": {
						"type": "string"
					},
					"_unit": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"system": {
						"$ref": "#/definitions/uri"
					},
					"_system": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"code": {
						"$ref": "#/definitions/code"
					},
					"_code": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"Distance": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"value": {
						"$ref": "#/definitions/decimal"
					},
					"_value": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"comparator": {
						"$ref": "#/definitions/code"
					},
					"_comparator": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"unit": {
						"type": "string"
					},
					"_unit": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"system": {
						"$ref": "#/definitions/uri"
					},
					"_system": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"code": {
						"$ref": "#/definitions/code"
					},
					"_code": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"Age": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"fhir_comments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"$ref": "#/definitions/fhir_id"
					},
					"_id": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"extension": {
						"type": "array",
						"minItems": 0,
						"items": {
							"oneOf": [
								{
									"$ref": "#/definitions/Extension"
								},
								{
									"type": "null"
								}
							]
						}
					},
					"value": {
						"$ref": "#/definitions/decimal"
					},
					"_value": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"comparator": {
						"$ref": "#/definitions/code"
					},
					"_comparator": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"unit": {
						"type": "string"
					},
					"_unit": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"system": {
						"$ref": "#/definitions/uri"
					},
					"_system": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"code": {
						"$ref": "#/definitions/code"
					},
					"_code": {
						"type": "object",
						"properties": {
							"extension": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"$ref": "#/definitions/Extension"
										},
										{
											"type": "null"
										}
									]
								}
							}
						}
					},
					"resourceType": {
						"type": "string"
					}
				}
			},
			"date": {
				"type": "string",
				"pattern": "-?[0-9]{4}(-(0[1-9]|1[0-2])(-(0[0-9]|[1-2][0-9]|3[0-1]))?)?"
			},
			"decimal": {
				"type": "number"
			},
			"uri": {
				"type": "string"
			},
			"dateTime": {
				"type": "string",
				"pattern": "-?[0-9]{4}(-(0[1-9]|1[0-2])(-(0[0-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\\.[0-9]+)?([Z+-]((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?)?)?)?"
			},
			"instant": {
				"type": "string",
				"pattern": "-?[0-9]{4}(-(0[1-9]|1[0-2])(-(0[0-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\\.[0-9]+)?([Z+-]((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?)?)?)?"
			},
			"time": {
				"type": "string",
				"pattern": "([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\\.[0-9]+)?"
			},
			"code": {
				"type": "string",
				"pattern": "[^s]+([s]+[^s]+)*"
			},
			"markdown": {
				"type": "string"
			},
			"fhir_id": {
				"type": "string",
				"pattern": "[A-Za-z0-9-.]{1,64}"
			},
			"oid": {
				"type": "string",
				"pattern": "urn:oid:[0-2](.[1-9]d*)+"
			},
			"xhtml": {
				"type": "string"
			},
			"unsignedInt": {
				"type": "integer",
				"minimum": 0,
				"exclusiveMinimum": true
			},
			"positiveInt": {
				"type": "integer",
				"minimum": 0,
				"exclusiveMinimum": true
			},
			"uuid": {
				"type": "string"
			},
			"base64Binary": {
				"type": "string",
				"media": {
					"binaryEncoding": "base64"
				}
			}
		}
	};

/***/ }
/******/ ]);